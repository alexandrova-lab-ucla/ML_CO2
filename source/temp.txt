<tensorflow.python.training.saver.Saver object at 0x7efb98563d10>
[name: "Placeholder"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 20
      }
      dim {
        size: 9
      }
      dim {
        size: 22
      }
    }
  }
}
, name: "Placeholder_1"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 20
      }
      dim {
        size: 9
      }
      dim {
        size: 1
      }
    }
  }
}
, name: "Placeholder_2"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 20
      }
      dim {
        size: 9
      }
      dim {
        size: 9
      }
      dim {
        size: 10
      }
    }
  }
}
, name: "Placeholder_3"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 20
      }
      dim {
        size: 9
      }
      dim {
        size: 3
      }
    }
  }
}
, name: "pos_to_proximity/ExpandDims/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "pos_to_proximity/ExpandDims"
op: "ExpandDims"
input: "Placeholder_3"
input: "pos_to_proximity/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "pos_to_proximity/ExpandDims_1/dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "pos_to_proximity/ExpandDims_1"
op: "ExpandDims"
input: "Placeholder_3"
input: "pos_to_proximity/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "pos_to_proximity/Sub"
op: "Sub"
input: "pos_to_proximity/ExpandDims"
input: "pos_to_proximity/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "pos_to_proximity/Square"
op: "Square"
input: "pos_to_proximity/Sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "pos_to_proximity/Sum/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "pos_to_proximity/Sum"
op: "Sum"
input: "pos_to_proximity/Square"
input: "pos_to_proximity/Sum/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "pos_to_proximity/add/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "pos_to_proximity/add"
op: "Add"
input: "pos_to_proximity/Sum"
input: "pos_to_proximity/add/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "pos_to_proximity/Sqrt"
op: "Sqrt"
input: "pos_to_proximity/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "pos_to_proximity/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\000"
    }
  }
}
, name: "pos_to_proximity/Reshape"
op: "Reshape"
input: "pos_to_proximity/Sqrt"
input: "pos_to_proximity/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "pos_to_proximity/Mul"
op: "Mul"
input: "pos_to_proximity/Reshape"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "pos_to_proximity/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
    }
  }
}
, name: "pos_to_proximity/transpose"
op: "Transpose"
input: "Placeholder_1"
input: "pos_to_proximity/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "pos_to_proximity/Mul_1"
op: "Mul"
input: "pos_to_proximity/Mul"
input: "pos_to_proximity/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "pos_to_proximity/MatrixSetDiag/diagonal"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 20
        }
        dim {
          size: 9
        }
      }
      tensor_content
    }
  }
}
, name: "pos_to_proximity/MatrixSetDiag"
op: "MatrixSetDiag"
input: "pos_to_proximity/Mul_1"
input: "pos_to_proximity/MatrixSetDiag/diagonal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Placeholder_4"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 20
      }
      dim {
        size: 9
      }
      dim {
        size: 9
      }
    }
  }
}
, name: "Placeholder_5"
op: "Placeholder"
attr {
  key: "dtype"
  value {
    type: DT_BOOL
  }
}
attr {
  key: "shape"
  value {
    shape {
      unknown_rank: true
    }
  }
}
, name: "transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose"
op: "Transpose"
input: "Placeholder_1"
input: "transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Sum/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "Sum"
op: "Sum"
input: "transpose"
input: "Sum/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000\026\000\000\000"
    }
  }
}
, name: "Reshape"
op: "Reshape"
input: "Placeholder"
input: "Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "dense/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\026\000\000\0002\000\000\000"
    }
  }
}
, name: "dense/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.28867512941360474
    }
  }
}
, name: "dense/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.28867512941360474
    }
  }
}
, name: "dense/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "dense/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 34
  }
}
, name: "dense/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "dense/kernel/Initializer/random_uniform/max"
input: "dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
, name: "dense/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "dense/kernel/Initializer/random_uniform/RandomUniform"
input: "dense/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
, name: "dense/kernel/Initializer/random_uniform"
op: "Add"
input: "dense/kernel/Initializer/random_uniform/mul"
input: "dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
, name: "dense/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 22
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "dense/kernel/Assign"
op: "Assign"
input: "dense/kernel"
input: "dense/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "dense/kernel/read"
op: "Identity"
input: "dense/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
, name: "dense/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "dense/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "dense/bias/Assign"
op: "Assign"
input: "dense/bias"
input: "dense/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "dense/bias/read"
op: "Identity"
input: "dense/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
, name: "dense/MatMul"
op: "MatMul"
input: "Reshape"
input: "dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "dense/BiasAdd"
op: "BiasAdd"
input: "dense/MatMul"
input: "dense/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "dense/Sigmoid"
op: "Sigmoid"
input: "dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "dense_1/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "2\000\000\0002\000\000\000"
    }
  }
}
, name: "dense_1/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.24494896829128265
    }
  }
}
, name: "dense_1/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.24494896829128265
    }
  }
}
, name: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "dense_1/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 51
  }
}
, name: "dense_1/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "dense_1/kernel/Initializer/random_uniform/max"
input: "dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
, name: "dense_1/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "dense_1/kernel/Initializer/random_uniform/RandomUniform"
input: "dense_1/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
, name: "dense_1/kernel/Initializer/random_uniform"
op: "Add"
input: "dense_1/kernel/Initializer/random_uniform/mul"
input: "dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
, name: "dense_1/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "dense_1/kernel/Assign"
op: "Assign"
input: "dense_1/kernel"
input: "dense_1/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "dense_1/kernel/read"
op: "Identity"
input: "dense_1/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
, name: "dense_1/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "dense_1/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "dense_1/bias/Assign"
op: "Assign"
input: "dense_1/bias"
input: "dense_1/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "dense_1/bias/read"
op: "Identity"
input: "dense_1/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
, name: "dense_1/MatMul"
op: "MatMul"
input: "dense/Sigmoid"
input: "dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "dense_1/BiasAdd"
op: "BiasAdd"
input: "dense_1/MatMul"
input: "dense_1/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "dense_1/Tanh"
op: "Tanh"
input: "dense_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_1"
op: "Reshape"
input: "dense_1/Tanh"
input: "Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Mul"
op: "Mul"
input: "Reshape_1"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_2"
op: "Reshape"
input: "Sum"
input: "Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Tile/multiples"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\001\000\000\000\t\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "Tile"
op: "Tile"
input: "Reshape_2"
input: "Tile/multiples"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "concat"
op: "ConcatV2"
input: "Placeholder_2"
input: "Tile"
input: "concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpriorZ/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "T\006\000\000\013\000\000\000"
    }
  }
}
, name: "edge_nnpriorZ/Reshape"
op: "Reshape"
input: "concat"
input: "edge_nnpriorZ/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\013\000\000\000d\000\000\000"
    }
  }
}
, name: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.2324952781200409
    }
  }
}
, name: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.2324952781200409
    }
  }
}
, name: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 79
  }
}
, name: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform/max"
input: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
, name: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform/RandomUniform"
input: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
, name: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform"
op: "Add"
input: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform/mul"
input: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
, name: "edge_nnpriorZ/dense/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 11
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpriorZ/dense/kernel/Assign"
op: "Assign"
input: "edge_nnpriorZ/dense/kernel"
input: "edge_nnpriorZ/dense/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpriorZ/dense/kernel/read"
op: "Identity"
input: "edge_nnpriorZ/dense/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
, name: "edge_nnpriorZ/dense/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpriorZ/dense/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpriorZ/dense/bias/Assign"
op: "Assign"
input: "edge_nnpriorZ/dense/bias"
input: "edge_nnpriorZ/dense/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpriorZ/dense/bias/read"
op: "Identity"
input: "edge_nnpriorZ/dense/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
, name: "edge_nnpriorZ/dense/MatMul"
op: "MatMul"
input: "edge_nnpriorZ/Reshape"
input: "edge_nnpriorZ/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "edge_nnpriorZ/dense/BiasAdd"
op: "BiasAdd"
input: "edge_nnpriorZ/dense/MatMul"
input: "edge_nnpriorZ/dense/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "edge_nnpriorZ/dense/Sigmoid"
op: "Sigmoid"
input: "edge_nnpriorZ/dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000\304\t\000\000"
    }
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.04803844541311264
    }
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.04803844541311264
    }
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 96
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform/max"
input: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform/RandomUniform"
input: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform"
op: "Add"
input: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform/mul"
input: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
, name: "edge_nnpriorZ/dense_1/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Assign"
op: "Assign"
input: "edge_nnpriorZ/dense_1/kernel"
input: "edge_nnpriorZ/dense_1/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/read"
op: "Identity"
input: "edge_nnpriorZ/dense_1/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2500
    }
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Initializer/zeros"
op: "Fill"
input: "edge_nnpriorZ/dense_1/bias/Initializer/zeros/shape_as_tensor"
input: "edge_nnpriorZ/dense_1/bias/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpriorZ/dense_1/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Assign"
op: "Assign"
input: "edge_nnpriorZ/dense_1/bias"
input: "edge_nnpriorZ/dense_1/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpriorZ/dense_1/bias/read"
op: "Identity"
input: "edge_nnpriorZ/dense_1/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
, name: "edge_nnpriorZ/dense_1/MatMul"
op: "MatMul"
input: "edge_nnpriorZ/dense/Sigmoid"
input: "edge_nnpriorZ/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "edge_nnpriorZ/dense_1/BiasAdd"
op: "BiasAdd"
input: "edge_nnpriorZ/dense_1/MatMul"
input: "edge_nnpriorZ/dense_1/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "edge_nnpriorZ/dense_1/Tanh"
op: "Tanh"
input: "edge_nnpriorZ/dense_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "edge_nnpriorZ/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "edge_nnpriorZ/Reshape_1"
op: "Reshape"
input: "edge_nnpriorZ/dense_1/Tanh"
input: "edge_nnpriorZ/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_3/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_3"
op: "Reshape"
input: "edge_nnpriorZ/Reshape_1"
input: "Reshape_3/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_4/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_4"
op: "Reshape"
input: "Mul"
input: "Reshape_4/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul"
op: "BatchMatMul"
input: "Reshape_3"
input: "Reshape_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_5/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_5"
op: "Reshape"
input: "MatMul"
input: "Reshape_5/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_1/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_1"
op: "Transpose"
input: "Reshape_5"
input: "transpose_1/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean"
op: "Mean"
input: "transpose_1"
input: "Mean/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv"
op: "RealDiv"
input: "Mean"
input: "truediv/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/Reshape"
op: "Reshape"
input: "truediv"
input: "update_GRUpriorZ/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/Reshape_1"
op: "Reshape"
input: "Mul"
input: "update_GRUpriorZ/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpriorZ/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpriorZ/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/range"
op: "Range"
input: "update_GRUpriorZ/rnn/range/start"
input: "update_GRUpriorZ/rnn/Rank"
input: "update_GRUpriorZ/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ/rnn/concat"
op: "ConcatV2"
input: "update_GRUpriorZ/rnn/concat/values_0"
input: "update_GRUpriorZ/rnn/range"
input: "update_GRUpriorZ/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/transpose"
op: "Transpose"
input: "update_GRUpriorZ/Reshape"
input: "update_GRUpriorZ/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpriorZ/rnn/Shape"
input: "update_GRUpriorZ/rnn/strided_slice/stack"
input: "update_GRUpriorZ/rnn/strided_slice/stack_1"
input: "update_GRUpriorZ/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpriorZ/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpriorZ/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpriorZ/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpriorZ/rnn/Const"
input: "update_GRUpriorZ/rnn/Const_1"
input: "update_GRUpriorZ/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpriorZ/rnn/zeros"
op: "Fill"
input: "update_GRUpriorZ/rnn/concat_1"
input: "update_GRUpriorZ/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpriorZ/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpriorZ/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpriorZ/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpriorZ/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpriorZ/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpriorZ/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpriorZ/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpriorZ/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpriorZ/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpriorZ/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpriorZ/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpriorZ/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpriorZ/rnn/TensorArray_1"
input: "update_GRUpriorZ/rnn/TensorArrayUnstack/range"
input: "update_GRUpriorZ/rnn/transpose"
input: "update_GRUpriorZ/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/transpose"
    }
  }
}
, name: "update_GRUpriorZ/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/Maximum"
op: "Maximum"
input: "update_GRUpriorZ/rnn/Maximum/x"
input: "update_GRUpriorZ/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/Minimum"
op: "Minimum"
input: "update_GRUpriorZ/rnn/strided_slice"
input: "update_GRUpriorZ/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ/rnn/while/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpriorZ/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpriorZ/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpriorZ/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ/rnn/while/Merge"
op: "Merge"
input: "update_GRUpriorZ/rnn/while/Enter"
input: "update_GRUpriorZ/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpriorZ/rnn/while/Enter_1"
input: "update_GRUpriorZ/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpriorZ/rnn/while/Enter_2"
input: "update_GRUpriorZ/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpriorZ/rnn/while/Enter_3"
input: "update_GRUpriorZ/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ/rnn/while/Less"
op: "Less"
input: "update_GRUpriorZ/rnn/while/Merge"
input: "update_GRUpriorZ/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ/rnn/while/Less_1"
op: "Less"
input: "update_GRUpriorZ/rnn/while/Merge_1"
input: "update_GRUpriorZ/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpriorZ/rnn/while/Less"
input: "update_GRUpriorZ/rnn/while/Less_1"
, name: "update_GRUpriorZ/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpriorZ/rnn/while/LogicalAnd"
, name: "update_GRUpriorZ/rnn/while/Switch"
op: "Switch"
input: "update_GRUpriorZ/rnn/while/Merge"
input: "update_GRUpriorZ/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpriorZ/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpriorZ/rnn/while/Merge_1"
input: "update_GRUpriorZ/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpriorZ/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpriorZ/rnn/while/Merge_2"
input: "update_GRUpriorZ/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpriorZ/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpriorZ/rnn/while/Merge_3"
input: "update_GRUpriorZ/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpriorZ/rnn/while/Identity"
op: "Identity"
input: "update_GRUpriorZ/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpriorZ/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpriorZ/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpriorZ/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/add/y"
op: "Const"
input: "^update_GRUpriorZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/while/add"
op: "Add"
input: "update_GRUpriorZ/rnn/while/Identity"
input: "update_GRUpriorZ/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpriorZ/rnn/while/Identity_1"
input: "update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.17320507764816284
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.17320507764816284
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 196
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/max"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform"
op: "Add"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/mul"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Assign"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/read"
op: "Identity"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Initializer/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Assign"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Initializer/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/bias/read"
op: "Identity"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.20000000298023224
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 210
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/max"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform"
op: "Add"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Assign"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/read"
op: "Identity"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Assign"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/read"
op: "Identity"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpriorZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpriorZ/rnn/while/TensorArrayReadV3"
input: "update_GRUpriorZ/rnn/while/Identity_3"
input: "update_GRUpriorZ/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpriorZ/rnn/while/gru_cell/concat"
input: "update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpriorZ/rnn/while/gru_cell/MatMul"
input: "update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpriorZ/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpriorZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpriorZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpriorZ/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpriorZ/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpriorZ/rnn/while/gru_cell/split"
input: "update_GRUpriorZ/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpriorZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpriorZ/rnn/while/TensorArrayReadV3"
input: "update_GRUpriorZ/rnn/while/gru_cell/mul"
input: "update_GRUpriorZ/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpriorZ/rnn/while/gru_cell/concat_1"
input: "update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpriorZ/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpriorZ/rnn/while/gru_cell/split:1"
input: "update_GRUpriorZ/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpriorZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpriorZ/rnn/while/gru_cell/sub/x"
input: "update_GRUpriorZ/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpriorZ/rnn/while/gru_cell/sub"
input: "update_GRUpriorZ/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpriorZ/rnn/while/gru_cell/mul_1"
input: "update_GRUpriorZ/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpriorZ/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpriorZ/rnn/while/Identity_1"
input: "update_GRUpriorZ/rnn/while/gru_cell/add"
input: "update_GRUpriorZ/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpriorZ/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpriorZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/while/add_1"
op: "Add"
input: "update_GRUpriorZ/rnn/while/Identity_1"
input: "update_GRUpriorZ/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpriorZ/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpriorZ/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpriorZ/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpriorZ/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/Exit"
op: "Exit"
input: "update_GRUpriorZ/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpriorZ/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpriorZ/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpriorZ/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpriorZ/rnn/TensorArray"
input: "update_GRUpriorZ/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpriorZ/rnn/TensorArrayStack/range/start"
input: "update_GRUpriorZ/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpriorZ/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpriorZ/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpriorZ/rnn/TensorArray"
input: "update_GRUpriorZ/rnn/TensorArrayStack/range"
input: "update_GRUpriorZ/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpriorZ/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpriorZ/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpriorZ/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpriorZ/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ/rnn/range_1"
op: "Range"
input: "update_GRUpriorZ/rnn/range_1/start"
input: "update_GRUpriorZ/rnn/Rank_1"
input: "update_GRUpriorZ/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpriorZ/rnn/concat_2/values_0"
input: "update_GRUpriorZ/rnn/range_1"
input: "update_GRUpriorZ/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpriorZ/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpriorZ/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/Reshape_2"
op: "Reshape"
input: "update_GRUpriorZ/rnn/while/Exit_3"
input: "update_GRUpriorZ/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/Mul"
op: "Mul"
input: "update_GRUpriorZ/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_6/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_6"
op: "Reshape"
input: "edge_nnpriorZ/Reshape_1"
input: "Reshape_6/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_7/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_7"
op: "Reshape"
input: "update_GRUpriorZ/Mul"
input: "Reshape_7/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_1"
op: "BatchMatMul"
input: "Reshape_6"
input: "Reshape_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_8/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_8"
op: "Reshape"
input: "MatMul_1"
input: "Reshape_8/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_2/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_2"
op: "Transpose"
input: "Reshape_8"
input: "transpose_2/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_1/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_1"
op: "Mean"
input: "transpose_2"
input: "Mean_1/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_1"
op: "RealDiv"
input: "Mean_1"
input: "truediv_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_1/Reshape"
op: "Reshape"
input: "truediv_1"
input: "update_GRUpriorZ_1/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_1/Reshape_1"
op: "Reshape"
input: "update_GRUpriorZ/Mul"
input: "update_GRUpriorZ_1/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/range"
op: "Range"
input: "update_GRUpriorZ_1/rnn/range/start"
input: "update_GRUpriorZ_1/rnn/Rank"
input: "update_GRUpriorZ_1/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/concat"
op: "ConcatV2"
input: "update_GRUpriorZ_1/rnn/concat/values_0"
input: "update_GRUpriorZ_1/rnn/range"
input: "update_GRUpriorZ_1/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/transpose"
op: "Transpose"
input: "update_GRUpriorZ_1/Reshape"
input: "update_GRUpriorZ_1/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpriorZ_1/rnn/Shape"
input: "update_GRUpriorZ_1/rnn/strided_slice/stack"
input: "update_GRUpriorZ_1/rnn/strided_slice/stack_1"
input: "update_GRUpriorZ_1/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpriorZ_1/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpriorZ_1/rnn/Const"
input: "update_GRUpriorZ_1/rnn/Const_1"
input: "update_GRUpriorZ_1/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/zeros"
op: "Fill"
input: "update_GRUpriorZ_1/rnn/concat_1"
input: "update_GRUpriorZ_1/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpriorZ_1/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpriorZ_1/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpriorZ_1/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpriorZ_1/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpriorZ_1/rnn/TensorArray_1"
input: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/range"
input: "update_GRUpriorZ_1/rnn/transpose"
input: "update_GRUpriorZ_1/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/transpose"
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/Maximum"
op: "Maximum"
input: "update_GRUpriorZ_1/rnn/Maximum/x"
input: "update_GRUpriorZ_1/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/Minimum"
op: "Minimum"
input: "update_GRUpriorZ_1/rnn/strided_slice"
input: "update_GRUpriorZ_1/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Enter"
op: "Enter"
input: "update_GRUpriorZ_1/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpriorZ_1/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpriorZ_1/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpriorZ_1/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Merge"
op: "Merge"
input: "update_GRUpriorZ_1/rnn/while/Enter"
input: "update_GRUpriorZ_1/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpriorZ_1/rnn/while/Enter_1"
input: "update_GRUpriorZ_1/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpriorZ_1/rnn/while/Enter_2"
input: "update_GRUpriorZ_1/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpriorZ_1/rnn/while/Enter_3"
input: "update_GRUpriorZ_1/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpriorZ_1/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Less"
op: "Less"
input: "update_GRUpriorZ_1/rnn/while/Merge"
input: "update_GRUpriorZ_1/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpriorZ_1/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Less_1"
op: "Less"
input: "update_GRUpriorZ_1/rnn/while/Merge_1"
input: "update_GRUpriorZ_1/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpriorZ_1/rnn/while/Less"
input: "update_GRUpriorZ_1/rnn/while/Less_1"
, name: "update_GRUpriorZ_1/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpriorZ_1/rnn/while/LogicalAnd"
, name: "update_GRUpriorZ_1/rnn/while/Switch"
op: "Switch"
input: "update_GRUpriorZ_1/rnn/while/Merge"
input: "update_GRUpriorZ_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpriorZ_1/rnn/while/Merge_1"
input: "update_GRUpriorZ_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpriorZ_1/rnn/while/Merge_2"
input: "update_GRUpriorZ_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpriorZ_1/rnn/while/Merge_3"
input: "update_GRUpriorZ_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Identity"
op: "Identity"
input: "update_GRUpriorZ_1/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpriorZ_1/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpriorZ_1/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpriorZ_1/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/add/y"
op: "Const"
input: "^update_GRUpriorZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/while/add"
op: "Add"
input: "update_GRUpriorZ_1/rnn/while/Identity"
input: "update_GRUpriorZ_1/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpriorZ_1/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpriorZ_1/rnn/while/Identity_1"
input: "update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpriorZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpriorZ_1/rnn/while/TensorArrayReadV3"
input: "update_GRUpriorZ_1/rnn/while/Identity_3"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/concat"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/MatMul"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpriorZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpriorZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/split"
input: "update_GRUpriorZ_1/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpriorZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpriorZ_1/rnn/while/TensorArrayReadV3"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/mul"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/concat_1"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/split:1"
input: "update_GRUpriorZ_1/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpriorZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/sub/x"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/sub"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/mul_1"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpriorZ_1/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpriorZ_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpriorZ_1/rnn/while/Identity_1"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/add"
input: "update_GRUpriorZ_1/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpriorZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/while/add_1"
op: "Add"
input: "update_GRUpriorZ_1/rnn/while/Identity_1"
input: "update_GRUpriorZ_1/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpriorZ_1/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpriorZ_1/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpriorZ_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Exit"
op: "Exit"
input: "update_GRUpriorZ_1/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpriorZ_1/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpriorZ_1/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpriorZ_1/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpriorZ_1/rnn/TensorArray"
input: "update_GRUpriorZ_1/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpriorZ_1/rnn/TensorArrayStack/range/start"
input: "update_GRUpriorZ_1/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpriorZ_1/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpriorZ_1/rnn/TensorArray"
input: "update_GRUpriorZ_1/rnn/TensorArrayStack/range"
input: "update_GRUpriorZ_1/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/range_1"
op: "Range"
input: "update_GRUpriorZ_1/rnn/range_1/start"
input: "update_GRUpriorZ_1/rnn/Rank_1"
input: "update_GRUpriorZ_1/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_1/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpriorZ_1/rnn/concat_2/values_0"
input: "update_GRUpriorZ_1/rnn/range_1"
input: "update_GRUpriorZ_1/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpriorZ_1/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpriorZ_1/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_1/Reshape_2"
op: "Reshape"
input: "update_GRUpriorZ_1/rnn/while/Exit_3"
input: "update_GRUpriorZ_1/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_1/Mul"
op: "Mul"
input: "update_GRUpriorZ_1/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_9/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_9"
op: "Reshape"
input: "edge_nnpriorZ/Reshape_1"
input: "Reshape_9/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_10/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_10"
op: "Reshape"
input: "update_GRUpriorZ_1/Mul"
input: "Reshape_10/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_2"
op: "BatchMatMul"
input: "Reshape_9"
input: "Reshape_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_11/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_11"
op: "Reshape"
input: "MatMul_2"
input: "Reshape_11/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_3/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_3"
op: "Transpose"
input: "Reshape_11"
input: "transpose_3/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_2/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_2"
op: "Mean"
input: "transpose_3"
input: "Mean_2/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_2/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_2"
op: "RealDiv"
input: "Mean_2"
input: "truediv_2/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_2/Reshape"
op: "Reshape"
input: "truediv_2"
input: "update_GRUpriorZ_2/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_2/Reshape_1"
op: "Reshape"
input: "update_GRUpriorZ_1/Mul"
input: "update_GRUpriorZ_2/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/range"
op: "Range"
input: "update_GRUpriorZ_2/rnn/range/start"
input: "update_GRUpriorZ_2/rnn/Rank"
input: "update_GRUpriorZ_2/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/concat"
op: "ConcatV2"
input: "update_GRUpriorZ_2/rnn/concat/values_0"
input: "update_GRUpriorZ_2/rnn/range"
input: "update_GRUpriorZ_2/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/transpose"
op: "Transpose"
input: "update_GRUpriorZ_2/Reshape"
input: "update_GRUpriorZ_2/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpriorZ_2/rnn/Shape"
input: "update_GRUpriorZ_2/rnn/strided_slice/stack"
input: "update_GRUpriorZ_2/rnn/strided_slice/stack_1"
input: "update_GRUpriorZ_2/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpriorZ_2/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpriorZ_2/rnn/Const"
input: "update_GRUpriorZ_2/rnn/Const_1"
input: "update_GRUpriorZ_2/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/zeros"
op: "Fill"
input: "update_GRUpriorZ_2/rnn/concat_1"
input: "update_GRUpriorZ_2/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpriorZ_2/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpriorZ_2/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpriorZ_2/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpriorZ_2/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpriorZ_2/rnn/TensorArray_1"
input: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/range"
input: "update_GRUpriorZ_2/rnn/transpose"
input: "update_GRUpriorZ_2/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/transpose"
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/Maximum"
op: "Maximum"
input: "update_GRUpriorZ_2/rnn/Maximum/x"
input: "update_GRUpriorZ_2/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/Minimum"
op: "Minimum"
input: "update_GRUpriorZ_2/rnn/strided_slice"
input: "update_GRUpriorZ_2/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Enter"
op: "Enter"
input: "update_GRUpriorZ_2/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpriorZ_2/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpriorZ_2/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpriorZ_2/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Merge"
op: "Merge"
input: "update_GRUpriorZ_2/rnn/while/Enter"
input: "update_GRUpriorZ_2/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpriorZ_2/rnn/while/Enter_1"
input: "update_GRUpriorZ_2/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpriorZ_2/rnn/while/Enter_2"
input: "update_GRUpriorZ_2/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpriorZ_2/rnn/while/Enter_3"
input: "update_GRUpriorZ_2/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpriorZ_2/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Less"
op: "Less"
input: "update_GRUpriorZ_2/rnn/while/Merge"
input: "update_GRUpriorZ_2/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpriorZ_2/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Less_1"
op: "Less"
input: "update_GRUpriorZ_2/rnn/while/Merge_1"
input: "update_GRUpriorZ_2/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpriorZ_2/rnn/while/Less"
input: "update_GRUpriorZ_2/rnn/while/Less_1"
, name: "update_GRUpriorZ_2/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpriorZ_2/rnn/while/LogicalAnd"
, name: "update_GRUpriorZ_2/rnn/while/Switch"
op: "Switch"
input: "update_GRUpriorZ_2/rnn/while/Merge"
input: "update_GRUpriorZ_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpriorZ_2/rnn/while/Merge_1"
input: "update_GRUpriorZ_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpriorZ_2/rnn/while/Merge_2"
input: "update_GRUpriorZ_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpriorZ_2/rnn/while/Merge_3"
input: "update_GRUpriorZ_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Identity"
op: "Identity"
input: "update_GRUpriorZ_2/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpriorZ_2/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpriorZ_2/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpriorZ_2/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/add/y"
op: "Const"
input: "^update_GRUpriorZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/while/add"
op: "Add"
input: "update_GRUpriorZ_2/rnn/while/Identity"
input: "update_GRUpriorZ_2/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpriorZ_2/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpriorZ_2/rnn/while/Identity_1"
input: "update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpriorZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpriorZ_2/rnn/while/TensorArrayReadV3"
input: "update_GRUpriorZ_2/rnn/while/Identity_3"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/concat"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/MatMul"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpriorZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpriorZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/split"
input: "update_GRUpriorZ_2/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpriorZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpriorZ_2/rnn/while/TensorArrayReadV3"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/mul"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/concat_1"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/split:1"
input: "update_GRUpriorZ_2/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpriorZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/sub/x"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/sub"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/mul_1"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpriorZ_2/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpriorZ_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpriorZ_2/rnn/while/Identity_1"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/add"
input: "update_GRUpriorZ_2/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpriorZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/while/add_1"
op: "Add"
input: "update_GRUpriorZ_2/rnn/while/Identity_1"
input: "update_GRUpriorZ_2/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpriorZ_2/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpriorZ_2/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpriorZ_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Exit"
op: "Exit"
input: "update_GRUpriorZ_2/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpriorZ_2/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpriorZ_2/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpriorZ_2/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpriorZ_2/rnn/TensorArray"
input: "update_GRUpriorZ_2/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpriorZ_2/rnn/TensorArrayStack/range/start"
input: "update_GRUpriorZ_2/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpriorZ_2/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpriorZ_2/rnn/TensorArray"
input: "update_GRUpriorZ_2/rnn/TensorArrayStack/range"
input: "update_GRUpriorZ_2/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/range_1"
op: "Range"
input: "update_GRUpriorZ_2/rnn/range_1/start"
input: "update_GRUpriorZ_2/rnn/Rank_1"
input: "update_GRUpriorZ_2/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpriorZ_2/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpriorZ_2/rnn/concat_2/values_0"
input: "update_GRUpriorZ_2/rnn/range_1"
input: "update_GRUpriorZ_2/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpriorZ_2/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpriorZ_2/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ_2/Reshape_2"
op: "Reshape"
input: "update_GRUpriorZ_2/rnn/while/Exit_3"
input: "update_GRUpriorZ_2/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ_2/Mul"
op: "Mul"
input: "update_GRUpriorZ_2/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "g_nnpriorZ/concat"
op: "ConcatV2"
input: "update_GRUpriorZ_2/Mul"
input: "Mul"
input: "g_nnpriorZ/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpriorZ/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpriorZ/Reshape"
op: "Reshape"
input: "g_nnpriorZ/concat"
input: "g_nnpriorZ/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpriorZ/dropout/cond/Switch"
op: "Switch"
input: "Placeholder_5"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpriorZ/dropout/cond/switch_t"
op: "Identity"
input: "g_nnpriorZ/dropout/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpriorZ/dropout/cond/switch_f"
op: "Identity"
input: "g_nnpriorZ/dropout/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpriorZ/dropout/cond/pred_id"
op: "Identity"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpriorZ/dropout/cond/dropout/keep_prob"
op: "Const"
input: "^g_nnpriorZ/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.800000011920929
    }
  }
}
, name: "g_nnpriorZ/dropout/cond/dropout/Shape"
op: "Const"
input: "^g_nnpriorZ/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpriorZ/dropout/cond/dropout/random_uniform/min"
op: "Const"
input: "^g_nnpriorZ/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpriorZ/dropout/cond/dropout/random_uniform/max"
op: "Const"
input: "^g_nnpriorZ/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "g_nnpriorZ/dropout/cond/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpriorZ/dropout/cond/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 550
  }
}
, name: "g_nnpriorZ/dropout/cond/dropout/random_uniform/sub"
op: "Sub"
input: "g_nnpriorZ/dropout/cond/dropout/random_uniform/max"
input: "g_nnpriorZ/dropout/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout/cond/dropout/random_uniform/mul"
op: "Mul"
input: "g_nnpriorZ/dropout/cond/dropout/random_uniform/RandomUniform"
input: "g_nnpriorZ/dropout/cond/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout/cond/dropout/random_uniform"
op: "Add"
input: "g_nnpriorZ/dropout/cond/dropout/random_uniform/mul"
input: "g_nnpriorZ/dropout/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout/cond/dropout/add"
op: "Add"
input: "g_nnpriorZ/dropout/cond/dropout/keep_prob"
input: "g_nnpriorZ/dropout/cond/dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout/cond/dropout/Floor"
op: "Floor"
input: "g_nnpriorZ/dropout/cond/dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout/cond/dropout/div/Switch"
op: "Switch"
input: "g_nnpriorZ/Reshape"
input: "g_nnpriorZ/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/Reshape"
    }
  }
}
, name: "g_nnpriorZ/dropout/cond/dropout/div"
op: "RealDiv"
input: "g_nnpriorZ/dropout/cond/dropout/div/Switch:1"
input: "g_nnpriorZ/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout/cond/dropout/mul"
op: "Mul"
input: "g_nnpriorZ/dropout/cond/dropout/div"
input: "g_nnpriorZ/dropout/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout/cond/Identity/Switch"
op: "Switch"
input: "g_nnpriorZ/Reshape"
input: "g_nnpriorZ/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/Reshape"
    }
  }
}
, name: "g_nnpriorZ/dropout/cond/Identity"
op: "Identity"
input: "g_nnpriorZ/dropout/cond/Identity/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout/cond/Merge"
op: "Merge"
input: "g_nnpriorZ/dropout/cond/Identity"
input: "g_nnpriorZ/dropout/cond/dropout/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dense/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpriorZ/dense/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.17320507764816284
    }
  }
}
, name: "g_nnpriorZ/dense/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.17320507764816284
    }
  }
}
, name: "g_nnpriorZ/dense/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpriorZ/dense/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 565
  }
}
, name: "g_nnpriorZ/dense/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "g_nnpriorZ/dense/kernel/Initializer/random_uniform/max"
input: "g_nnpriorZ/dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
, name: "g_nnpriorZ/dense/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "g_nnpriorZ/dense/kernel/Initializer/random_uniform/RandomUniform"
input: "g_nnpriorZ/dense/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
, name: "g_nnpriorZ/dense/kernel/Initializer/random_uniform"
op: "Add"
input: "g_nnpriorZ/dense/kernel/Initializer/random_uniform/mul"
input: "g_nnpriorZ/dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
, name: "g_nnpriorZ/dense/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpriorZ/dense/kernel/Assign"
op: "Assign"
input: "g_nnpriorZ/dense/kernel"
input: "g_nnpriorZ/dense/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpriorZ/dense/kernel/read"
op: "Identity"
input: "g_nnpriorZ/dense/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
, name: "g_nnpriorZ/dense/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpriorZ/dense/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpriorZ/dense/bias/Assign"
op: "Assign"
input: "g_nnpriorZ/dense/bias"
input: "g_nnpriorZ/dense/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpriorZ/dense/bias/read"
op: "Identity"
input: "g_nnpriorZ/dense/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
, name: "g_nnpriorZ/dense/MatMul"
op: "MatMul"
input: "g_nnpriorZ/dropout/cond/Merge"
input: "g_nnpriorZ/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "g_nnpriorZ/dense/BiasAdd"
op: "BiasAdd"
input: "g_nnpriorZ/dense/MatMul"
input: "g_nnpriorZ/dense/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "g_nnpriorZ/dense/Sigmoid"
op: "Sigmoid"
input: "g_nnpriorZ/dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout_1/cond/Switch"
op: "Switch"
input: "Placeholder_5"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpriorZ/dropout_1/cond/switch_t"
op: "Identity"
input: "g_nnpriorZ/dropout_1/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpriorZ/dropout_1/cond/switch_f"
op: "Identity"
input: "g_nnpriorZ/dropout_1/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpriorZ/dropout_1/cond/pred_id"
op: "Identity"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpriorZ/dropout_1/cond/dropout/keep_prob"
op: "Const"
input: "^g_nnpriorZ/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.800000011920929
    }
  }
}
, name: "g_nnpriorZ/dropout_1/cond/dropout/Shape"
op: "Const"
input: "^g_nnpriorZ/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpriorZ/dropout_1/cond/dropout/random_uniform/min"
op: "Const"
input: "^g_nnpriorZ/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpriorZ/dropout_1/cond/dropout/random_uniform/max"
op: "Const"
input: "^g_nnpriorZ/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "g_nnpriorZ/dropout_1/cond/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpriorZ/dropout_1/cond/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 587
  }
}
, name: "g_nnpriorZ/dropout_1/cond/dropout/random_uniform/sub"
op: "Sub"
input: "g_nnpriorZ/dropout_1/cond/dropout/random_uniform/max"
input: "g_nnpriorZ/dropout_1/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout_1/cond/dropout/random_uniform/mul"
op: "Mul"
input: "g_nnpriorZ/dropout_1/cond/dropout/random_uniform/RandomUniform"
input: "g_nnpriorZ/dropout_1/cond/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout_1/cond/dropout/random_uniform"
op: "Add"
input: "g_nnpriorZ/dropout_1/cond/dropout/random_uniform/mul"
input: "g_nnpriorZ/dropout_1/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout_1/cond/dropout/add"
op: "Add"
input: "g_nnpriorZ/dropout_1/cond/dropout/keep_prob"
input: "g_nnpriorZ/dropout_1/cond/dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout_1/cond/dropout/Floor"
op: "Floor"
input: "g_nnpriorZ/dropout_1/cond/dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout_1/cond/dropout/div/Switch"
op: "Switch"
input: "g_nnpriorZ/dense/Sigmoid"
input: "g_nnpriorZ/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/Sigmoid"
    }
  }
}
, name: "g_nnpriorZ/dropout_1/cond/dropout/div"
op: "RealDiv"
input: "g_nnpriorZ/dropout_1/cond/dropout/div/Switch:1"
input: "g_nnpriorZ/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout_1/cond/dropout/mul"
op: "Mul"
input: "g_nnpriorZ/dropout_1/cond/dropout/div"
input: "g_nnpriorZ/dropout_1/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout_1/cond/Identity/Switch"
op: "Switch"
input: "g_nnpriorZ/dense/Sigmoid"
input: "g_nnpriorZ/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/Sigmoid"
    }
  }
}
, name: "g_nnpriorZ/dropout_1/cond/Identity"
op: "Identity"
input: "g_nnpriorZ/dropout_1/cond/Identity/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dropout_1/cond/Merge"
op: "Merge"
input: "g_nnpriorZ/dropout_1/cond/Identity"
input: "g_nnpriorZ/dropout_1/cond/dropout/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.17320507764816284
    }
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.17320507764816284
    }
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 602
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform/max"
input: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform/RandomUniform"
input: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform"
op: "Add"
input: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform/mul"
input: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
, name: "g_nnpriorZ/dense_1/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Assign"
op: "Assign"
input: "g_nnpriorZ/dense_1/kernel"
input: "g_nnpriorZ/dense_1/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpriorZ/dense_1/kernel/read"
op: "Identity"
input: "g_nnpriorZ/dense_1/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
, name: "g_nnpriorZ/dense_1/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpriorZ/dense_1/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpriorZ/dense_1/bias/Assign"
op: "Assign"
input: "g_nnpriorZ/dense_1/bias"
input: "g_nnpriorZ/dense_1/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpriorZ/dense_1/bias/read"
op: "Identity"
input: "g_nnpriorZ/dense_1/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
, name: "g_nnpriorZ/dense_1/MatMul"
op: "MatMul"
input: "g_nnpriorZ/dropout_1/cond/Merge"
input: "g_nnpriorZ/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "g_nnpriorZ/dense_1/BiasAdd"
op: "BiasAdd"
input: "g_nnpriorZ/dense_1/MatMul"
input: "g_nnpriorZ/dense_1/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "g_nnpriorZ/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpriorZ/Reshape_1"
op: "Reshape"
input: "g_nnpriorZ/dense_1/BiasAdd"
input: "g_nnpriorZ/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpriorZ/Mul"
op: "Mul"
input: "g_nnpriorZ/Reshape_1"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "2\000\000\0002\000\000\000"
    }
  }
}
, name: "split/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "split"
op: "SplitV"
input: "g_nnpriorZ/Mul"
input: "Const"
input: "split/split_dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tlen"
  value {
    type: DT_INT32
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "random_normal/mean"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "random_normal/stddev"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "random_normal/RandomStandardNormal"
op: "RandomStandardNormal"
input: "Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 624
  }
}
, name: "random_normal/mul"
op: "Mul"
input: "random_normal/RandomStandardNormal"
input: "random_normal/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "random_normal"
op: "Add"
input: "random_normal/mul"
input: "random_normal/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_1/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.5
    }
  }
}
, name: "mul_1"
op: "Mul"
input: "mul_1/x"
input: "split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Exp"
op: "Exp"
input: "mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Mul_2"
op: "Mul"
input: "Exp"
input: "random_normal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Add"
op: "Add"
input: "split"
input: "Mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Mul_3"
op: "Mul"
input: "Add"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_12/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_12"
op: "Reshape"
input: "Placeholder_4"
input: "Reshape_12/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "concat_1"
op: "ConcatV2"
input: "concat"
input: "Reshape_12"
input: "concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostZ/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "T\006\000\000\014\000\000\000"
    }
  }
}
, name: "edge_nnpostZ/Reshape"
op: "Reshape"
input: "concat_1"
input: "edge_nnpostZ/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostZ/dense/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\014\000\000\000d\000\000\000"
    }
  }
}
, name: "edge_nnpostZ/dense/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.2314550280570984
    }
  }
}
, name: "edge_nnpostZ/dense/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.2314550280570984
    }
  }
}
, name: "edge_nnpostZ/dense/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "edge_nnpostZ/dense/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 642
  }
}
, name: "edge_nnpostZ/dense/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "edge_nnpostZ/dense/kernel/Initializer/random_uniform/max"
input: "edge_nnpostZ/dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
, name: "edge_nnpostZ/dense/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "edge_nnpostZ/dense/kernel/Initializer/random_uniform/RandomUniform"
input: "edge_nnpostZ/dense/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
, name: "edge_nnpostZ/dense/kernel/Initializer/random_uniform"
op: "Add"
input: "edge_nnpostZ/dense/kernel/Initializer/random_uniform/mul"
input: "edge_nnpostZ/dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
, name: "edge_nnpostZ/dense/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostZ/dense/kernel/Assign"
op: "Assign"
input: "edge_nnpostZ/dense/kernel"
input: "edge_nnpostZ/dense/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostZ/dense/kernel/read"
op: "Identity"
input: "edge_nnpostZ/dense/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
, name: "edge_nnpostZ/dense/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostZ/dense/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostZ/dense/bias/Assign"
op: "Assign"
input: "edge_nnpostZ/dense/bias"
input: "edge_nnpostZ/dense/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostZ/dense/bias/read"
op: "Identity"
input: "edge_nnpostZ/dense/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
, name: "edge_nnpostZ/dense/MatMul"
op: "MatMul"
input: "edge_nnpostZ/Reshape"
input: "edge_nnpostZ/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "edge_nnpostZ/dense/BiasAdd"
op: "BiasAdd"
input: "edge_nnpostZ/dense/MatMul"
input: "edge_nnpostZ/dense/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "edge_nnpostZ/dense/Sigmoid"
op: "Sigmoid"
input: "edge_nnpostZ/dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000\304\t\000\000"
    }
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.04803844541311264
    }
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.04803844541311264
    }
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 659
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform/max"
input: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform/RandomUniform"
input: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform"
op: "Add"
input: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform/mul"
input: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
, name: "edge_nnpostZ/dense_1/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Assign"
op: "Assign"
input: "edge_nnpostZ/dense_1/kernel"
input: "edge_nnpostZ/dense_1/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostZ/dense_1/kernel/read"
op: "Identity"
input: "edge_nnpostZ/dense_1/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
, name: "edge_nnpostZ/dense_1/bias/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2500
    }
  }
}
, name: "edge_nnpostZ/dense_1/bias/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostZ/dense_1/bias/Initializer/zeros"
op: "Fill"
input: "edge_nnpostZ/dense_1/bias/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostZ/dense_1/bias/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostZ/dense_1/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostZ/dense_1/bias/Assign"
op: "Assign"
input: "edge_nnpostZ/dense_1/bias"
input: "edge_nnpostZ/dense_1/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostZ/dense_1/bias/read"
op: "Identity"
input: "edge_nnpostZ/dense_1/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
, name: "edge_nnpostZ/dense_1/MatMul"
op: "MatMul"
input: "edge_nnpostZ/dense/Sigmoid"
input: "edge_nnpostZ/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "edge_nnpostZ/dense_1/BiasAdd"
op: "BiasAdd"
input: "edge_nnpostZ/dense_1/MatMul"
input: "edge_nnpostZ/dense_1/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "edge_nnpostZ/dense_1/Tanh"
op: "Tanh"
input: "edge_nnpostZ/dense_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "edge_nnpostZ/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "edge_nnpostZ/Reshape_1"
op: "Reshape"
input: "edge_nnpostZ/dense_1/Tanh"
input: "edge_nnpostZ/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_13/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_13"
op: "Reshape"
input: "edge_nnpostZ/Reshape_1"
input: "Reshape_13/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_14/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_14"
op: "Reshape"
input: "Mul"
input: "Reshape_14/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_3"
op: "BatchMatMul"
input: "Reshape_13"
input: "Reshape_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_15/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_15"
op: "Reshape"
input: "MatMul_3"
input: "Reshape_15/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_4/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_4"
op: "Transpose"
input: "Reshape_15"
input: "transpose_4/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_3/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_3"
op: "Mean"
input: "transpose_4"
input: "Mean_3/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_3/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_3"
op: "RealDiv"
input: "Mean_3"
input: "truediv_3/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/Reshape"
op: "Reshape"
input: "truediv_3"
input: "update_GRUpostZ/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/Reshape_1"
op: "Reshape"
input: "Mul"
input: "update_GRUpostZ/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostZ/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostZ/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/range"
op: "Range"
input: "update_GRUpostZ/rnn/range/start"
input: "update_GRUpostZ/rnn/Rank"
input: "update_GRUpostZ/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ/rnn/concat"
op: "ConcatV2"
input: "update_GRUpostZ/rnn/concat/values_0"
input: "update_GRUpostZ/rnn/range"
input: "update_GRUpostZ/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/transpose"
op: "Transpose"
input: "update_GRUpostZ/Reshape"
input: "update_GRUpostZ/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpostZ/rnn/Shape"
input: "update_GRUpostZ/rnn/strided_slice/stack"
input: "update_GRUpostZ/rnn/strided_slice/stack_1"
input: "update_GRUpostZ/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostZ/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpostZ/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostZ/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpostZ/rnn/Const"
input: "update_GRUpostZ/rnn/Const_1"
input: "update_GRUpostZ/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostZ/rnn/zeros"
op: "Fill"
input: "update_GRUpostZ/rnn/concat_1"
input: "update_GRUpostZ/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpostZ/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostZ/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpostZ/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpostZ/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostZ/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpostZ/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpostZ/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpostZ/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpostZ/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpostZ/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpostZ/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpostZ/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpostZ/rnn/TensorArray_1"
input: "update_GRUpostZ/rnn/TensorArrayUnstack/range"
input: "update_GRUpostZ/rnn/transpose"
input: "update_GRUpostZ/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/transpose"
    }
  }
}
, name: "update_GRUpostZ/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/Maximum"
op: "Maximum"
input: "update_GRUpostZ/rnn/Maximum/x"
input: "update_GRUpostZ/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/Minimum"
op: "Minimum"
input: "update_GRUpostZ/rnn/strided_slice"
input: "update_GRUpostZ/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ/rnn/while/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpostZ/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpostZ/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpostZ/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ/rnn/while/Merge"
op: "Merge"
input: "update_GRUpostZ/rnn/while/Enter"
input: "update_GRUpostZ/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpostZ/rnn/while/Enter_1"
input: "update_GRUpostZ/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpostZ/rnn/while/Enter_2"
input: "update_GRUpostZ/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpostZ/rnn/while/Enter_3"
input: "update_GRUpostZ/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ/rnn/while/Less"
op: "Less"
input: "update_GRUpostZ/rnn/while/Merge"
input: "update_GRUpostZ/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ/rnn/while/Less_1"
op: "Less"
input: "update_GRUpostZ/rnn/while/Merge_1"
input: "update_GRUpostZ/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpostZ/rnn/while/Less"
input: "update_GRUpostZ/rnn/while/Less_1"
, name: "update_GRUpostZ/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpostZ/rnn/while/LogicalAnd"
, name: "update_GRUpostZ/rnn/while/Switch"
op: "Switch"
input: "update_GRUpostZ/rnn/while/Merge"
input: "update_GRUpostZ/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpostZ/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpostZ/rnn/while/Merge_1"
input: "update_GRUpostZ/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpostZ/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpostZ/rnn/while/Merge_2"
input: "update_GRUpostZ/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpostZ/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpostZ/rnn/while/Merge_3"
input: "update_GRUpostZ/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpostZ/rnn/while/Identity"
op: "Identity"
input: "update_GRUpostZ/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpostZ/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpostZ/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpostZ/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/add/y"
op: "Const"
input: "^update_GRUpostZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/while/add"
op: "Add"
input: "update_GRUpostZ/rnn/while/Identity"
input: "update_GRUpostZ/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpostZ/rnn/while/Identity_1"
input: "update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.17320507764816284
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.17320507764816284
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 759
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/max"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform"
op: "Add"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/mul"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Assign"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/read"
op: "Identity"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/bias/Initializer/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/bias/Assign"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias/Initializer/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/bias/read"
op: "Identity"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.20000000298023224
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 773
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/max"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform"
op: "Add"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Assign"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/read"
op: "Identity"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Assign"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/bias/read"
op: "Identity"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpostZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpostZ/rnn/while/TensorArrayReadV3"
input: "update_GRUpostZ/rnn/while/Identity_3"
input: "update_GRUpostZ/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpostZ/rnn/while/gru_cell/concat"
input: "update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpostZ/rnn/while/gru_cell/MatMul"
input: "update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpostZ/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpostZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpostZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpostZ/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpostZ/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpostZ/rnn/while/gru_cell/split"
input: "update_GRUpostZ/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpostZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpostZ/rnn/while/TensorArrayReadV3"
input: "update_GRUpostZ/rnn/while/gru_cell/mul"
input: "update_GRUpostZ/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpostZ/rnn/while/gru_cell/concat_1"
input: "update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpostZ/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpostZ/rnn/while/gru_cell/split:1"
input: "update_GRUpostZ/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpostZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpostZ/rnn/while/gru_cell/sub/x"
input: "update_GRUpostZ/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpostZ/rnn/while/gru_cell/sub"
input: "update_GRUpostZ/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpostZ/rnn/while/gru_cell/mul_1"
input: "update_GRUpostZ/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpostZ/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostZ/rnn/while/Identity_1"
input: "update_GRUpostZ/rnn/while/gru_cell/add"
input: "update_GRUpostZ/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpostZ/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpostZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/while/add_1"
op: "Add"
input: "update_GRUpostZ/rnn/while/Identity_1"
input: "update_GRUpostZ/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpostZ/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpostZ/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpostZ/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpostZ/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/Exit"
op: "Exit"
input: "update_GRUpostZ/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpostZ/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpostZ/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpostZ/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpostZ/rnn/TensorArray"
input: "update_GRUpostZ/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpostZ/rnn/TensorArrayStack/range/start"
input: "update_GRUpostZ/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpostZ/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostZ/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpostZ/rnn/TensorArray"
input: "update_GRUpostZ/rnn/TensorArrayStack/range"
input: "update_GRUpostZ/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpostZ/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostZ/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostZ/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostZ/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ/rnn/range_1"
op: "Range"
input: "update_GRUpostZ/rnn/range_1/start"
input: "update_GRUpostZ/rnn/Rank_1"
input: "update_GRUpostZ/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpostZ/rnn/concat_2/values_0"
input: "update_GRUpostZ/rnn/range_1"
input: "update_GRUpostZ/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpostZ/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpostZ/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/Reshape_2"
op: "Reshape"
input: "update_GRUpostZ/rnn/while/Exit_3"
input: "update_GRUpostZ/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/Mul"
op: "Mul"
input: "update_GRUpostZ/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_16/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_16"
op: "Reshape"
input: "edge_nnpostZ/Reshape_1"
input: "Reshape_16/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_17/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_17"
op: "Reshape"
input: "update_GRUpostZ/Mul"
input: "Reshape_17/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_4"
op: "BatchMatMul"
input: "Reshape_16"
input: "Reshape_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_18/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_18"
op: "Reshape"
input: "MatMul_4"
input: "Reshape_18/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_5/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_5"
op: "Transpose"
input: "Reshape_18"
input: "transpose_5/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_4/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_4"
op: "Mean"
input: "transpose_5"
input: "Mean_4/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_4/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_4"
op: "RealDiv"
input: "Mean_4"
input: "truediv_4/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_1/Reshape"
op: "Reshape"
input: "truediv_4"
input: "update_GRUpostZ_1/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_1/Reshape_1"
op: "Reshape"
input: "update_GRUpostZ/Mul"
input: "update_GRUpostZ_1/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostZ_1/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostZ_1/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/range"
op: "Range"
input: "update_GRUpostZ_1/rnn/range/start"
input: "update_GRUpostZ_1/rnn/Rank"
input: "update_GRUpostZ_1/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_1/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_1/rnn/concat"
op: "ConcatV2"
input: "update_GRUpostZ_1/rnn/concat/values_0"
input: "update_GRUpostZ_1/rnn/range"
input: "update_GRUpostZ_1/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/transpose"
op: "Transpose"
input: "update_GRUpostZ_1/Reshape"
input: "update_GRUpostZ_1/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_1/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_1/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpostZ_1/rnn/Shape"
input: "update_GRUpostZ_1/rnn/strided_slice/stack"
input: "update_GRUpostZ_1/rnn/strided_slice/stack_1"
input: "update_GRUpostZ_1/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostZ_1/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpostZ_1/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostZ_1/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_1/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpostZ_1/rnn/Const"
input: "update_GRUpostZ_1/rnn/Const_1"
input: "update_GRUpostZ_1/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostZ_1/rnn/zeros"
op: "Fill"
input: "update_GRUpostZ_1/rnn/concat_1"
input: "update_GRUpostZ_1/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpostZ_1/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostZ_1/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpostZ_1/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostZ_1/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpostZ_1/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpostZ_1/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpostZ_1/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpostZ_1/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpostZ_1/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpostZ_1/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpostZ_1/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpostZ_1/rnn/TensorArray_1"
input: "update_GRUpostZ_1/rnn/TensorArrayUnstack/range"
input: "update_GRUpostZ_1/rnn/transpose"
input: "update_GRUpostZ_1/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/transpose"
    }
  }
}
, name: "update_GRUpostZ_1/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/Maximum"
op: "Maximum"
input: "update_GRUpostZ_1/rnn/Maximum/x"
input: "update_GRUpostZ_1/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/Minimum"
op: "Minimum"
input: "update_GRUpostZ_1/rnn/strided_slice"
input: "update_GRUpostZ_1/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_1/rnn/while/Enter"
op: "Enter"
input: "update_GRUpostZ_1/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_1/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpostZ_1/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_1/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpostZ_1/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_1/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpostZ_1/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_1/rnn/while/Merge"
op: "Merge"
input: "update_GRUpostZ_1/rnn/while/Enter"
input: "update_GRUpostZ_1/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpostZ_1/rnn/while/Enter_1"
input: "update_GRUpostZ_1/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpostZ_1/rnn/while/Enter_2"
input: "update_GRUpostZ_1/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpostZ_1/rnn/while/Enter_3"
input: "update_GRUpostZ_1/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpostZ_1/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_1/rnn/while/Less"
op: "Less"
input: "update_GRUpostZ_1/rnn/while/Merge"
input: "update_GRUpostZ_1/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpostZ_1/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_1/rnn/while/Less_1"
op: "Less"
input: "update_GRUpostZ_1/rnn/while/Merge_1"
input: "update_GRUpostZ_1/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpostZ_1/rnn/while/Less"
input: "update_GRUpostZ_1/rnn/while/Less_1"
, name: "update_GRUpostZ_1/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpostZ_1/rnn/while/LogicalAnd"
, name: "update_GRUpostZ_1/rnn/while/Switch"
op: "Switch"
input: "update_GRUpostZ_1/rnn/while/Merge"
input: "update_GRUpostZ_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpostZ_1/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpostZ_1/rnn/while/Merge_1"
input: "update_GRUpostZ_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpostZ_1/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpostZ_1/rnn/while/Merge_2"
input: "update_GRUpostZ_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpostZ_1/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpostZ_1/rnn/while/Merge_3"
input: "update_GRUpostZ_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpostZ_1/rnn/while/Identity"
op: "Identity"
input: "update_GRUpostZ_1/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpostZ_1/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpostZ_1/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpostZ_1/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/add/y"
op: "Const"
input: "^update_GRUpostZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/while/add"
op: "Add"
input: "update_GRUpostZ_1/rnn/while/Identity"
input: "update_GRUpostZ_1/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpostZ_1/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_1/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpostZ_1/rnn/while/Identity_1"
input: "update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpostZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpostZ_1/rnn/while/TensorArrayReadV3"
input: "update_GRUpostZ_1/rnn/while/Identity_3"
input: "update_GRUpostZ_1/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpostZ_1/rnn/while/gru_cell/concat"
input: "update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpostZ_1/rnn/while/gru_cell/MatMul"
input: "update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpostZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpostZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpostZ_1/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpostZ_1/rnn/while/gru_cell/split"
input: "update_GRUpostZ_1/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpostZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpostZ_1/rnn/while/TensorArrayReadV3"
input: "update_GRUpostZ_1/rnn/while/gru_cell/mul"
input: "update_GRUpostZ_1/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpostZ_1/rnn/while/gru_cell/concat_1"
input: "update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpostZ_1/rnn/while/gru_cell/split:1"
input: "update_GRUpostZ_1/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpostZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpostZ_1/rnn/while/gru_cell/sub/x"
input: "update_GRUpostZ_1/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpostZ_1/rnn/while/gru_cell/sub"
input: "update_GRUpostZ_1/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpostZ_1/rnn/while/gru_cell/mul_1"
input: "update_GRUpostZ_1/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpostZ_1/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpostZ_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostZ_1/rnn/while/Identity_1"
input: "update_GRUpostZ_1/rnn/while/gru_cell/add"
input: "update_GRUpostZ_1/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpostZ_1/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpostZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/while/add_1"
op: "Add"
input: "update_GRUpostZ_1/rnn/while/Identity_1"
input: "update_GRUpostZ_1/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpostZ_1/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpostZ_1/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpostZ_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpostZ_1/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/Exit"
op: "Exit"
input: "update_GRUpostZ_1/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpostZ_1/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpostZ_1/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpostZ_1/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpostZ_1/rnn/TensorArray"
input: "update_GRUpostZ_1/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpostZ_1/rnn/TensorArrayStack/range/start"
input: "update_GRUpostZ_1/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpostZ_1/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostZ_1/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpostZ_1/rnn/TensorArray"
input: "update_GRUpostZ_1/rnn/TensorArrayStack/range"
input: "update_GRUpostZ_1/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpostZ_1/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_1/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostZ_1/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostZ_1/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostZ_1/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_1/rnn/range_1"
op: "Range"
input: "update_GRUpostZ_1/rnn/range_1/start"
input: "update_GRUpostZ_1/rnn/Rank_1"
input: "update_GRUpostZ_1/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_1/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_1/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpostZ_1/rnn/concat_2/values_0"
input: "update_GRUpostZ_1/rnn/range_1"
input: "update_GRUpostZ_1/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpostZ_1/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpostZ_1/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_1/Reshape_2"
op: "Reshape"
input: "update_GRUpostZ_1/rnn/while/Exit_3"
input: "update_GRUpostZ_1/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_1/Mul"
op: "Mul"
input: "update_GRUpostZ_1/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_19/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_19"
op: "Reshape"
input: "edge_nnpostZ/Reshape_1"
input: "Reshape_19/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_20/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_20"
op: "Reshape"
input: "update_GRUpostZ_1/Mul"
input: "Reshape_20/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_5"
op: "BatchMatMul"
input: "Reshape_19"
input: "Reshape_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_21/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_21"
op: "Reshape"
input: "MatMul_5"
input: "Reshape_21/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_6/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_6"
op: "Transpose"
input: "Reshape_21"
input: "transpose_6/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_5/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_5"
op: "Mean"
input: "transpose_6"
input: "Mean_5/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_5/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_5"
op: "RealDiv"
input: "Mean_5"
input: "truediv_5/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_2/Reshape"
op: "Reshape"
input: "truediv_5"
input: "update_GRUpostZ_2/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_2/Reshape_1"
op: "Reshape"
input: "update_GRUpostZ_1/Mul"
input: "update_GRUpostZ_2/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostZ_2/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostZ_2/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/range"
op: "Range"
input: "update_GRUpostZ_2/rnn/range/start"
input: "update_GRUpostZ_2/rnn/Rank"
input: "update_GRUpostZ_2/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_2/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_2/rnn/concat"
op: "ConcatV2"
input: "update_GRUpostZ_2/rnn/concat/values_0"
input: "update_GRUpostZ_2/rnn/range"
input: "update_GRUpostZ_2/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/transpose"
op: "Transpose"
input: "update_GRUpostZ_2/Reshape"
input: "update_GRUpostZ_2/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_2/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_2/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpostZ_2/rnn/Shape"
input: "update_GRUpostZ_2/rnn/strided_slice/stack"
input: "update_GRUpostZ_2/rnn/strided_slice/stack_1"
input: "update_GRUpostZ_2/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostZ_2/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpostZ_2/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostZ_2/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_2/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpostZ_2/rnn/Const"
input: "update_GRUpostZ_2/rnn/Const_1"
input: "update_GRUpostZ_2/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostZ_2/rnn/zeros"
op: "Fill"
input: "update_GRUpostZ_2/rnn/concat_1"
input: "update_GRUpostZ_2/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpostZ_2/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostZ_2/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpostZ_2/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostZ_2/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpostZ_2/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpostZ_2/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpostZ_2/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpostZ_2/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpostZ_2/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpostZ_2/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpostZ_2/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpostZ_2/rnn/TensorArray_1"
input: "update_GRUpostZ_2/rnn/TensorArrayUnstack/range"
input: "update_GRUpostZ_2/rnn/transpose"
input: "update_GRUpostZ_2/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/transpose"
    }
  }
}
, name: "update_GRUpostZ_2/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/Maximum"
op: "Maximum"
input: "update_GRUpostZ_2/rnn/Maximum/x"
input: "update_GRUpostZ_2/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/Minimum"
op: "Minimum"
input: "update_GRUpostZ_2/rnn/strided_slice"
input: "update_GRUpostZ_2/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_2/rnn/while/Enter"
op: "Enter"
input: "update_GRUpostZ_2/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_2/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpostZ_2/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_2/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpostZ_2/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_2/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpostZ_2/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_2/rnn/while/Merge"
op: "Merge"
input: "update_GRUpostZ_2/rnn/while/Enter"
input: "update_GRUpostZ_2/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpostZ_2/rnn/while/Enter_1"
input: "update_GRUpostZ_2/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpostZ_2/rnn/while/Enter_2"
input: "update_GRUpostZ_2/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpostZ_2/rnn/while/Enter_3"
input: "update_GRUpostZ_2/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpostZ_2/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_2/rnn/while/Less"
op: "Less"
input: "update_GRUpostZ_2/rnn/while/Merge"
input: "update_GRUpostZ_2/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpostZ_2/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_2/rnn/while/Less_1"
op: "Less"
input: "update_GRUpostZ_2/rnn/while/Merge_1"
input: "update_GRUpostZ_2/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpostZ_2/rnn/while/Less"
input: "update_GRUpostZ_2/rnn/while/Less_1"
, name: "update_GRUpostZ_2/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpostZ_2/rnn/while/LogicalAnd"
, name: "update_GRUpostZ_2/rnn/while/Switch"
op: "Switch"
input: "update_GRUpostZ_2/rnn/while/Merge"
input: "update_GRUpostZ_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpostZ_2/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpostZ_2/rnn/while/Merge_1"
input: "update_GRUpostZ_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpostZ_2/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpostZ_2/rnn/while/Merge_2"
input: "update_GRUpostZ_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpostZ_2/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpostZ_2/rnn/while/Merge_3"
input: "update_GRUpostZ_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpostZ_2/rnn/while/Identity"
op: "Identity"
input: "update_GRUpostZ_2/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpostZ_2/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpostZ_2/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpostZ_2/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/add/y"
op: "Const"
input: "^update_GRUpostZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/while/add"
op: "Add"
input: "update_GRUpostZ_2/rnn/while/Identity"
input: "update_GRUpostZ_2/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpostZ_2/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_2/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpostZ_2/rnn/while/Identity_1"
input: "update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpostZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpostZ_2/rnn/while/TensorArrayReadV3"
input: "update_GRUpostZ_2/rnn/while/Identity_3"
input: "update_GRUpostZ_2/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpostZ_2/rnn/while/gru_cell/concat"
input: "update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpostZ_2/rnn/while/gru_cell/MatMul"
input: "update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpostZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpostZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpostZ_2/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpostZ_2/rnn/while/gru_cell/split"
input: "update_GRUpostZ_2/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpostZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpostZ_2/rnn/while/TensorArrayReadV3"
input: "update_GRUpostZ_2/rnn/while/gru_cell/mul"
input: "update_GRUpostZ_2/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpostZ_2/rnn/while/gru_cell/concat_1"
input: "update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpostZ_2/rnn/while/gru_cell/split:1"
input: "update_GRUpostZ_2/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpostZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpostZ_2/rnn/while/gru_cell/sub/x"
input: "update_GRUpostZ_2/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpostZ_2/rnn/while/gru_cell/sub"
input: "update_GRUpostZ_2/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpostZ_2/rnn/while/gru_cell/mul_1"
input: "update_GRUpostZ_2/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpostZ_2/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostZ_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpostZ_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostZ_2/rnn/while/Identity_1"
input: "update_GRUpostZ_2/rnn/while/gru_cell/add"
input: "update_GRUpostZ_2/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpostZ_2/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpostZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/while/add_1"
op: "Add"
input: "update_GRUpostZ_2/rnn/while/Identity_1"
input: "update_GRUpostZ_2/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpostZ_2/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpostZ_2/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpostZ_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpostZ_2/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/Exit"
op: "Exit"
input: "update_GRUpostZ_2/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpostZ_2/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpostZ_2/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpostZ_2/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpostZ_2/rnn/TensorArray"
input: "update_GRUpostZ_2/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpostZ_2/rnn/TensorArrayStack/range/start"
input: "update_GRUpostZ_2/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpostZ_2/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostZ_2/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpostZ_2/rnn/TensorArray"
input: "update_GRUpostZ_2/rnn/TensorArrayStack/range"
input: "update_GRUpostZ_2/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpostZ_2/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_2/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostZ_2/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostZ_2/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostZ_2/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostZ_2/rnn/range_1"
op: "Range"
input: "update_GRUpostZ_2/rnn/range_1/start"
input: "update_GRUpostZ_2/rnn/Rank_1"
input: "update_GRUpostZ_2/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_2/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostZ_2/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpostZ_2/rnn/concat_2/values_0"
input: "update_GRUpostZ_2/rnn/range_1"
input: "update_GRUpostZ_2/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpostZ_2/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpostZ_2/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ_2/Reshape_2"
op: "Reshape"
input: "update_GRUpostZ_2/rnn/while/Exit_3"
input: "update_GRUpostZ_2/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ_2/Mul"
op: "Mul"
input: "update_GRUpostZ_2/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "g_nnpostZ/concat"
op: "ConcatV2"
input: "update_GRUpostZ_2/Mul"
input: "Mul"
input: "g_nnpostZ/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostZ/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostZ/Reshape"
op: "Reshape"
input: "g_nnpostZ/concat"
input: "g_nnpostZ/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostZ/dropout/cond/Switch"
op: "Switch"
input: "Placeholder_5"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostZ/dropout/cond/switch_t"
op: "Identity"
input: "g_nnpostZ/dropout/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostZ/dropout/cond/switch_f"
op: "Identity"
input: "g_nnpostZ/dropout/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostZ/dropout/cond/pred_id"
op: "Identity"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostZ/dropout/cond/dropout/keep_prob"
op: "Const"
input: "^g_nnpostZ/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.800000011920929
    }
  }
}
, name: "g_nnpostZ/dropout/cond/dropout/Shape"
op: "Const"
input: "^g_nnpostZ/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostZ/dropout/cond/dropout/random_uniform/min"
op: "Const"
input: "^g_nnpostZ/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostZ/dropout/cond/dropout/random_uniform/max"
op: "Const"
input: "^g_nnpostZ/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "g_nnpostZ/dropout/cond/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpostZ/dropout/cond/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 1113
  }
}
, name: "g_nnpostZ/dropout/cond/dropout/random_uniform/sub"
op: "Sub"
input: "g_nnpostZ/dropout/cond/dropout/random_uniform/max"
input: "g_nnpostZ/dropout/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout/cond/dropout/random_uniform/mul"
op: "Mul"
input: "g_nnpostZ/dropout/cond/dropout/random_uniform/RandomUniform"
input: "g_nnpostZ/dropout/cond/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout/cond/dropout/random_uniform"
op: "Add"
input: "g_nnpostZ/dropout/cond/dropout/random_uniform/mul"
input: "g_nnpostZ/dropout/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout/cond/dropout/add"
op: "Add"
input: "g_nnpostZ/dropout/cond/dropout/keep_prob"
input: "g_nnpostZ/dropout/cond/dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout/cond/dropout/Floor"
op: "Floor"
input: "g_nnpostZ/dropout/cond/dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout/cond/dropout/div/Switch"
op: "Switch"
input: "g_nnpostZ/Reshape"
input: "g_nnpostZ/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/Reshape"
    }
  }
}
, name: "g_nnpostZ/dropout/cond/dropout/div"
op: "RealDiv"
input: "g_nnpostZ/dropout/cond/dropout/div/Switch:1"
input: "g_nnpostZ/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout/cond/dropout/mul"
op: "Mul"
input: "g_nnpostZ/dropout/cond/dropout/div"
input: "g_nnpostZ/dropout/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout/cond/Identity/Switch"
op: "Switch"
input: "g_nnpostZ/Reshape"
input: "g_nnpostZ/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/Reshape"
    }
  }
}
, name: "g_nnpostZ/dropout/cond/Identity"
op: "Identity"
input: "g_nnpostZ/dropout/cond/Identity/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout/cond/Merge"
op: "Merge"
input: "g_nnpostZ/dropout/cond/Identity"
input: "g_nnpostZ/dropout/cond/dropout/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dense/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostZ/dense/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.17320507764816284
    }
  }
}
, name: "g_nnpostZ/dense/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.17320507764816284
    }
  }
}
, name: "g_nnpostZ/dense/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpostZ/dense/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 1128
  }
}
, name: "g_nnpostZ/dense/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "g_nnpostZ/dense/kernel/Initializer/random_uniform/max"
input: "g_nnpostZ/dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
, name: "g_nnpostZ/dense/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "g_nnpostZ/dense/kernel/Initializer/random_uniform/RandomUniform"
input: "g_nnpostZ/dense/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
, name: "g_nnpostZ/dense/kernel/Initializer/random_uniform"
op: "Add"
input: "g_nnpostZ/dense/kernel/Initializer/random_uniform/mul"
input: "g_nnpostZ/dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
, name: "g_nnpostZ/dense/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostZ/dense/kernel/Assign"
op: "Assign"
input: "g_nnpostZ/dense/kernel"
input: "g_nnpostZ/dense/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostZ/dense/kernel/read"
op: "Identity"
input: "g_nnpostZ/dense/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
, name: "g_nnpostZ/dense/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostZ/dense/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostZ/dense/bias/Assign"
op: "Assign"
input: "g_nnpostZ/dense/bias"
input: "g_nnpostZ/dense/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostZ/dense/bias/read"
op: "Identity"
input: "g_nnpostZ/dense/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
, name: "g_nnpostZ/dense/MatMul"
op: "MatMul"
input: "g_nnpostZ/dropout/cond/Merge"
input: "g_nnpostZ/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "g_nnpostZ/dense/BiasAdd"
op: "BiasAdd"
input: "g_nnpostZ/dense/MatMul"
input: "g_nnpostZ/dense/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "g_nnpostZ/dense/Sigmoid"
op: "Sigmoid"
input: "g_nnpostZ/dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout_1/cond/Switch"
op: "Switch"
input: "Placeholder_5"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostZ/dropout_1/cond/switch_t"
op: "Identity"
input: "g_nnpostZ/dropout_1/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostZ/dropout_1/cond/switch_f"
op: "Identity"
input: "g_nnpostZ/dropout_1/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostZ/dropout_1/cond/pred_id"
op: "Identity"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostZ/dropout_1/cond/dropout/keep_prob"
op: "Const"
input: "^g_nnpostZ/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.800000011920929
    }
  }
}
, name: "g_nnpostZ/dropout_1/cond/dropout/Shape"
op: "Const"
input: "^g_nnpostZ/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostZ/dropout_1/cond/dropout/random_uniform/min"
op: "Const"
input: "^g_nnpostZ/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostZ/dropout_1/cond/dropout/random_uniform/max"
op: "Const"
input: "^g_nnpostZ/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "g_nnpostZ/dropout_1/cond/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpostZ/dropout_1/cond/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 1150
  }
}
, name: "g_nnpostZ/dropout_1/cond/dropout/random_uniform/sub"
op: "Sub"
input: "g_nnpostZ/dropout_1/cond/dropout/random_uniform/max"
input: "g_nnpostZ/dropout_1/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout_1/cond/dropout/random_uniform/mul"
op: "Mul"
input: "g_nnpostZ/dropout_1/cond/dropout/random_uniform/RandomUniform"
input: "g_nnpostZ/dropout_1/cond/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout_1/cond/dropout/random_uniform"
op: "Add"
input: "g_nnpostZ/dropout_1/cond/dropout/random_uniform/mul"
input: "g_nnpostZ/dropout_1/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout_1/cond/dropout/add"
op: "Add"
input: "g_nnpostZ/dropout_1/cond/dropout/keep_prob"
input: "g_nnpostZ/dropout_1/cond/dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout_1/cond/dropout/Floor"
op: "Floor"
input: "g_nnpostZ/dropout_1/cond/dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout_1/cond/dropout/div/Switch"
op: "Switch"
input: "g_nnpostZ/dense/Sigmoid"
input: "g_nnpostZ/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/Sigmoid"
    }
  }
}
, name: "g_nnpostZ/dropout_1/cond/dropout/div"
op: "RealDiv"
input: "g_nnpostZ/dropout_1/cond/dropout/div/Switch:1"
input: "g_nnpostZ/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout_1/cond/dropout/mul"
op: "Mul"
input: "g_nnpostZ/dropout_1/cond/dropout/div"
input: "g_nnpostZ/dropout_1/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout_1/cond/Identity/Switch"
op: "Switch"
input: "g_nnpostZ/dense/Sigmoid"
input: "g_nnpostZ/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/Sigmoid"
    }
  }
}
, name: "g_nnpostZ/dropout_1/cond/Identity"
op: "Identity"
input: "g_nnpostZ/dropout_1/cond/Identity/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dropout_1/cond/Merge"
op: "Merge"
input: "g_nnpostZ/dropout_1/cond/Identity"
input: "g_nnpostZ/dropout_1/cond/dropout/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.17320507764816284
    }
  }
}
, name: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.17320507764816284
    }
  }
}
, name: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 1165
  }
}
, name: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform/max"
input: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
, name: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform/RandomUniform"
input: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
, name: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform"
op: "Add"
input: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform/mul"
input: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
, name: "g_nnpostZ/dense_1/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostZ/dense_1/kernel/Assign"
op: "Assign"
input: "g_nnpostZ/dense_1/kernel"
input: "g_nnpostZ/dense_1/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostZ/dense_1/kernel/read"
op: "Identity"
input: "g_nnpostZ/dense_1/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
, name: "g_nnpostZ/dense_1/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostZ/dense_1/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostZ/dense_1/bias/Assign"
op: "Assign"
input: "g_nnpostZ/dense_1/bias"
input: "g_nnpostZ/dense_1/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostZ/dense_1/bias/read"
op: "Identity"
input: "g_nnpostZ/dense_1/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
, name: "g_nnpostZ/dense_1/MatMul"
op: "MatMul"
input: "g_nnpostZ/dropout_1/cond/Merge"
input: "g_nnpostZ/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "g_nnpostZ/dense_1/BiasAdd"
op: "BiasAdd"
input: "g_nnpostZ/dense_1/MatMul"
input: "g_nnpostZ/dense_1/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "g_nnpostZ/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostZ/Reshape_1"
op: "Reshape"
input: "g_nnpostZ/dense_1/BiasAdd"
input: "g_nnpostZ/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostZ/Mul"
op: "Mul"
input: "g_nnpostZ/Reshape_1"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "2\000\000\0002\000\000\000"
    }
  }
}
, name: "split_1/split_dim"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "split_1"
op: "SplitV"
input: "g_nnpostZ/Mul"
input: "Const_1"
input: "split_1/split_dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tlen"
  value {
    type: DT_INT32
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "random_normal_1/mean"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "random_normal_1/stddev"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "random_normal_1/RandomStandardNormal"
op: "RandomStandardNormal"
input: "Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 1187
  }
}
, name: "random_normal_1/mul"
op: "Mul"
input: "random_normal_1/RandomStandardNormal"
input: "random_normal_1/stddev"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "random_normal_1"
op: "Add"
input: "random_normal_1/mul"
input: "random_normal_1/mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_4/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.5
    }
  }
}
, name: "mul_4"
op: "Mul"
input: "mul_4/x"
input: "split_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Exp_1"
op: "Exp"
input: "mul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Mul_5"
op: "Mul"
input: "Exp_1"
input: "random_normal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Add_1"
op: "Add"
input: "split_1"
input: "Mul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Mul_6"
op: "Mul"
input: "Add_1"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "edge_nnpostX/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "T\006\000\000\013\000\000\000"
    }
  }
}
, name: "edge_nnpostX/Reshape"
op: "Reshape"
input: "concat"
input: "edge_nnpostX/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostX/dense/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\013\000\000\000d\000\000\000"
    }
  }
}
, name: "edge_nnpostX/dense/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.2324952781200409
    }
  }
}
, name: "edge_nnpostX/dense/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.2324952781200409
    }
  }
}
, name: "edge_nnpostX/dense/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "edge_nnpostX/dense/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 1201
  }
}
, name: "edge_nnpostX/dense/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "edge_nnpostX/dense/kernel/Initializer/random_uniform/max"
input: "edge_nnpostX/dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
, name: "edge_nnpostX/dense/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "edge_nnpostX/dense/kernel/Initializer/random_uniform/RandomUniform"
input: "edge_nnpostX/dense/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
, name: "edge_nnpostX/dense/kernel/Initializer/random_uniform"
op: "Add"
input: "edge_nnpostX/dense/kernel/Initializer/random_uniform/mul"
input: "edge_nnpostX/dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
, name: "edge_nnpostX/dense/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 11
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostX/dense/kernel/Assign"
op: "Assign"
input: "edge_nnpostX/dense/kernel"
input: "edge_nnpostX/dense/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostX/dense/kernel/read"
op: "Identity"
input: "edge_nnpostX/dense/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
, name: "edge_nnpostX/dense/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostX/dense/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostX/dense/bias/Assign"
op: "Assign"
input: "edge_nnpostX/dense/bias"
input: "edge_nnpostX/dense/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostX/dense/bias/read"
op: "Identity"
input: "edge_nnpostX/dense/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
, name: "edge_nnpostX/dense/MatMul"
op: "MatMul"
input: "edge_nnpostX/Reshape"
input: "edge_nnpostX/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "edge_nnpostX/dense/BiasAdd"
op: "BiasAdd"
input: "edge_nnpostX/dense/MatMul"
input: "edge_nnpostX/dense/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "edge_nnpostX/dense/Sigmoid"
op: "Sigmoid"
input: "edge_nnpostX/dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000\304\t\000\000"
    }
  }
}
, name: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.04803844541311264
    }
  }
}
, name: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.04803844541311264
    }
  }
}
, name: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 1218
  }
}
, name: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform/max"
input: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
, name: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform/RandomUniform"
input: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
, name: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform"
op: "Add"
input: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform/mul"
input: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
, name: "edge_nnpostX/dense_1/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostX/dense_1/kernel/Assign"
op: "Assign"
input: "edge_nnpostX/dense_1/kernel"
input: "edge_nnpostX/dense_1/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostX/dense_1/kernel/read"
op: "Identity"
input: "edge_nnpostX/dense_1/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
, name: "edge_nnpostX/dense_1/bias/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2500
    }
  }
}
, name: "edge_nnpostX/dense_1/bias/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostX/dense_1/bias/Initializer/zeros"
op: "Fill"
input: "edge_nnpostX/dense_1/bias/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostX/dense_1/bias/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostX/dense_1/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostX/dense_1/bias/Assign"
op: "Assign"
input: "edge_nnpostX/dense_1/bias"
input: "edge_nnpostX/dense_1/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostX/dense_1/bias/read"
op: "Identity"
input: "edge_nnpostX/dense_1/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
, name: "edge_nnpostX/dense_1/MatMul"
op: "MatMul"
input: "edge_nnpostX/dense/Sigmoid"
input: "edge_nnpostX/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "edge_nnpostX/dense_1/BiasAdd"
op: "BiasAdd"
input: "edge_nnpostX/dense_1/MatMul"
input: "edge_nnpostX/dense_1/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "edge_nnpostX/dense_1/Tanh"
op: "Tanh"
input: "edge_nnpostX/dense_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "edge_nnpostX/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "edge_nnpostX/Reshape_1"
op: "Reshape"
input: "edge_nnpostX/dense_1/Tanh"
input: "edge_nnpostX/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "add_2"
op: "Add"
input: "Mul_6"
input: "Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_22/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_22"
op: "Reshape"
input: "edge_nnpostX/Reshape_1"
input: "Reshape_22/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_23/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_23"
op: "Reshape"
input: "add_2"
input: "Reshape_23/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_6"
op: "BatchMatMul"
input: "Reshape_22"
input: "Reshape_23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_24/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_24"
op: "Reshape"
input: "MatMul_6"
input: "Reshape_24/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_7/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_7"
op: "Transpose"
input: "Reshape_24"
input: "transpose_7/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_6/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_6"
op: "Mean"
input: "transpose_7"
input: "Mean_6/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_6/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_6"
op: "RealDiv"
input: "Mean_6"
input: "truediv_6/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX/Reshape"
op: "Reshape"
input: "truediv_6"
input: "update_GRUpostX/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX/Reshape_1"
op: "Reshape"
input: "add_2"
input: "update_GRUpostX/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/range"
op: "Range"
input: "update_GRUpostX/rnn/range/start"
input: "update_GRUpostX/rnn/Rank"
input: "update_GRUpostX/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX/rnn/concat"
op: "ConcatV2"
input: "update_GRUpostX/rnn/concat/values_0"
input: "update_GRUpostX/rnn/range"
input: "update_GRUpostX/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/transpose"
op: "Transpose"
input: "update_GRUpostX/Reshape"
input: "update_GRUpostX/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX/rnn/Shape"
input: "update_GRUpostX/rnn/strided_slice/stack"
input: "update_GRUpostX/rnn/strided_slice/stack_1"
input: "update_GRUpostX/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpostX/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpostX/rnn/Const"
input: "update_GRUpostX/rnn/Const_1"
input: "update_GRUpostX/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX/rnn/zeros"
op: "Fill"
input: "update_GRUpostX/rnn/concat_1"
input: "update_GRUpostX/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpostX/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpostX/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpostX/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpostX/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpostX/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpostX/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpostX/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpostX/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpostX/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpostX/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpostX/rnn/TensorArray_1"
input: "update_GRUpostX/rnn/TensorArrayUnstack/range"
input: "update_GRUpostX/rnn/transpose"
input: "update_GRUpostX/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/transpose"
    }
  }
}
, name: "update_GRUpostX/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/Maximum"
op: "Maximum"
input: "update_GRUpostX/rnn/Maximum/x"
input: "update_GRUpostX/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/Minimum"
op: "Minimum"
input: "update_GRUpostX/rnn/strided_slice"
input: "update_GRUpostX/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX/rnn/while/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpostX/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpostX/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpostX/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX/rnn/while/Merge"
op: "Merge"
input: "update_GRUpostX/rnn/while/Enter"
input: "update_GRUpostX/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpostX/rnn/while/Enter_1"
input: "update_GRUpostX/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpostX/rnn/while/Enter_2"
input: "update_GRUpostX/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpostX/rnn/while/Enter_3"
input: "update_GRUpostX/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX/rnn/while/Less"
op: "Less"
input: "update_GRUpostX/rnn/while/Merge"
input: "update_GRUpostX/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX/rnn/while/Less_1"
op: "Less"
input: "update_GRUpostX/rnn/while/Merge_1"
input: "update_GRUpostX/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpostX/rnn/while/Less"
input: "update_GRUpostX/rnn/while/Less_1"
, name: "update_GRUpostX/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpostX/rnn/while/LogicalAnd"
, name: "update_GRUpostX/rnn/while/Switch"
op: "Switch"
input: "update_GRUpostX/rnn/while/Merge"
input: "update_GRUpostX/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpostX/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpostX/rnn/while/Merge_1"
input: "update_GRUpostX/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpostX/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpostX/rnn/while/Merge_2"
input: "update_GRUpostX/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpostX/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpostX/rnn/while/Merge_3"
input: "update_GRUpostX/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpostX/rnn/while/Identity"
op: "Identity"
input: "update_GRUpostX/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpostX/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpostX/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpostX/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/add/y"
op: "Const"
input: "^update_GRUpostX/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/while/add"
op: "Add"
input: "update_GRUpostX/rnn/while/Identity"
input: "update_GRUpostX/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpostX/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpostX/rnn/while/Identity_1"
input: "update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.17320507764816284
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.17320507764816284
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 1319
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform/max"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform"
op: "Add"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform/mul"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Assign"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/read"
op: "Identity"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/bias/Initializer/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/bias/Assign"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/gates/bias"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/Initializer/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/bias/read"
op: "Identity"
input: "update_GRUpostX/rnn/gru_cell/gates/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.20000000298023224
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.20000000298023224
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 1333
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/max"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform"
op: "Add"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Assign"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/read"
op: "Identity"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/bias/Assign"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/bias/read"
op: "Identity"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpostX/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpostX/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX/rnn/while/Identity_3"
input: "update_GRUpostX/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpostX/rnn/while/gru_cell/concat"
input: "update_GRUpostX/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpostX/rnn/while/gru_cell/MatMul"
input: "update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpostX/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpostX/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpostX/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpostX/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpostX/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpostX/rnn/while/gru_cell/split"
input: "update_GRUpostX/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpostX/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpostX/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX/rnn/while/gru_cell/mul"
input: "update_GRUpostX/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpostX/rnn/while/gru_cell/concat_1"
input: "update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpostX/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpostX/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpostX/rnn/while/gru_cell/split:1"
input: "update_GRUpostX/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpostX/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpostX/rnn/while/gru_cell/sub/x"
input: "update_GRUpostX/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpostX/rnn/while/gru_cell/sub"
input: "update_GRUpostX/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpostX/rnn/while/gru_cell/mul_1"
input: "update_GRUpostX/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpostX/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostX/rnn/while/Identity_1"
input: "update_GRUpostX/rnn/while/gru_cell/add"
input: "update_GRUpostX/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpostX/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpostX/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/while/add_1"
op: "Add"
input: "update_GRUpostX/rnn/while/Identity_1"
input: "update_GRUpostX/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpostX/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpostX/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpostX/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpostX/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/Exit"
op: "Exit"
input: "update_GRUpostX/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpostX/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpostX/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpostX/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpostX/rnn/TensorArray"
input: "update_GRUpostX/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpostX/rnn/TensorArrayStack/range/start"
input: "update_GRUpostX/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpostX/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpostX/rnn/TensorArray"
input: "update_GRUpostX/rnn/TensorArrayStack/range"
input: "update_GRUpostX/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpostX/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpostX/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX/rnn/range_1"
op: "Range"
input: "update_GRUpostX/rnn/range_1/start"
input: "update_GRUpostX/rnn/Rank_1"
input: "update_GRUpostX/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpostX/rnn/concat_2/values_0"
input: "update_GRUpostX/rnn/range_1"
input: "update_GRUpostX/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpostX/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpostX/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX/Reshape_2"
op: "Reshape"
input: "update_GRUpostX/rnn/while/Exit_3"
input: "update_GRUpostX/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/Mul"
op: "Mul"
input: "update_GRUpostX/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_25/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_25"
op: "Reshape"
input: "edge_nnpostX/Reshape_1"
input: "Reshape_25/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_26/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_26"
op: "Reshape"
input: "update_GRUpostX/Mul"
input: "Reshape_26/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_7"
op: "BatchMatMul"
input: "Reshape_25"
input: "Reshape_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_27/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_27"
op: "Reshape"
input: "MatMul_7"
input: "Reshape_27/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_8/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_8"
op: "Transpose"
input: "Reshape_27"
input: "transpose_8/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_7/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_7"
op: "Mean"
input: "transpose_8"
input: "Mean_7/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_7/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_7"
op: "RealDiv"
input: "Mean_7"
input: "truediv_7/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_1/Reshape"
op: "Reshape"
input: "truediv_7"
input: "update_GRUpostX_1/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_1/Reshape_1"
op: "Reshape"
input: "update_GRUpostX/Mul"
input: "update_GRUpostX_1/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_1/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_1/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/range"
op: "Range"
input: "update_GRUpostX_1/rnn/range/start"
input: "update_GRUpostX_1/rnn/Rank"
input: "update_GRUpostX_1/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_1/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_1/rnn/concat"
op: "ConcatV2"
input: "update_GRUpostX_1/rnn/concat/values_0"
input: "update_GRUpostX_1/rnn/range"
input: "update_GRUpostX_1/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/transpose"
op: "Transpose"
input: "update_GRUpostX_1/Reshape"
input: "update_GRUpostX_1/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_1/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_1/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_1/rnn/Shape"
input: "update_GRUpostX_1/rnn/strided_slice/stack"
input: "update_GRUpostX_1/rnn/strided_slice/stack_1"
input: "update_GRUpostX_1/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_1/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpostX_1/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_1/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_1/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_1/rnn/Const"
input: "update_GRUpostX_1/rnn/Const_1"
input: "update_GRUpostX_1/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX_1/rnn/zeros"
op: "Fill"
input: "update_GRUpostX_1/rnn/concat_1"
input: "update_GRUpostX_1/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_1/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpostX_1/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_1/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpostX_1/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpostX_1/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_1/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_1/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpostX_1/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpostX_1/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpostX_1/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpostX_1/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpostX_1/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpostX_1/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpostX_1/rnn/TensorArray_1"
input: "update_GRUpostX_1/rnn/TensorArrayUnstack/range"
input: "update_GRUpostX_1/rnn/transpose"
input: "update_GRUpostX_1/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/transpose"
    }
  }
}
, name: "update_GRUpostX_1/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/Maximum"
op: "Maximum"
input: "update_GRUpostX_1/rnn/Maximum/x"
input: "update_GRUpostX_1/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/Minimum"
op: "Minimum"
input: "update_GRUpostX_1/rnn/strided_slice"
input: "update_GRUpostX_1/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_1/rnn/while/Enter"
op: "Enter"
input: "update_GRUpostX_1/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_1/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpostX_1/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_1/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpostX_1/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_1/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpostX_1/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_1/rnn/while/Merge"
op: "Merge"
input: "update_GRUpostX_1/rnn/while/Enter"
input: "update_GRUpostX_1/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpostX_1/rnn/while/Enter_1"
input: "update_GRUpostX_1/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpostX_1/rnn/while/Enter_2"
input: "update_GRUpostX_1/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpostX_1/rnn/while/Enter_3"
input: "update_GRUpostX_1/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpostX_1/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_1/rnn/while/Less"
op: "Less"
input: "update_GRUpostX_1/rnn/while/Merge"
input: "update_GRUpostX_1/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpostX_1/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_1/rnn/while/Less_1"
op: "Less"
input: "update_GRUpostX_1/rnn/while/Merge_1"
input: "update_GRUpostX_1/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpostX_1/rnn/while/Less"
input: "update_GRUpostX_1/rnn/while/Less_1"
, name: "update_GRUpostX_1/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpostX_1/rnn/while/LogicalAnd"
, name: "update_GRUpostX_1/rnn/while/Switch"
op: "Switch"
input: "update_GRUpostX_1/rnn/while/Merge"
input: "update_GRUpostX_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpostX_1/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpostX_1/rnn/while/Merge_1"
input: "update_GRUpostX_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpostX_1/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpostX_1/rnn/while/Merge_2"
input: "update_GRUpostX_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpostX_1/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpostX_1/rnn/while/Merge_3"
input: "update_GRUpostX_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpostX_1/rnn/while/Identity"
op: "Identity"
input: "update_GRUpostX_1/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpostX_1/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpostX_1/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpostX_1/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/add/y"
op: "Const"
input: "^update_GRUpostX_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/while/add"
op: "Add"
input: "update_GRUpostX_1/rnn/while/Identity"
input: "update_GRUpostX_1/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpostX_1/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_1/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpostX_1/rnn/while/Identity_1"
input: "update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpostX_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpostX_1/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_1/rnn/while/Identity_3"
input: "update_GRUpostX_1/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpostX_1/rnn/while/gru_cell/concat"
input: "update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpostX_1/rnn/while/gru_cell/MatMul"
input: "update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpostX_1/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpostX_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpostX_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpostX_1/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpostX_1/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpostX_1/rnn/while/gru_cell/split"
input: "update_GRUpostX_1/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpostX_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_1/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_1/rnn/while/gru_cell/mul"
input: "update_GRUpostX_1/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpostX_1/rnn/while/gru_cell/concat_1"
input: "update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpostX_1/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpostX_1/rnn/while/gru_cell/split:1"
input: "update_GRUpostX_1/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpostX_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpostX_1/rnn/while/gru_cell/sub/x"
input: "update_GRUpostX_1/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpostX_1/rnn/while/gru_cell/sub"
input: "update_GRUpostX_1/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpostX_1/rnn/while/gru_cell/mul_1"
input: "update_GRUpostX_1/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpostX_1/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpostX_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostX_1/rnn/while/Identity_1"
input: "update_GRUpostX_1/rnn/while/gru_cell/add"
input: "update_GRUpostX_1/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpostX_1/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpostX_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/while/add_1"
op: "Add"
input: "update_GRUpostX_1/rnn/while/Identity_1"
input: "update_GRUpostX_1/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpostX_1/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpostX_1/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpostX_1/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpostX_1/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/Exit"
op: "Exit"
input: "update_GRUpostX_1/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpostX_1/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpostX_1/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpostX_1/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpostX_1/rnn/TensorArray"
input: "update_GRUpostX_1/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpostX_1/rnn/TensorArrayStack/range/start"
input: "update_GRUpostX_1/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpostX_1/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_1/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpostX_1/rnn/TensorArray"
input: "update_GRUpostX_1/rnn/TensorArrayStack/range"
input: "update_GRUpostX_1/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpostX_1/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpostX_1/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_1/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_1/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_1/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_1/rnn/range_1"
op: "Range"
input: "update_GRUpostX_1/rnn/range_1/start"
input: "update_GRUpostX_1/rnn/Rank_1"
input: "update_GRUpostX_1/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_1/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_1/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpostX_1/rnn/concat_2/values_0"
input: "update_GRUpostX_1/rnn/range_1"
input: "update_GRUpostX_1/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpostX_1/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpostX_1/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_1/Reshape_2"
op: "Reshape"
input: "update_GRUpostX_1/rnn/while/Exit_3"
input: "update_GRUpostX_1/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_1/Mul"
op: "Mul"
input: "update_GRUpostX_1/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_28/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_28"
op: "Reshape"
input: "edge_nnpostX/Reshape_1"
input: "Reshape_28/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_29/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_29"
op: "Reshape"
input: "update_GRUpostX_1/Mul"
input: "Reshape_29/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_8"
op: "BatchMatMul"
input: "Reshape_28"
input: "Reshape_29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_30/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_30"
op: "Reshape"
input: "MatMul_8"
input: "Reshape_30/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_9/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_9"
op: "Transpose"
input: "Reshape_30"
input: "transpose_9/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_8/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_8"
op: "Mean"
input: "transpose_9"
input: "Mean_8/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_8/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_8"
op: "RealDiv"
input: "Mean_8"
input: "truediv_8/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_2/Reshape"
op: "Reshape"
input: "truediv_8"
input: "update_GRUpostX_2/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_2/Reshape_1"
op: "Reshape"
input: "update_GRUpostX_1/Mul"
input: "update_GRUpostX_2/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_2/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_2/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/range"
op: "Range"
input: "update_GRUpostX_2/rnn/range/start"
input: "update_GRUpostX_2/rnn/Rank"
input: "update_GRUpostX_2/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_2/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_2/rnn/concat"
op: "ConcatV2"
input: "update_GRUpostX_2/rnn/concat/values_0"
input: "update_GRUpostX_2/rnn/range"
input: "update_GRUpostX_2/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/transpose"
op: "Transpose"
input: "update_GRUpostX_2/Reshape"
input: "update_GRUpostX_2/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_2/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_2/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_2/rnn/Shape"
input: "update_GRUpostX_2/rnn/strided_slice/stack"
input: "update_GRUpostX_2/rnn/strided_slice/stack_1"
input: "update_GRUpostX_2/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_2/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpostX_2/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_2/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_2/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_2/rnn/Const"
input: "update_GRUpostX_2/rnn/Const_1"
input: "update_GRUpostX_2/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX_2/rnn/zeros"
op: "Fill"
input: "update_GRUpostX_2/rnn/concat_1"
input: "update_GRUpostX_2/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_2/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpostX_2/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_2/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpostX_2/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpostX_2/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_2/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_2/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpostX_2/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpostX_2/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpostX_2/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpostX_2/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpostX_2/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpostX_2/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpostX_2/rnn/TensorArray_1"
input: "update_GRUpostX_2/rnn/TensorArrayUnstack/range"
input: "update_GRUpostX_2/rnn/transpose"
input: "update_GRUpostX_2/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/transpose"
    }
  }
}
, name: "update_GRUpostX_2/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/Maximum"
op: "Maximum"
input: "update_GRUpostX_2/rnn/Maximum/x"
input: "update_GRUpostX_2/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/Minimum"
op: "Minimum"
input: "update_GRUpostX_2/rnn/strided_slice"
input: "update_GRUpostX_2/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_2/rnn/while/Enter"
op: "Enter"
input: "update_GRUpostX_2/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_2/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpostX_2/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_2/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpostX_2/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_2/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpostX_2/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_2/rnn/while/Merge"
op: "Merge"
input: "update_GRUpostX_2/rnn/while/Enter"
input: "update_GRUpostX_2/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpostX_2/rnn/while/Enter_1"
input: "update_GRUpostX_2/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpostX_2/rnn/while/Enter_2"
input: "update_GRUpostX_2/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpostX_2/rnn/while/Enter_3"
input: "update_GRUpostX_2/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpostX_2/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_2/rnn/while/Less"
op: "Less"
input: "update_GRUpostX_2/rnn/while/Merge"
input: "update_GRUpostX_2/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpostX_2/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_2/rnn/while/Less_1"
op: "Less"
input: "update_GRUpostX_2/rnn/while/Merge_1"
input: "update_GRUpostX_2/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpostX_2/rnn/while/Less"
input: "update_GRUpostX_2/rnn/while/Less_1"
, name: "update_GRUpostX_2/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpostX_2/rnn/while/LogicalAnd"
, name: "update_GRUpostX_2/rnn/while/Switch"
op: "Switch"
input: "update_GRUpostX_2/rnn/while/Merge"
input: "update_GRUpostX_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpostX_2/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpostX_2/rnn/while/Merge_1"
input: "update_GRUpostX_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpostX_2/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpostX_2/rnn/while/Merge_2"
input: "update_GRUpostX_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpostX_2/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpostX_2/rnn/while/Merge_3"
input: "update_GRUpostX_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpostX_2/rnn/while/Identity"
op: "Identity"
input: "update_GRUpostX_2/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpostX_2/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpostX_2/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpostX_2/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/add/y"
op: "Const"
input: "^update_GRUpostX_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/while/add"
op: "Add"
input: "update_GRUpostX_2/rnn/while/Identity"
input: "update_GRUpostX_2/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpostX_2/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_2/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpostX_2/rnn/while/Identity_1"
input: "update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpostX_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpostX_2/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_2/rnn/while/Identity_3"
input: "update_GRUpostX_2/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpostX_2/rnn/while/gru_cell/concat"
input: "update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpostX_2/rnn/while/gru_cell/MatMul"
input: "update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpostX_2/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpostX_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpostX_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpostX_2/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpostX_2/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpostX_2/rnn/while/gru_cell/split"
input: "update_GRUpostX_2/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpostX_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_2/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_2/rnn/while/gru_cell/mul"
input: "update_GRUpostX_2/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpostX_2/rnn/while/gru_cell/concat_1"
input: "update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpostX_2/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpostX_2/rnn/while/gru_cell/split:1"
input: "update_GRUpostX_2/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpostX_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpostX_2/rnn/while/gru_cell/sub/x"
input: "update_GRUpostX_2/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpostX_2/rnn/while/gru_cell/sub"
input: "update_GRUpostX_2/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpostX_2/rnn/while/gru_cell/mul_1"
input: "update_GRUpostX_2/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpostX_2/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpostX_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostX_2/rnn/while/Identity_1"
input: "update_GRUpostX_2/rnn/while/gru_cell/add"
input: "update_GRUpostX_2/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpostX_2/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpostX_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/while/add_1"
op: "Add"
input: "update_GRUpostX_2/rnn/while/Identity_1"
input: "update_GRUpostX_2/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpostX_2/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpostX_2/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpostX_2/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpostX_2/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/Exit"
op: "Exit"
input: "update_GRUpostX_2/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpostX_2/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpostX_2/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpostX_2/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpostX_2/rnn/TensorArray"
input: "update_GRUpostX_2/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpostX_2/rnn/TensorArrayStack/range/start"
input: "update_GRUpostX_2/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpostX_2/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_2/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpostX_2/rnn/TensorArray"
input: "update_GRUpostX_2/rnn/TensorArrayStack/range"
input: "update_GRUpostX_2/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpostX_2/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpostX_2/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_2/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_2/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_2/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_2/rnn/range_1"
op: "Range"
input: "update_GRUpostX_2/rnn/range_1/start"
input: "update_GRUpostX_2/rnn/Rank_1"
input: "update_GRUpostX_2/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_2/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_2/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpostX_2/rnn/concat_2/values_0"
input: "update_GRUpostX_2/rnn/range_1"
input: "update_GRUpostX_2/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpostX_2/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpostX_2/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_2/Reshape_2"
op: "Reshape"
input: "update_GRUpostX_2/rnn/while/Exit_3"
input: "update_GRUpostX_2/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_2/Mul"
op: "Mul"
input: "update_GRUpostX_2/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "g_nnpostX/concat"
op: "ConcatV2"
input: "update_GRUpostX_2/Mul"
input: "Mul"
input: "g_nnpostX/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostX/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostX/Reshape"
op: "Reshape"
input: "g_nnpostX/concat"
input: "g_nnpostX/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostX/dropout/cond/Switch"
op: "Switch"
input: "Placeholder_5"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX/dropout/cond/switch_t"
op: "Identity"
input: "g_nnpostX/dropout/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX/dropout/cond/switch_f"
op: "Identity"
input: "g_nnpostX/dropout/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX/dropout/cond/pred_id"
op: "Identity"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX/dropout/cond/dropout/keep_prob"
op: "Const"
input: "^g_nnpostX/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.800000011920929
    }
  }
}
, name: "g_nnpostX/dropout/cond/dropout/Shape"
op: "Const"
input: "^g_nnpostX/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostX/dropout/cond/dropout/random_uniform/min"
op: "Const"
input: "^g_nnpostX/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX/dropout/cond/dropout/random_uniform/max"
op: "Const"
input: "^g_nnpostX/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "g_nnpostX/dropout/cond/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpostX/dropout/cond/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 1673
  }
}
, name: "g_nnpostX/dropout/cond/dropout/random_uniform/sub"
op: "Sub"
input: "g_nnpostX/dropout/cond/dropout/random_uniform/max"
input: "g_nnpostX/dropout/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout/cond/dropout/random_uniform/mul"
op: "Mul"
input: "g_nnpostX/dropout/cond/dropout/random_uniform/RandomUniform"
input: "g_nnpostX/dropout/cond/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout/cond/dropout/random_uniform"
op: "Add"
input: "g_nnpostX/dropout/cond/dropout/random_uniform/mul"
input: "g_nnpostX/dropout/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout/cond/dropout/add"
op: "Add"
input: "g_nnpostX/dropout/cond/dropout/keep_prob"
input: "g_nnpostX/dropout/cond/dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout/cond/dropout/Floor"
op: "Floor"
input: "g_nnpostX/dropout/cond/dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout/cond/dropout/div/Switch"
op: "Switch"
input: "g_nnpostX/Reshape"
input: "g_nnpostX/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/Reshape"
    }
  }
}
, name: "g_nnpostX/dropout/cond/dropout/div"
op: "RealDiv"
input: "g_nnpostX/dropout/cond/dropout/div/Switch:1"
input: "g_nnpostX/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout/cond/dropout/mul"
op: "Mul"
input: "g_nnpostX/dropout/cond/dropout/div"
input: "g_nnpostX/dropout/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout/cond/Identity/Switch"
op: "Switch"
input: "g_nnpostX/Reshape"
input: "g_nnpostX/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/Reshape"
    }
  }
}
, name: "g_nnpostX/dropout/cond/Identity"
op: "Identity"
input: "g_nnpostX/dropout/cond/Identity/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout/cond/Merge"
op: "Merge"
input: "g_nnpostX/dropout/cond/Identity"
input: "g_nnpostX/dropout/cond/dropout/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dense/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostX/dense/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.17320507764816284
    }
  }
}
, name: "g_nnpostX/dense/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.17320507764816284
    }
  }
}
, name: "g_nnpostX/dense/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpostX/dense/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 1688
  }
}
, name: "g_nnpostX/dense/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "g_nnpostX/dense/kernel/Initializer/random_uniform/max"
input: "g_nnpostX/dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
, name: "g_nnpostX/dense/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "g_nnpostX/dense/kernel/Initializer/random_uniform/RandomUniform"
input: "g_nnpostX/dense/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
, name: "g_nnpostX/dense/kernel/Initializer/random_uniform"
op: "Add"
input: "g_nnpostX/dense/kernel/Initializer/random_uniform/mul"
input: "g_nnpostX/dense/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
, name: "g_nnpostX/dense/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostX/dense/kernel/Assign"
op: "Assign"
input: "g_nnpostX/dense/kernel"
input: "g_nnpostX/dense/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostX/dense/kernel/read"
op: "Identity"
input: "g_nnpostX/dense/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
, name: "g_nnpostX/dense/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX/dense/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostX/dense/bias/Assign"
op: "Assign"
input: "g_nnpostX/dense/bias"
input: "g_nnpostX/dense/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostX/dense/bias/read"
op: "Identity"
input: "g_nnpostX/dense/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
, name: "g_nnpostX/dense/MatMul"
op: "MatMul"
input: "g_nnpostX/dropout/cond/Merge"
input: "g_nnpostX/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "g_nnpostX/dense/BiasAdd"
op: "BiasAdd"
input: "g_nnpostX/dense/MatMul"
input: "g_nnpostX/dense/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "g_nnpostX/dense/Sigmoid"
op: "Sigmoid"
input: "g_nnpostX/dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout_1/cond/Switch"
op: "Switch"
input: "Placeholder_5"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX/dropout_1/cond/switch_t"
op: "Identity"
input: "g_nnpostX/dropout_1/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX/dropout_1/cond/switch_f"
op: "Identity"
input: "g_nnpostX/dropout_1/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX/dropout_1/cond/pred_id"
op: "Identity"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX/dropout_1/cond/dropout/keep_prob"
op: "Const"
input: "^g_nnpostX/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.800000011920929
    }
  }
}
, name: "g_nnpostX/dropout_1/cond/dropout/Shape"
op: "Const"
input: "^g_nnpostX/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostX/dropout_1/cond/dropout/random_uniform/min"
op: "Const"
input: "^g_nnpostX/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX/dropout_1/cond/dropout/random_uniform/max"
op: "Const"
input: "^g_nnpostX/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "g_nnpostX/dropout_1/cond/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpostX/dropout_1/cond/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 1710
  }
}
, name: "g_nnpostX/dropout_1/cond/dropout/random_uniform/sub"
op: "Sub"
input: "g_nnpostX/dropout_1/cond/dropout/random_uniform/max"
input: "g_nnpostX/dropout_1/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout_1/cond/dropout/random_uniform/mul"
op: "Mul"
input: "g_nnpostX/dropout_1/cond/dropout/random_uniform/RandomUniform"
input: "g_nnpostX/dropout_1/cond/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout_1/cond/dropout/random_uniform"
op: "Add"
input: "g_nnpostX/dropout_1/cond/dropout/random_uniform/mul"
input: "g_nnpostX/dropout_1/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout_1/cond/dropout/add"
op: "Add"
input: "g_nnpostX/dropout_1/cond/dropout/keep_prob"
input: "g_nnpostX/dropout_1/cond/dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout_1/cond/dropout/Floor"
op: "Floor"
input: "g_nnpostX/dropout_1/cond/dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout_1/cond/dropout/div/Switch"
op: "Switch"
input: "g_nnpostX/dense/Sigmoid"
input: "g_nnpostX/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/Sigmoid"
    }
  }
}
, name: "g_nnpostX/dropout_1/cond/dropout/div"
op: "RealDiv"
input: "g_nnpostX/dropout_1/cond/dropout/div/Switch:1"
input: "g_nnpostX/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout_1/cond/dropout/mul"
op: "Mul"
input: "g_nnpostX/dropout_1/cond/dropout/div"
input: "g_nnpostX/dropout_1/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout_1/cond/Identity/Switch"
op: "Switch"
input: "g_nnpostX/dense/Sigmoid"
input: "g_nnpostX/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/Sigmoid"
    }
  }
}
, name: "g_nnpostX/dropout_1/cond/Identity"
op: "Identity"
input: "g_nnpostX/dropout_1/cond/Identity/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dropout_1/cond/Merge"
op: "Merge"
input: "g_nnpostX/dropout_1/cond/Identity"
input: "g_nnpostX/dropout_1/cond/dropout/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX/dense_1/kernel/Initializer/random_uniform/shape"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000\003\000\000\000"
    }
  }
}
, name: "g_nnpostX/dense_1/kernel/Initializer/random_uniform/min"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: -0.24135538935661316
    }
  }
}
, name: "g_nnpostX/dense_1/kernel/Initializer/random_uniform/max"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.24135538935661316
    }
  }
}
, name: "g_nnpostX/dense_1/kernel/Initializer/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpostX/dense_1/kernel/Initializer/random_uniform/shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 1725
  }
}
, name: "g_nnpostX/dense_1/kernel/Initializer/random_uniform/sub"
op: "Sub"
input: "g_nnpostX/dense_1/kernel/Initializer/random_uniform/max"
input: "g_nnpostX/dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
, name: "g_nnpostX/dense_1/kernel/Initializer/random_uniform/mul"
op: "Mul"
input: "g_nnpostX/dense_1/kernel/Initializer/random_uniform/RandomUniform"
input: "g_nnpostX/dense_1/kernel/Initializer/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
, name: "g_nnpostX/dense_1/kernel/Initializer/random_uniform"
op: "Add"
input: "g_nnpostX/dense_1/kernel/Initializer/random_uniform/mul"
input: "g_nnpostX/dense_1/kernel/Initializer/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
, name: "g_nnpostX/dense_1/kernel"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 3
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostX/dense_1/kernel/Assign"
op: "Assign"
input: "g_nnpostX/dense_1/kernel"
input: "g_nnpostX/dense_1/kernel/Initializer/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostX/dense_1/kernel/read"
op: "Identity"
input: "g_nnpostX/dense_1/kernel"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
, name: "g_nnpostX/dense_1/bias/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX/dense_1/bias"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostX/dense_1/bias/Assign"
op: "Assign"
input: "g_nnpostX/dense_1/bias"
input: "g_nnpostX/dense_1/bias/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostX/dense_1/bias/read"
op: "Identity"
input: "g_nnpostX/dense_1/bias"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
, name: "g_nnpostX/dense_1/MatMul"
op: "MatMul"
input: "g_nnpostX/dropout_1/cond/Merge"
input: "g_nnpostX/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "g_nnpostX/dense_1/BiasAdd"
op: "BiasAdd"
input: "g_nnpostX/dense_1/MatMul"
input: "g_nnpostX/dense_1/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "g_nnpostX/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "g_nnpostX/Reshape_1"
op: "Reshape"
input: "g_nnpostX/dense_1/BiasAdd"
input: "g_nnpostX/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostX/Mul"
op: "Mul"
input: "g_nnpostX/Reshape_1"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "edge_nnpostX_1/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "T\006\000\000\013\000\000\000"
    }
  }
}
, name: "edge_nnpostX_1/Reshape"
op: "Reshape"
input: "concat"
input: "edge_nnpostX_1/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostX_1/dense/MatMul"
op: "MatMul"
input: "edge_nnpostX_1/Reshape"
input: "edge_nnpostX/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "edge_nnpostX_1/dense/BiasAdd"
op: "BiasAdd"
input: "edge_nnpostX_1/dense/MatMul"
input: "edge_nnpostX/dense/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "edge_nnpostX_1/dense/Sigmoid"
op: "Sigmoid"
input: "edge_nnpostX_1/dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "edge_nnpostX_1/dense_1/MatMul"
op: "MatMul"
input: "edge_nnpostX_1/dense/Sigmoid"
input: "edge_nnpostX/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "edge_nnpostX_1/dense_1/BiasAdd"
op: "BiasAdd"
input: "edge_nnpostX_1/dense_1/MatMul"
input: "edge_nnpostX/dense_1/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "edge_nnpostX_1/dense_1/Tanh"
op: "Tanh"
input: "edge_nnpostX_1/dense_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "edge_nnpostX_1/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "edge_nnpostX_1/Reshape_1"
op: "Reshape"
input: "edge_nnpostX_1/dense_1/Tanh"
input: "edge_nnpostX_1/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "add_3"
op: "Add"
input: "split_1"
input: "Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_31/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_31"
op: "Reshape"
input: "edge_nnpostX_1/Reshape_1"
input: "Reshape_31/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_32/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_32"
op: "Reshape"
input: "add_3"
input: "Reshape_32/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_9"
op: "BatchMatMul"
input: "Reshape_31"
input: "Reshape_32"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_33/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_33"
op: "Reshape"
input: "MatMul_9"
input: "Reshape_33/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_10/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_10"
op: "Transpose"
input: "Reshape_33"
input: "transpose_10/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_9/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_9"
op: "Mean"
input: "transpose_10"
input: "Mean_9/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_9/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_9"
op: "RealDiv"
input: "Mean_9"
input: "truediv_9/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_3/Reshape"
op: "Reshape"
input: "truediv_9"
input: "update_GRUpostX_3/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_3/Reshape_1"
op: "Reshape"
input: "add_3"
input: "update_GRUpostX_3/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_3/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_3/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/range"
op: "Range"
input: "update_GRUpostX_3/rnn/range/start"
input: "update_GRUpostX_3/rnn/Rank"
input: "update_GRUpostX_3/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_3/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_3/rnn/concat"
op: "ConcatV2"
input: "update_GRUpostX_3/rnn/concat/values_0"
input: "update_GRUpostX_3/rnn/range"
input: "update_GRUpostX_3/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/transpose"
op: "Transpose"
input: "update_GRUpostX_3/Reshape"
input: "update_GRUpostX_3/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_3/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_3/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_3/rnn/Shape"
input: "update_GRUpostX_3/rnn/strided_slice/stack"
input: "update_GRUpostX_3/rnn/strided_slice/stack_1"
input: "update_GRUpostX_3/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_3/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpostX_3/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_3/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_3/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_3/rnn/Const"
input: "update_GRUpostX_3/rnn/Const_1"
input: "update_GRUpostX_3/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX_3/rnn/zeros"
op: "Fill"
input: "update_GRUpostX_3/rnn/concat_1"
input: "update_GRUpostX_3/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_3/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpostX_3/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_3/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpostX_3/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpostX_3/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_3/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_3/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpostX_3/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpostX_3/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpostX_3/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpostX_3/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpostX_3/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpostX_3/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpostX_3/rnn/TensorArray_1"
input: "update_GRUpostX_3/rnn/TensorArrayUnstack/range"
input: "update_GRUpostX_3/rnn/transpose"
input: "update_GRUpostX_3/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_3/rnn/transpose"
    }
  }
}
, name: "update_GRUpostX_3/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/Maximum"
op: "Maximum"
input: "update_GRUpostX_3/rnn/Maximum/x"
input: "update_GRUpostX_3/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/Minimum"
op: "Minimum"
input: "update_GRUpostX_3/rnn/strided_slice"
input: "update_GRUpostX_3/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_3/rnn/while/Enter"
op: "Enter"
input: "update_GRUpostX_3/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_3/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_3/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpostX_3/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_3/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_3/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpostX_3/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_3/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_3/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpostX_3/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_3/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_3/rnn/while/Merge"
op: "Merge"
input: "update_GRUpostX_3/rnn/while/Enter"
input: "update_GRUpostX_3/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpostX_3/rnn/while/Enter_1"
input: "update_GRUpostX_3/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpostX_3/rnn/while/Enter_2"
input: "update_GRUpostX_3/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpostX_3/rnn/while/Enter_3"
input: "update_GRUpostX_3/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpostX_3/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_3/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_3/rnn/while/Less"
op: "Less"
input: "update_GRUpostX_3/rnn/while/Merge"
input: "update_GRUpostX_3/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpostX_3/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_3/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_3/rnn/while/Less_1"
op: "Less"
input: "update_GRUpostX_3/rnn/while/Merge_1"
input: "update_GRUpostX_3/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpostX_3/rnn/while/Less"
input: "update_GRUpostX_3/rnn/while/Less_1"
, name: "update_GRUpostX_3/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpostX_3/rnn/while/LogicalAnd"
, name: "update_GRUpostX_3/rnn/while/Switch"
op: "Switch"
input: "update_GRUpostX_3/rnn/while/Merge"
input: "update_GRUpostX_3/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_3/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpostX_3/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpostX_3/rnn/while/Merge_1"
input: "update_GRUpostX_3/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_3/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpostX_3/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpostX_3/rnn/while/Merge_2"
input: "update_GRUpostX_3/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_3/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpostX_3/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpostX_3/rnn/while/Merge_3"
input: "update_GRUpostX_3/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_3/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpostX_3/rnn/while/Identity"
op: "Identity"
input: "update_GRUpostX_3/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpostX_3/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpostX_3/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpostX_3/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/add/y"
op: "Const"
input: "^update_GRUpostX_3/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/while/add"
op: "Add"
input: "update_GRUpostX_3/rnn/while/Identity"
input: "update_GRUpostX_3/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpostX_3/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_3/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_3/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpostX_3/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_3/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_3/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpostX_3/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpostX_3/rnn/while/Identity_1"
input: "update_GRUpostX_3/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpostX_3/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpostX_3/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_3/rnn/while/Identity_3"
input: "update_GRUpostX_3/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_3/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpostX_3/rnn/while/gru_cell/concat"
input: "update_GRUpostX_3/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_3/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpostX_3/rnn/while/gru_cell/MatMul"
input: "update_GRUpostX_3/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpostX_3/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpostX_3/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpostX_3/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpostX_3/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpostX_3/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpostX_3/rnn/while/gru_cell/split"
input: "update_GRUpostX_3/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpostX_3/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_3/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_3/rnn/while/gru_cell/mul"
input: "update_GRUpostX_3/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_3/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpostX_3/rnn/while/gru_cell/concat_1"
input: "update_GRUpostX_3/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_3/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpostX_3/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpostX_3/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpostX_3/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpostX_3/rnn/while/gru_cell/split:1"
input: "update_GRUpostX_3/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpostX_3/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpostX_3/rnn/while/gru_cell/sub/x"
input: "update_GRUpostX_3/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpostX_3/rnn/while/gru_cell/sub"
input: "update_GRUpostX_3/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpostX_3/rnn/while/gru_cell/mul_1"
input: "update_GRUpostX_3/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpostX_3/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_3/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_3/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpostX_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostX_3/rnn/while/Identity_1"
input: "update_GRUpostX_3/rnn/while/gru_cell/add"
input: "update_GRUpostX_3/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_3/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpostX_3/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpostX_3/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/while/add_1"
op: "Add"
input: "update_GRUpostX_3/rnn/while/Identity_1"
input: "update_GRUpostX_3/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpostX_3/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpostX_3/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpostX_3/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpostX_3/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/Exit"
op: "Exit"
input: "update_GRUpostX_3/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpostX_3/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpostX_3/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpostX_3/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpostX_3/rnn/TensorArray"
input: "update_GRUpostX_3/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_3/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_3/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_3/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpostX_3/rnn/TensorArrayStack/range/start"
input: "update_GRUpostX_3/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpostX_3/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_3/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_3/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpostX_3/rnn/TensorArray"
input: "update_GRUpostX_3/rnn/TensorArrayStack/range"
input: "update_GRUpostX_3/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_3/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpostX_3/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpostX_3/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_3/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_3/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_3/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_3/rnn/range_1"
op: "Range"
input: "update_GRUpostX_3/rnn/range_1/start"
input: "update_GRUpostX_3/rnn/Rank_1"
input: "update_GRUpostX_3/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_3/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_3/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpostX_3/rnn/concat_2/values_0"
input: "update_GRUpostX_3/rnn/range_1"
input: "update_GRUpostX_3/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpostX_3/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpostX_3/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_3/Reshape_2"
op: "Reshape"
input: "update_GRUpostX_3/rnn/while/Exit_3"
input: "update_GRUpostX_3/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_3/Mul"
op: "Mul"
input: "update_GRUpostX_3/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_34/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_34"
op: "Reshape"
input: "edge_nnpostX_1/Reshape_1"
input: "Reshape_34/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_35/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_35"
op: "Reshape"
input: "update_GRUpostX_3/Mul"
input: "Reshape_35/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_10"
op: "BatchMatMul"
input: "Reshape_34"
input: "Reshape_35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_36/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_36"
op: "Reshape"
input: "MatMul_10"
input: "Reshape_36/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_11/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_11"
op: "Transpose"
input: "Reshape_36"
input: "transpose_11/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_10/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_10"
op: "Mean"
input: "transpose_11"
input: "Mean_10/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_10/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_10"
op: "RealDiv"
input: "Mean_10"
input: "truediv_10/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_4/Reshape"
op: "Reshape"
input: "truediv_10"
input: "update_GRUpostX_4/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_4/Reshape_1"
op: "Reshape"
input: "update_GRUpostX_3/Mul"
input: "update_GRUpostX_4/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_4/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_4/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/range"
op: "Range"
input: "update_GRUpostX_4/rnn/range/start"
input: "update_GRUpostX_4/rnn/Rank"
input: "update_GRUpostX_4/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_4/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_4/rnn/concat"
op: "ConcatV2"
input: "update_GRUpostX_4/rnn/concat/values_0"
input: "update_GRUpostX_4/rnn/range"
input: "update_GRUpostX_4/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/transpose"
op: "Transpose"
input: "update_GRUpostX_4/Reshape"
input: "update_GRUpostX_4/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_4/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_4/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_4/rnn/Shape"
input: "update_GRUpostX_4/rnn/strided_slice/stack"
input: "update_GRUpostX_4/rnn/strided_slice/stack_1"
input: "update_GRUpostX_4/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_4/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpostX_4/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_4/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_4/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_4/rnn/Const"
input: "update_GRUpostX_4/rnn/Const_1"
input: "update_GRUpostX_4/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX_4/rnn/zeros"
op: "Fill"
input: "update_GRUpostX_4/rnn/concat_1"
input: "update_GRUpostX_4/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_4/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpostX_4/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_4/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpostX_4/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpostX_4/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_4/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_4/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpostX_4/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpostX_4/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpostX_4/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpostX_4/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpostX_4/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpostX_4/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpostX_4/rnn/TensorArray_1"
input: "update_GRUpostX_4/rnn/TensorArrayUnstack/range"
input: "update_GRUpostX_4/rnn/transpose"
input: "update_GRUpostX_4/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_4/rnn/transpose"
    }
  }
}
, name: "update_GRUpostX_4/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/Maximum"
op: "Maximum"
input: "update_GRUpostX_4/rnn/Maximum/x"
input: "update_GRUpostX_4/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/Minimum"
op: "Minimum"
input: "update_GRUpostX_4/rnn/strided_slice"
input: "update_GRUpostX_4/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_4/rnn/while/Enter"
op: "Enter"
input: "update_GRUpostX_4/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_4/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_4/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpostX_4/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_4/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_4/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpostX_4/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_4/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_4/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpostX_4/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_4/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_4/rnn/while/Merge"
op: "Merge"
input: "update_GRUpostX_4/rnn/while/Enter"
input: "update_GRUpostX_4/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpostX_4/rnn/while/Enter_1"
input: "update_GRUpostX_4/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpostX_4/rnn/while/Enter_2"
input: "update_GRUpostX_4/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpostX_4/rnn/while/Enter_3"
input: "update_GRUpostX_4/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpostX_4/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_4/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_4/rnn/while/Less"
op: "Less"
input: "update_GRUpostX_4/rnn/while/Merge"
input: "update_GRUpostX_4/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpostX_4/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_4/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_4/rnn/while/Less_1"
op: "Less"
input: "update_GRUpostX_4/rnn/while/Merge_1"
input: "update_GRUpostX_4/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpostX_4/rnn/while/Less"
input: "update_GRUpostX_4/rnn/while/Less_1"
, name: "update_GRUpostX_4/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpostX_4/rnn/while/LogicalAnd"
, name: "update_GRUpostX_4/rnn/while/Switch"
op: "Switch"
input: "update_GRUpostX_4/rnn/while/Merge"
input: "update_GRUpostX_4/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_4/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpostX_4/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpostX_4/rnn/while/Merge_1"
input: "update_GRUpostX_4/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_4/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpostX_4/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpostX_4/rnn/while/Merge_2"
input: "update_GRUpostX_4/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_4/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpostX_4/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpostX_4/rnn/while/Merge_3"
input: "update_GRUpostX_4/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_4/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpostX_4/rnn/while/Identity"
op: "Identity"
input: "update_GRUpostX_4/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpostX_4/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpostX_4/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpostX_4/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/add/y"
op: "Const"
input: "^update_GRUpostX_4/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/while/add"
op: "Add"
input: "update_GRUpostX_4/rnn/while/Identity"
input: "update_GRUpostX_4/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpostX_4/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_4/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_4/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpostX_4/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_4/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_4/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpostX_4/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpostX_4/rnn/while/Identity_1"
input: "update_GRUpostX_4/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpostX_4/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpostX_4/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_4/rnn/while/Identity_3"
input: "update_GRUpostX_4/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_4/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpostX_4/rnn/while/gru_cell/concat"
input: "update_GRUpostX_4/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_4/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpostX_4/rnn/while/gru_cell/MatMul"
input: "update_GRUpostX_4/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpostX_4/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpostX_4/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpostX_4/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpostX_4/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpostX_4/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpostX_4/rnn/while/gru_cell/split"
input: "update_GRUpostX_4/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpostX_4/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_4/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_4/rnn/while/gru_cell/mul"
input: "update_GRUpostX_4/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_4/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpostX_4/rnn/while/gru_cell/concat_1"
input: "update_GRUpostX_4/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_4/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpostX_4/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpostX_4/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpostX_4/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpostX_4/rnn/while/gru_cell/split:1"
input: "update_GRUpostX_4/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpostX_4/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpostX_4/rnn/while/gru_cell/sub/x"
input: "update_GRUpostX_4/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpostX_4/rnn/while/gru_cell/sub"
input: "update_GRUpostX_4/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpostX_4/rnn/while/gru_cell/mul_1"
input: "update_GRUpostX_4/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpostX_4/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_4/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_4/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpostX_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostX_4/rnn/while/Identity_1"
input: "update_GRUpostX_4/rnn/while/gru_cell/add"
input: "update_GRUpostX_4/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_4/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpostX_4/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpostX_4/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/while/add_1"
op: "Add"
input: "update_GRUpostX_4/rnn/while/Identity_1"
input: "update_GRUpostX_4/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpostX_4/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpostX_4/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpostX_4/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpostX_4/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/Exit"
op: "Exit"
input: "update_GRUpostX_4/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpostX_4/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpostX_4/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpostX_4/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpostX_4/rnn/TensorArray"
input: "update_GRUpostX_4/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_4/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_4/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_4/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpostX_4/rnn/TensorArrayStack/range/start"
input: "update_GRUpostX_4/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpostX_4/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_4/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_4/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpostX_4/rnn/TensorArray"
input: "update_GRUpostX_4/rnn/TensorArrayStack/range"
input: "update_GRUpostX_4/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_4/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpostX_4/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpostX_4/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_4/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_4/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_4/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_4/rnn/range_1"
op: "Range"
input: "update_GRUpostX_4/rnn/range_1/start"
input: "update_GRUpostX_4/rnn/Rank_1"
input: "update_GRUpostX_4/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_4/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_4/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpostX_4/rnn/concat_2/values_0"
input: "update_GRUpostX_4/rnn/range_1"
input: "update_GRUpostX_4/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpostX_4/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpostX_4/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_4/Reshape_2"
op: "Reshape"
input: "update_GRUpostX_4/rnn/while/Exit_3"
input: "update_GRUpostX_4/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_4/Mul"
op: "Mul"
input: "update_GRUpostX_4/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_37/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_37"
op: "Reshape"
input: "edge_nnpostX_1/Reshape_1"
input: "Reshape_37/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_38/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_38"
op: "Reshape"
input: "update_GRUpostX_4/Mul"
input: "Reshape_38/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_11"
op: "BatchMatMul"
input: "Reshape_37"
input: "Reshape_38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_39/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_39"
op: "Reshape"
input: "MatMul_11"
input: "Reshape_39/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_12/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_12"
op: "Transpose"
input: "Reshape_39"
input: "transpose_12/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_11/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_11"
op: "Mean"
input: "transpose_12"
input: "Mean_11/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_11/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_11"
op: "RealDiv"
input: "Mean_11"
input: "truediv_11/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_5/Reshape"
op: "Reshape"
input: "truediv_11"
input: "update_GRUpostX_5/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_5/Reshape_1"
op: "Reshape"
input: "update_GRUpostX_4/Mul"
input: "update_GRUpostX_5/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_5/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_5/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/range"
op: "Range"
input: "update_GRUpostX_5/rnn/range/start"
input: "update_GRUpostX_5/rnn/Rank"
input: "update_GRUpostX_5/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_5/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_5/rnn/concat"
op: "ConcatV2"
input: "update_GRUpostX_5/rnn/concat/values_0"
input: "update_GRUpostX_5/rnn/range"
input: "update_GRUpostX_5/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/transpose"
op: "Transpose"
input: "update_GRUpostX_5/Reshape"
input: "update_GRUpostX_5/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_5/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_5/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_5/rnn/Shape"
input: "update_GRUpostX_5/rnn/strided_slice/stack"
input: "update_GRUpostX_5/rnn/strided_slice/stack_1"
input: "update_GRUpostX_5/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_5/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpostX_5/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_5/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_5/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_5/rnn/Const"
input: "update_GRUpostX_5/rnn/Const_1"
input: "update_GRUpostX_5/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX_5/rnn/zeros"
op: "Fill"
input: "update_GRUpostX_5/rnn/concat_1"
input: "update_GRUpostX_5/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_5/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpostX_5/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_5/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpostX_5/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpostX_5/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_5/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_5/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpostX_5/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpostX_5/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpostX_5/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpostX_5/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpostX_5/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpostX_5/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpostX_5/rnn/TensorArray_1"
input: "update_GRUpostX_5/rnn/TensorArrayUnstack/range"
input: "update_GRUpostX_5/rnn/transpose"
input: "update_GRUpostX_5/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_5/rnn/transpose"
    }
  }
}
, name: "update_GRUpostX_5/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/Maximum"
op: "Maximum"
input: "update_GRUpostX_5/rnn/Maximum/x"
input: "update_GRUpostX_5/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/Minimum"
op: "Minimum"
input: "update_GRUpostX_5/rnn/strided_slice"
input: "update_GRUpostX_5/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_5/rnn/while/Enter"
op: "Enter"
input: "update_GRUpostX_5/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_5/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_5/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpostX_5/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_5/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_5/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpostX_5/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_5/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_5/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpostX_5/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_5/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_5/rnn/while/Merge"
op: "Merge"
input: "update_GRUpostX_5/rnn/while/Enter"
input: "update_GRUpostX_5/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpostX_5/rnn/while/Enter_1"
input: "update_GRUpostX_5/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpostX_5/rnn/while/Enter_2"
input: "update_GRUpostX_5/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpostX_5/rnn/while/Enter_3"
input: "update_GRUpostX_5/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpostX_5/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_5/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_5/rnn/while/Less"
op: "Less"
input: "update_GRUpostX_5/rnn/while/Merge"
input: "update_GRUpostX_5/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpostX_5/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_5/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_5/rnn/while/Less_1"
op: "Less"
input: "update_GRUpostX_5/rnn/while/Merge_1"
input: "update_GRUpostX_5/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpostX_5/rnn/while/Less"
input: "update_GRUpostX_5/rnn/while/Less_1"
, name: "update_GRUpostX_5/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpostX_5/rnn/while/LogicalAnd"
, name: "update_GRUpostX_5/rnn/while/Switch"
op: "Switch"
input: "update_GRUpostX_5/rnn/while/Merge"
input: "update_GRUpostX_5/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_5/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpostX_5/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpostX_5/rnn/while/Merge_1"
input: "update_GRUpostX_5/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_5/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpostX_5/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpostX_5/rnn/while/Merge_2"
input: "update_GRUpostX_5/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_5/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpostX_5/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpostX_5/rnn/while/Merge_3"
input: "update_GRUpostX_5/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_5/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpostX_5/rnn/while/Identity"
op: "Identity"
input: "update_GRUpostX_5/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpostX_5/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpostX_5/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpostX_5/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/add/y"
op: "Const"
input: "^update_GRUpostX_5/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/while/add"
op: "Add"
input: "update_GRUpostX_5/rnn/while/Identity"
input: "update_GRUpostX_5/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpostX_5/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_5/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_5/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpostX_5/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_5/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_5/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpostX_5/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpostX_5/rnn/while/Identity_1"
input: "update_GRUpostX_5/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpostX_5/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpostX_5/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_5/rnn/while/Identity_3"
input: "update_GRUpostX_5/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_5/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpostX_5/rnn/while/gru_cell/concat"
input: "update_GRUpostX_5/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_5/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpostX_5/rnn/while/gru_cell/MatMul"
input: "update_GRUpostX_5/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpostX_5/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpostX_5/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpostX_5/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpostX_5/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpostX_5/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpostX_5/rnn/while/gru_cell/split"
input: "update_GRUpostX_5/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpostX_5/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_5/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_5/rnn/while/gru_cell/mul"
input: "update_GRUpostX_5/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_5/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpostX_5/rnn/while/gru_cell/concat_1"
input: "update_GRUpostX_5/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_5/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpostX_5/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpostX_5/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpostX_5/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpostX_5/rnn/while/gru_cell/split:1"
input: "update_GRUpostX_5/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpostX_5/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpostX_5/rnn/while/gru_cell/sub/x"
input: "update_GRUpostX_5/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpostX_5/rnn/while/gru_cell/sub"
input: "update_GRUpostX_5/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpostX_5/rnn/while/gru_cell/mul_1"
input: "update_GRUpostX_5/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpostX_5/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_5/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_5/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_5/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpostX_5/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostX_5/rnn/while/Identity_1"
input: "update_GRUpostX_5/rnn/while/gru_cell/add"
input: "update_GRUpostX_5/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_5/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpostX_5/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpostX_5/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/while/add_1"
op: "Add"
input: "update_GRUpostX_5/rnn/while/Identity_1"
input: "update_GRUpostX_5/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpostX_5/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpostX_5/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpostX_5/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpostX_5/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/Exit"
op: "Exit"
input: "update_GRUpostX_5/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpostX_5/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpostX_5/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpostX_5/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpostX_5/rnn/TensorArray"
input: "update_GRUpostX_5/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_5/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_5/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_5/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpostX_5/rnn/TensorArrayStack/range/start"
input: "update_GRUpostX_5/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpostX_5/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_5/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_5/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpostX_5/rnn/TensorArray"
input: "update_GRUpostX_5/rnn/TensorArrayStack/range"
input: "update_GRUpostX_5/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_5/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpostX_5/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpostX_5/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_5/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_5/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_5/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_5/rnn/range_1"
op: "Range"
input: "update_GRUpostX_5/rnn/range_1/start"
input: "update_GRUpostX_5/rnn/Rank_1"
input: "update_GRUpostX_5/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_5/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_5/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpostX_5/rnn/concat_2/values_0"
input: "update_GRUpostX_5/rnn/range_1"
input: "update_GRUpostX_5/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpostX_5/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpostX_5/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_5/Reshape_2"
op: "Reshape"
input: "update_GRUpostX_5/rnn/while/Exit_3"
input: "update_GRUpostX_5/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_5/Mul"
op: "Mul"
input: "update_GRUpostX_5/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "g_nnpostX_1/concat"
op: "ConcatV2"
input: "update_GRUpostX_5/Mul"
input: "Mul"
input: "g_nnpostX_1/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostX_1/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostX_1/Reshape"
op: "Reshape"
input: "g_nnpostX_1/concat"
input: "g_nnpostX_1/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostX_1/dropout/cond/Switch"
op: "Switch"
input: "Placeholder_5"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_1/dropout/cond/switch_t"
op: "Identity"
input: "g_nnpostX_1/dropout/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_1/dropout/cond/switch_f"
op: "Identity"
input: "g_nnpostX_1/dropout/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_1/dropout/cond/pred_id"
op: "Identity"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_1/dropout/cond/dropout/keep_prob"
op: "Const"
input: "^g_nnpostX_1/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.800000011920929
    }
  }
}
, name: "g_nnpostX_1/dropout/cond/dropout/Shape"
op: "Const"
input: "^g_nnpostX_1/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostX_1/dropout/cond/dropout/random_uniform/min"
op: "Const"
input: "^g_nnpostX_1/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX_1/dropout/cond/dropout/random_uniform/max"
op: "Const"
input: "^g_nnpostX_1/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "g_nnpostX_1/dropout/cond/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpostX_1/dropout/cond/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 2160
  }
}
, name: "g_nnpostX_1/dropout/cond/dropout/random_uniform/sub"
op: "Sub"
input: "g_nnpostX_1/dropout/cond/dropout/random_uniform/max"
input: "g_nnpostX_1/dropout/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout/cond/dropout/random_uniform/mul"
op: "Mul"
input: "g_nnpostX_1/dropout/cond/dropout/random_uniform/RandomUniform"
input: "g_nnpostX_1/dropout/cond/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout/cond/dropout/random_uniform"
op: "Add"
input: "g_nnpostX_1/dropout/cond/dropout/random_uniform/mul"
input: "g_nnpostX_1/dropout/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout/cond/dropout/add"
op: "Add"
input: "g_nnpostX_1/dropout/cond/dropout/keep_prob"
input: "g_nnpostX_1/dropout/cond/dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout/cond/dropout/Floor"
op: "Floor"
input: "g_nnpostX_1/dropout/cond/dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout/cond/dropout/div/Switch"
op: "Switch"
input: "g_nnpostX_1/Reshape"
input: "g_nnpostX_1/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX_1/Reshape"
    }
  }
}
, name: "g_nnpostX_1/dropout/cond/dropout/div"
op: "RealDiv"
input: "g_nnpostX_1/dropout/cond/dropout/div/Switch:1"
input: "g_nnpostX_1/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout/cond/dropout/mul"
op: "Mul"
input: "g_nnpostX_1/dropout/cond/dropout/div"
input: "g_nnpostX_1/dropout/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout/cond/Identity/Switch"
op: "Switch"
input: "g_nnpostX_1/Reshape"
input: "g_nnpostX_1/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX_1/Reshape"
    }
  }
}
, name: "g_nnpostX_1/dropout/cond/Identity"
op: "Identity"
input: "g_nnpostX_1/dropout/cond/Identity/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout/cond/Merge"
op: "Merge"
input: "g_nnpostX_1/dropout/cond/Identity"
input: "g_nnpostX_1/dropout/cond/dropout/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dense/MatMul"
op: "MatMul"
input: "g_nnpostX_1/dropout/cond/Merge"
input: "g_nnpostX/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "g_nnpostX_1/dense/BiasAdd"
op: "BiasAdd"
input: "g_nnpostX_1/dense/MatMul"
input: "g_nnpostX/dense/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "g_nnpostX_1/dense/Sigmoid"
op: "Sigmoid"
input: "g_nnpostX_1/dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout_1/cond/Switch"
op: "Switch"
input: "Placeholder_5"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_1/dropout_1/cond/switch_t"
op: "Identity"
input: "g_nnpostX_1/dropout_1/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_1/dropout_1/cond/switch_f"
op: "Identity"
input: "g_nnpostX_1/dropout_1/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_1/dropout_1/cond/pred_id"
op: "Identity"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_1/dropout_1/cond/dropout/keep_prob"
op: "Const"
input: "^g_nnpostX_1/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.800000011920929
    }
  }
}
, name: "g_nnpostX_1/dropout_1/cond/dropout/Shape"
op: "Const"
input: "^g_nnpostX_1/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostX_1/dropout_1/cond/dropout/random_uniform/min"
op: "Const"
input: "^g_nnpostX_1/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX_1/dropout_1/cond/dropout/random_uniform/max"
op: "Const"
input: "^g_nnpostX_1/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "g_nnpostX_1/dropout_1/cond/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpostX_1/dropout_1/cond/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 2183
  }
}
, name: "g_nnpostX_1/dropout_1/cond/dropout/random_uniform/sub"
op: "Sub"
input: "g_nnpostX_1/dropout_1/cond/dropout/random_uniform/max"
input: "g_nnpostX_1/dropout_1/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout_1/cond/dropout/random_uniform/mul"
op: "Mul"
input: "g_nnpostX_1/dropout_1/cond/dropout/random_uniform/RandomUniform"
input: "g_nnpostX_1/dropout_1/cond/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout_1/cond/dropout/random_uniform"
op: "Add"
input: "g_nnpostX_1/dropout_1/cond/dropout/random_uniform/mul"
input: "g_nnpostX_1/dropout_1/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout_1/cond/dropout/add"
op: "Add"
input: "g_nnpostX_1/dropout_1/cond/dropout/keep_prob"
input: "g_nnpostX_1/dropout_1/cond/dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout_1/cond/dropout/Floor"
op: "Floor"
input: "g_nnpostX_1/dropout_1/cond/dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout_1/cond/dropout/div/Switch"
op: "Switch"
input: "g_nnpostX_1/dense/Sigmoid"
input: "g_nnpostX_1/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX_1/dense/Sigmoid"
    }
  }
}
, name: "g_nnpostX_1/dropout_1/cond/dropout/div"
op: "RealDiv"
input: "g_nnpostX_1/dropout_1/cond/dropout/div/Switch:1"
input: "g_nnpostX_1/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout_1/cond/dropout/mul"
op: "Mul"
input: "g_nnpostX_1/dropout_1/cond/dropout/div"
input: "g_nnpostX_1/dropout_1/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout_1/cond/Identity/Switch"
op: "Switch"
input: "g_nnpostX_1/dense/Sigmoid"
input: "g_nnpostX_1/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX_1/dense/Sigmoid"
    }
  }
}
, name: "g_nnpostX_1/dropout_1/cond/Identity"
op: "Identity"
input: "g_nnpostX_1/dropout_1/cond/Identity/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dropout_1/cond/Merge"
op: "Merge"
input: "g_nnpostX_1/dropout_1/cond/Identity"
input: "g_nnpostX_1/dropout_1/cond/dropout/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_1/dense_1/MatMul"
op: "MatMul"
input: "g_nnpostX_1/dropout_1/cond/Merge"
input: "g_nnpostX/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "g_nnpostX_1/dense_1/BiasAdd"
op: "BiasAdd"
input: "g_nnpostX_1/dense_1/MatMul"
input: "g_nnpostX/dense_1/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "g_nnpostX_1/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "g_nnpostX_1/Reshape_1"
op: "Reshape"
input: "g_nnpostX_1/dense_1/BiasAdd"
input: "g_nnpostX_1/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostX_1/Mul"
op: "Mul"
input: "g_nnpostX_1/Reshape_1"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "edge_nnpostX_2/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "T\006\000\000\013\000\000\000"
    }
  }
}
, name: "edge_nnpostX_2/Reshape"
op: "Reshape"
input: "concat"
input: "edge_nnpostX_2/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostX_2/dense/MatMul"
op: "MatMul"
input: "edge_nnpostX_2/Reshape"
input: "edge_nnpostX/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "edge_nnpostX_2/dense/BiasAdd"
op: "BiasAdd"
input: "edge_nnpostX_2/dense/MatMul"
input: "edge_nnpostX/dense/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "edge_nnpostX_2/dense/Sigmoid"
op: "Sigmoid"
input: "edge_nnpostX_2/dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "edge_nnpostX_2/dense_1/MatMul"
op: "MatMul"
input: "edge_nnpostX_2/dense/Sigmoid"
input: "edge_nnpostX/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "edge_nnpostX_2/dense_1/BiasAdd"
op: "BiasAdd"
input: "edge_nnpostX_2/dense_1/MatMul"
input: "edge_nnpostX/dense_1/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "edge_nnpostX_2/dense_1/Tanh"
op: "Tanh"
input: "edge_nnpostX_2/dense_1/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "edge_nnpostX_2/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "edge_nnpostX_2/Reshape_1"
op: "Reshape"
input: "edge_nnpostX_2/dense_1/Tanh"
input: "edge_nnpostX_2/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "add_4"
op: "Add"
input: "Mul_3"
input: "Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_40/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_40"
op: "Reshape"
input: "edge_nnpostX_2/Reshape_1"
input: "Reshape_40/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_41/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_41"
op: "Reshape"
input: "add_4"
input: "Reshape_41/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_12"
op: "BatchMatMul"
input: "Reshape_40"
input: "Reshape_41"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_42/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_42"
op: "Reshape"
input: "MatMul_12"
input: "Reshape_42/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_13/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_13"
op: "Transpose"
input: "Reshape_42"
input: "transpose_13/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_12/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_12"
op: "Mean"
input: "transpose_13"
input: "Mean_12/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_12/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_12"
op: "RealDiv"
input: "Mean_12"
input: "truediv_12/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_6/Reshape"
op: "Reshape"
input: "truediv_12"
input: "update_GRUpostX_6/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_6/Reshape_1"
op: "Reshape"
input: "add_4"
input: "update_GRUpostX_6/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_6/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_6/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/range"
op: "Range"
input: "update_GRUpostX_6/rnn/range/start"
input: "update_GRUpostX_6/rnn/Rank"
input: "update_GRUpostX_6/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_6/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_6/rnn/concat"
op: "ConcatV2"
input: "update_GRUpostX_6/rnn/concat/values_0"
input: "update_GRUpostX_6/rnn/range"
input: "update_GRUpostX_6/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/transpose"
op: "Transpose"
input: "update_GRUpostX_6/Reshape"
input: "update_GRUpostX_6/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_6/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_6/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_6/rnn/Shape"
input: "update_GRUpostX_6/rnn/strided_slice/stack"
input: "update_GRUpostX_6/rnn/strided_slice/stack_1"
input: "update_GRUpostX_6/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_6/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpostX_6/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_6/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_6/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_6/rnn/Const"
input: "update_GRUpostX_6/rnn/Const_1"
input: "update_GRUpostX_6/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX_6/rnn/zeros"
op: "Fill"
input: "update_GRUpostX_6/rnn/concat_1"
input: "update_GRUpostX_6/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_6/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpostX_6/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_6/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpostX_6/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpostX_6/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_6/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_6/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpostX_6/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpostX_6/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpostX_6/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpostX_6/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpostX_6/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpostX_6/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpostX_6/rnn/TensorArray_1"
input: "update_GRUpostX_6/rnn/TensorArrayUnstack/range"
input: "update_GRUpostX_6/rnn/transpose"
input: "update_GRUpostX_6/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_6/rnn/transpose"
    }
  }
}
, name: "update_GRUpostX_6/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/Maximum"
op: "Maximum"
input: "update_GRUpostX_6/rnn/Maximum/x"
input: "update_GRUpostX_6/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/Minimum"
op: "Minimum"
input: "update_GRUpostX_6/rnn/strided_slice"
input: "update_GRUpostX_6/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_6/rnn/while/Enter"
op: "Enter"
input: "update_GRUpostX_6/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_6/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_6/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpostX_6/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_6/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_6/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpostX_6/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_6/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_6/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpostX_6/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_6/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_6/rnn/while/Merge"
op: "Merge"
input: "update_GRUpostX_6/rnn/while/Enter"
input: "update_GRUpostX_6/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpostX_6/rnn/while/Enter_1"
input: "update_GRUpostX_6/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpostX_6/rnn/while/Enter_2"
input: "update_GRUpostX_6/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpostX_6/rnn/while/Enter_3"
input: "update_GRUpostX_6/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpostX_6/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_6/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_6/rnn/while/Less"
op: "Less"
input: "update_GRUpostX_6/rnn/while/Merge"
input: "update_GRUpostX_6/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpostX_6/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_6/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_6/rnn/while/Less_1"
op: "Less"
input: "update_GRUpostX_6/rnn/while/Merge_1"
input: "update_GRUpostX_6/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpostX_6/rnn/while/Less"
input: "update_GRUpostX_6/rnn/while/Less_1"
, name: "update_GRUpostX_6/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpostX_6/rnn/while/LogicalAnd"
, name: "update_GRUpostX_6/rnn/while/Switch"
op: "Switch"
input: "update_GRUpostX_6/rnn/while/Merge"
input: "update_GRUpostX_6/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_6/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpostX_6/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpostX_6/rnn/while/Merge_1"
input: "update_GRUpostX_6/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_6/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpostX_6/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpostX_6/rnn/while/Merge_2"
input: "update_GRUpostX_6/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_6/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpostX_6/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpostX_6/rnn/while/Merge_3"
input: "update_GRUpostX_6/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_6/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpostX_6/rnn/while/Identity"
op: "Identity"
input: "update_GRUpostX_6/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpostX_6/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpostX_6/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpostX_6/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/add/y"
op: "Const"
input: "^update_GRUpostX_6/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/while/add"
op: "Add"
input: "update_GRUpostX_6/rnn/while/Identity"
input: "update_GRUpostX_6/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpostX_6/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_6/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_6/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpostX_6/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_6/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_6/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpostX_6/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpostX_6/rnn/while/Identity_1"
input: "update_GRUpostX_6/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpostX_6/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpostX_6/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_6/rnn/while/Identity_3"
input: "update_GRUpostX_6/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_6/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpostX_6/rnn/while/gru_cell/concat"
input: "update_GRUpostX_6/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_6/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpostX_6/rnn/while/gru_cell/MatMul"
input: "update_GRUpostX_6/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpostX_6/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpostX_6/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpostX_6/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpostX_6/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpostX_6/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpostX_6/rnn/while/gru_cell/split"
input: "update_GRUpostX_6/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpostX_6/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_6/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_6/rnn/while/gru_cell/mul"
input: "update_GRUpostX_6/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_6/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpostX_6/rnn/while/gru_cell/concat_1"
input: "update_GRUpostX_6/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_6/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpostX_6/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpostX_6/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpostX_6/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpostX_6/rnn/while/gru_cell/split:1"
input: "update_GRUpostX_6/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpostX_6/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpostX_6/rnn/while/gru_cell/sub/x"
input: "update_GRUpostX_6/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpostX_6/rnn/while/gru_cell/sub"
input: "update_GRUpostX_6/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpostX_6/rnn/while/gru_cell/mul_1"
input: "update_GRUpostX_6/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpostX_6/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_6/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_6/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_6/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpostX_6/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostX_6/rnn/while/Identity_1"
input: "update_GRUpostX_6/rnn/while/gru_cell/add"
input: "update_GRUpostX_6/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_6/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpostX_6/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpostX_6/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/while/add_1"
op: "Add"
input: "update_GRUpostX_6/rnn/while/Identity_1"
input: "update_GRUpostX_6/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpostX_6/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpostX_6/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpostX_6/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpostX_6/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/Exit"
op: "Exit"
input: "update_GRUpostX_6/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpostX_6/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpostX_6/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpostX_6/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpostX_6/rnn/TensorArray"
input: "update_GRUpostX_6/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_6/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_6/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_6/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpostX_6/rnn/TensorArrayStack/range/start"
input: "update_GRUpostX_6/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpostX_6/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_6/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_6/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpostX_6/rnn/TensorArray"
input: "update_GRUpostX_6/rnn/TensorArrayStack/range"
input: "update_GRUpostX_6/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_6/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpostX_6/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpostX_6/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_6/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_6/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_6/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_6/rnn/range_1"
op: "Range"
input: "update_GRUpostX_6/rnn/range_1/start"
input: "update_GRUpostX_6/rnn/Rank_1"
input: "update_GRUpostX_6/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_6/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_6/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpostX_6/rnn/concat_2/values_0"
input: "update_GRUpostX_6/rnn/range_1"
input: "update_GRUpostX_6/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpostX_6/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpostX_6/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_6/Reshape_2"
op: "Reshape"
input: "update_GRUpostX_6/rnn/while/Exit_3"
input: "update_GRUpostX_6/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_6/Mul"
op: "Mul"
input: "update_GRUpostX_6/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_43/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_43"
op: "Reshape"
input: "edge_nnpostX_2/Reshape_1"
input: "Reshape_43/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_44/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_44"
op: "Reshape"
input: "update_GRUpostX_6/Mul"
input: "Reshape_44/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_13"
op: "BatchMatMul"
input: "Reshape_43"
input: "Reshape_44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_45/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_45"
op: "Reshape"
input: "MatMul_13"
input: "Reshape_45/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_14/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_14"
op: "Transpose"
input: "Reshape_45"
input: "transpose_14/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_13/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_13"
op: "Mean"
input: "transpose_14"
input: "Mean_13/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_13/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_13"
op: "RealDiv"
input: "Mean_13"
input: "truediv_13/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_7/Reshape"
op: "Reshape"
input: "truediv_13"
input: "update_GRUpostX_7/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_7/Reshape_1"
op: "Reshape"
input: "update_GRUpostX_6/Mul"
input: "update_GRUpostX_7/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_7/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_7/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/range"
op: "Range"
input: "update_GRUpostX_7/rnn/range/start"
input: "update_GRUpostX_7/rnn/Rank"
input: "update_GRUpostX_7/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_7/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_7/rnn/concat"
op: "ConcatV2"
input: "update_GRUpostX_7/rnn/concat/values_0"
input: "update_GRUpostX_7/rnn/range"
input: "update_GRUpostX_7/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/transpose"
op: "Transpose"
input: "update_GRUpostX_7/Reshape"
input: "update_GRUpostX_7/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_7/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_7/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_7/rnn/Shape"
input: "update_GRUpostX_7/rnn/strided_slice/stack"
input: "update_GRUpostX_7/rnn/strided_slice/stack_1"
input: "update_GRUpostX_7/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_7/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpostX_7/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_7/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_7/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_7/rnn/Const"
input: "update_GRUpostX_7/rnn/Const_1"
input: "update_GRUpostX_7/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX_7/rnn/zeros"
op: "Fill"
input: "update_GRUpostX_7/rnn/concat_1"
input: "update_GRUpostX_7/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_7/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpostX_7/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_7/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpostX_7/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpostX_7/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_7/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_7/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpostX_7/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpostX_7/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpostX_7/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpostX_7/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpostX_7/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpostX_7/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpostX_7/rnn/TensorArray_1"
input: "update_GRUpostX_7/rnn/TensorArrayUnstack/range"
input: "update_GRUpostX_7/rnn/transpose"
input: "update_GRUpostX_7/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_7/rnn/transpose"
    }
  }
}
, name: "update_GRUpostX_7/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/Maximum"
op: "Maximum"
input: "update_GRUpostX_7/rnn/Maximum/x"
input: "update_GRUpostX_7/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/Minimum"
op: "Minimum"
input: "update_GRUpostX_7/rnn/strided_slice"
input: "update_GRUpostX_7/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_7/rnn/while/Enter"
op: "Enter"
input: "update_GRUpostX_7/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_7/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_7/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpostX_7/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_7/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_7/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpostX_7/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_7/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_7/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpostX_7/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_7/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_7/rnn/while/Merge"
op: "Merge"
input: "update_GRUpostX_7/rnn/while/Enter"
input: "update_GRUpostX_7/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpostX_7/rnn/while/Enter_1"
input: "update_GRUpostX_7/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpostX_7/rnn/while/Enter_2"
input: "update_GRUpostX_7/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpostX_7/rnn/while/Enter_3"
input: "update_GRUpostX_7/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpostX_7/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_7/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_7/rnn/while/Less"
op: "Less"
input: "update_GRUpostX_7/rnn/while/Merge"
input: "update_GRUpostX_7/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpostX_7/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_7/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_7/rnn/while/Less_1"
op: "Less"
input: "update_GRUpostX_7/rnn/while/Merge_1"
input: "update_GRUpostX_7/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpostX_7/rnn/while/Less"
input: "update_GRUpostX_7/rnn/while/Less_1"
, name: "update_GRUpostX_7/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpostX_7/rnn/while/LogicalAnd"
, name: "update_GRUpostX_7/rnn/while/Switch"
op: "Switch"
input: "update_GRUpostX_7/rnn/while/Merge"
input: "update_GRUpostX_7/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_7/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpostX_7/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpostX_7/rnn/while/Merge_1"
input: "update_GRUpostX_7/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_7/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpostX_7/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpostX_7/rnn/while/Merge_2"
input: "update_GRUpostX_7/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_7/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpostX_7/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpostX_7/rnn/while/Merge_3"
input: "update_GRUpostX_7/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_7/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpostX_7/rnn/while/Identity"
op: "Identity"
input: "update_GRUpostX_7/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpostX_7/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpostX_7/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpostX_7/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/add/y"
op: "Const"
input: "^update_GRUpostX_7/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/while/add"
op: "Add"
input: "update_GRUpostX_7/rnn/while/Identity"
input: "update_GRUpostX_7/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpostX_7/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_7/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_7/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpostX_7/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_7/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_7/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpostX_7/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpostX_7/rnn/while/Identity_1"
input: "update_GRUpostX_7/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpostX_7/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpostX_7/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_7/rnn/while/Identity_3"
input: "update_GRUpostX_7/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_7/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpostX_7/rnn/while/gru_cell/concat"
input: "update_GRUpostX_7/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_7/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpostX_7/rnn/while/gru_cell/MatMul"
input: "update_GRUpostX_7/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpostX_7/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpostX_7/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpostX_7/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpostX_7/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpostX_7/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpostX_7/rnn/while/gru_cell/split"
input: "update_GRUpostX_7/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpostX_7/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_7/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_7/rnn/while/gru_cell/mul"
input: "update_GRUpostX_7/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_7/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpostX_7/rnn/while/gru_cell/concat_1"
input: "update_GRUpostX_7/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_7/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpostX_7/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpostX_7/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpostX_7/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpostX_7/rnn/while/gru_cell/split:1"
input: "update_GRUpostX_7/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpostX_7/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpostX_7/rnn/while/gru_cell/sub/x"
input: "update_GRUpostX_7/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpostX_7/rnn/while/gru_cell/sub"
input: "update_GRUpostX_7/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpostX_7/rnn/while/gru_cell/mul_1"
input: "update_GRUpostX_7/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpostX_7/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_7/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_7/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_7/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpostX_7/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostX_7/rnn/while/Identity_1"
input: "update_GRUpostX_7/rnn/while/gru_cell/add"
input: "update_GRUpostX_7/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_7/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpostX_7/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpostX_7/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/while/add_1"
op: "Add"
input: "update_GRUpostX_7/rnn/while/Identity_1"
input: "update_GRUpostX_7/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpostX_7/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpostX_7/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpostX_7/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpostX_7/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/Exit"
op: "Exit"
input: "update_GRUpostX_7/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpostX_7/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpostX_7/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpostX_7/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpostX_7/rnn/TensorArray"
input: "update_GRUpostX_7/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_7/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_7/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_7/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpostX_7/rnn/TensorArrayStack/range/start"
input: "update_GRUpostX_7/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpostX_7/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_7/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_7/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpostX_7/rnn/TensorArray"
input: "update_GRUpostX_7/rnn/TensorArrayStack/range"
input: "update_GRUpostX_7/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_7/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpostX_7/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpostX_7/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_7/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_7/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_7/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_7/rnn/range_1"
op: "Range"
input: "update_GRUpostX_7/rnn/range_1/start"
input: "update_GRUpostX_7/rnn/Rank_1"
input: "update_GRUpostX_7/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_7/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_7/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpostX_7/rnn/concat_2/values_0"
input: "update_GRUpostX_7/rnn/range_1"
input: "update_GRUpostX_7/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpostX_7/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpostX_7/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_7/Reshape_2"
op: "Reshape"
input: "update_GRUpostX_7/rnn/while/Exit_3"
input: "update_GRUpostX_7/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_7/Mul"
op: "Mul"
input: "update_GRUpostX_7/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Reshape_46/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_46"
op: "Reshape"
input: "edge_nnpostX_2/Reshape_1"
input: "Reshape_46/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Reshape_47/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000\001\000\000\000"
    }
  }
}
, name: "Reshape_47"
op: "Reshape"
input: "update_GRUpostX_7/Mul"
input: "Reshape_47/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_14"
op: "BatchMatMul"
input: "Reshape_46"
input: "Reshape_47"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "Reshape_48/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "Reshape_48"
op: "Reshape"
input: "MatMul_14"
input: "Reshape_48/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "transpose_15/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\000\000\000\000\002\000\000\000\003\000\000\000\001\000\000\000"
    }
  }
}
, name: "transpose_15"
op: "Transpose"
input: "Reshape_48"
input: "transpose_15/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Mean_14/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "Mean_14"
op: "Mean"
input: "transpose_15"
input: "Mean_14/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_14/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "truediv_14"
op: "RealDiv"
input: "Mean_14"
input: "truediv_14/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\001\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_8/Reshape"
op: "Reshape"
input: "truediv_14"
input: "update_GRUpostX_8/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_8/Reshape_1"
op: "Reshape"
input: "update_GRUpostX_7/Mul"
input: "update_GRUpostX_8/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_8/rnn/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_8/rnn/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/range"
op: "Range"
input: "update_GRUpostX_8/rnn/range/start"
input: "update_GRUpostX_8/rnn/Rank"
input: "update_GRUpostX_8/rnn/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/concat/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_8/rnn/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_8/rnn/concat"
op: "ConcatV2"
input: "update_GRUpostX_8/rnn/concat/values_0"
input: "update_GRUpostX_8/rnn/range"
input: "update_GRUpostX_8/rnn/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/transpose"
op: "Transpose"
input: "update_GRUpostX_8/Reshape"
input: "update_GRUpostX_8/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_8/rnn/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_8/rnn/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_8/rnn/Shape"
input: "update_GRUpostX_8/rnn/strided_slice/stack"
input: "update_GRUpostX_8/rnn/strided_slice/stack_1"
input: "update_GRUpostX_8/rnn/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_8/rnn/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 180
    }
  }
}
, name: "update_GRUpostX_8/rnn/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_8/rnn/concat_1/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_8/rnn/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_8/rnn/Const"
input: "update_GRUpostX_8/rnn/Const_1"
input: "update_GRUpostX_8/rnn/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/zeros/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX_8/rnn/zeros"
op: "Fill"
input: "update_GRUpostX_8/rnn/concat_1"
input: "update_GRUpostX_8/rnn/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/time"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_8/rnn/TensorArray"
op: "TensorArrayV3"
input: "update_GRUpostX_8/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_8/rnn/dynamic_rnn/output_0"
  }
}
, name: "update_GRUpostX_8/rnn/TensorArray_1"
op: "TensorArrayV3"
input: "update_GRUpostX_8/rnn/strided_slice"
attr {
  key: "clear_after_read"
  value {
    b: true
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "dynamic_size"
  value {
    b: false
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "identical_element_shapes"
  value {
    b: true
  }
}
attr {
  key: "tensor_array_name"
  value {
    s: "update_GRUpostX_8/rnn/dynamic_rnn/input_0"
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayUnstack/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayUnstack/strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayUnstack/strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayUnstack/strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayUnstack/strided_slice"
op: "StridedSlice"
input: "update_GRUpostX_8/rnn/TensorArrayUnstack/Shape"
input: "update_GRUpostX_8/rnn/TensorArrayUnstack/strided_slice/stack"
input: "update_GRUpostX_8/rnn/TensorArrayUnstack/strided_slice/stack_1"
input: "update_GRUpostX_8/rnn/TensorArrayUnstack/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayUnstack/range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayUnstack/range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayUnstack/range"
op: "Range"
input: "update_GRUpostX_8/rnn/TensorArrayUnstack/range/start"
input: "update_GRUpostX_8/rnn/TensorArrayUnstack/strided_slice"
input: "update_GRUpostX_8/rnn/TensorArrayUnstack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
op: "TensorArrayScatterV3"
input: "update_GRUpostX_8/rnn/TensorArray_1"
input: "update_GRUpostX_8/rnn/TensorArrayUnstack/range"
input: "update_GRUpostX_8/rnn/transpose"
input: "update_GRUpostX_8/rnn/TensorArray_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_8/rnn/transpose"
    }
  }
}
, name: "update_GRUpostX_8/rnn/Maximum/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/Maximum"
op: "Maximum"
input: "update_GRUpostX_8/rnn/Maximum/x"
input: "update_GRUpostX_8/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/Minimum"
op: "Minimum"
input: "update_GRUpostX_8/rnn/strided_slice"
input: "update_GRUpostX_8/rnn/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/iteration_counter"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_8/rnn/while/Enter"
op: "Enter"
input: "update_GRUpostX_8/rnn/while/iteration_counter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_8/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_8/rnn/while/Enter_1"
op: "Enter"
input: "update_GRUpostX_8/rnn/time"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_8/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_8/rnn/while/Enter_2"
op: "Enter"
input: "update_GRUpostX_8/rnn/TensorArray:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_8/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_8/rnn/while/Enter_3"
op: "Enter"
input: "update_GRUpostX_8/Reshape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_8/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_8/rnn/while/Merge"
op: "Merge"
input: "update_GRUpostX_8/rnn/while/Enter"
input: "update_GRUpostX_8/rnn/while/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/Merge_1"
op: "Merge"
input: "update_GRUpostX_8/rnn/while/Enter_1"
input: "update_GRUpostX_8/rnn/while/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/Merge_2"
op: "Merge"
input: "update_GRUpostX_8/rnn/while/Enter_2"
input: "update_GRUpostX_8/rnn/while/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/Merge_3"
op: "Merge"
input: "update_GRUpostX_8/rnn/while/Enter_3"
input: "update_GRUpostX_8/rnn/while/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/Less/Enter"
op: "Enter"
input: "update_GRUpostX_8/rnn/strided_slice"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_8/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_8/rnn/while/Less"
op: "Less"
input: "update_GRUpostX_8/rnn/while/Merge"
input: "update_GRUpostX_8/rnn/while/Less/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/Less_1/Enter"
op: "Enter"
input: "update_GRUpostX_8/rnn/Minimum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_8/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_8/rnn/while/Less_1"
op: "Less"
input: "update_GRUpostX_8/rnn/while/Merge_1"
input: "update_GRUpostX_8/rnn/while/Less_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/LogicalAnd"
op: "LogicalAnd"
input: "update_GRUpostX_8/rnn/while/Less"
input: "update_GRUpostX_8/rnn/while/Less_1"
, name: "update_GRUpostX_8/rnn/while/LoopCond"
op: "LoopCond"
input: "update_GRUpostX_8/rnn/while/LogicalAnd"
, name: "update_GRUpostX_8/rnn/while/Switch"
op: "Switch"
input: "update_GRUpostX_8/rnn/while/Merge"
input: "update_GRUpostX_8/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_8/rnn/while/Merge"
    }
  }
}
, name: "update_GRUpostX_8/rnn/while/Switch_1"
op: "Switch"
input: "update_GRUpostX_8/rnn/while/Merge_1"
input: "update_GRUpostX_8/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_8/rnn/while/Merge_1"
    }
  }
}
, name: "update_GRUpostX_8/rnn/while/Switch_2"
op: "Switch"
input: "update_GRUpostX_8/rnn/while/Merge_2"
input: "update_GRUpostX_8/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_8/rnn/while/Merge_2"
    }
  }
}
, name: "update_GRUpostX_8/rnn/while/Switch_3"
op: "Switch"
input: "update_GRUpostX_8/rnn/while/Merge_3"
input: "update_GRUpostX_8/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_8/rnn/while/Merge_3"
    }
  }
}
, name: "update_GRUpostX_8/rnn/while/Identity"
op: "Identity"
input: "update_GRUpostX_8/rnn/while/Switch:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/Identity_1"
op: "Identity"
input: "update_GRUpostX_8/rnn/while/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/Identity_2"
op: "Identity"
input: "update_GRUpostX_8/rnn/while/Switch_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/Identity_3"
op: "Identity"
input: "update_GRUpostX_8/rnn/while/Switch_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/add/y"
op: "Const"
input: "^update_GRUpostX_8/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/while/add"
op: "Add"
input: "update_GRUpostX_8/rnn/while/Identity"
input: "update_GRUpostX_8/rnn/while/add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/TensorArrayReadV3/Enter"
op: "Enter"
input: "update_GRUpostX_8/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_8/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_8/rnn/while/TensorArrayReadV3/Enter_1"
op: "Enter"
input: "update_GRUpostX_8/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_8/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_8/rnn/while/TensorArrayReadV3"
op: "TensorArrayReadV3"
input: "update_GRUpostX_8/rnn/while/TensorArrayReadV3/Enter"
input: "update_GRUpostX_8/rnn/while/Identity_1"
input: "update_GRUpostX_8/rnn/while/TensorArrayReadV3/Enter_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/concat/axis"
op: "Const"
input: "^update_GRUpostX_8/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/concat"
op: "ConcatV2"
input: "update_GRUpostX_8/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_8/rnn/while/Identity_3"
input: "update_GRUpostX_8/rnn/while/gru_cell/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_8/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/MatMul"
op: "MatMul"
input: "update_GRUpostX_8/rnn/while/gru_cell/concat"
input: "update_GRUpostX_8/rnn/while/gru_cell/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/BiasAdd/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_8/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/BiasAdd"
op: "BiasAdd"
input: "update_GRUpostX_8/rnn/while/gru_cell/MatMul"
input: "update_GRUpostX_8/rnn/while/gru_cell/BiasAdd/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/Sigmoid"
op: "Sigmoid"
input: "update_GRUpostX_8/rnn/while/gru_cell/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/Const"
op: "Const"
input: "^update_GRUpostX_8/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/split/split_dim"
op: "Const"
input: "^update_GRUpostX_8/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/split"
op: "Split"
input: "update_GRUpostX_8/rnn/while/gru_cell/split/split_dim"
input: "update_GRUpostX_8/rnn/while/gru_cell/Sigmoid"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "num_split"
  value {
    i: 2
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/mul"
op: "Mul"
input: "update_GRUpostX_8/rnn/while/gru_cell/split"
input: "update_GRUpostX_8/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/concat_1/axis"
op: "Const"
input: "^update_GRUpostX_8/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/concat_1"
op: "ConcatV2"
input: "update_GRUpostX_8/rnn/while/TensorArrayReadV3"
input: "update_GRUpostX_8/rnn/while/gru_cell/mul"
input: "update_GRUpostX_8/rnn/while/gru_cell/concat_1/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/MatMul_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_8/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/MatMul_1"
op: "MatMul"
input: "update_GRUpostX_8/rnn/while/gru_cell/concat_1"
input: "update_GRUpostX_8/rnn/while/gru_cell/MatMul_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/BiasAdd_1/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_8/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/BiasAdd_1"
op: "BiasAdd"
input: "update_GRUpostX_8/rnn/while/gru_cell/MatMul_1"
input: "update_GRUpostX_8/rnn/while/gru_cell/BiasAdd_1/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/Tanh"
op: "Tanh"
input: "update_GRUpostX_8/rnn/while/gru_cell/BiasAdd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/mul_1"
op: "Mul"
input: "update_GRUpostX_8/rnn/while/gru_cell/split:1"
input: "update_GRUpostX_8/rnn/while/Identity_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/sub/x"
op: "Const"
input: "^update_GRUpostX_8/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/sub"
op: "Sub"
input: "update_GRUpostX_8/rnn/while/gru_cell/sub/x"
input: "update_GRUpostX_8/rnn/while/gru_cell/split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/mul_2"
op: "Mul"
input: "update_GRUpostX_8/rnn/while/gru_cell/sub"
input: "update_GRUpostX_8/rnn/while/gru_cell/Tanh"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/gru_cell/add"
op: "Add"
input: "update_GRUpostX_8/rnn/while/gru_cell/mul_1"
input: "update_GRUpostX_8/rnn/while/gru_cell/mul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "update_GRUpostX_8/rnn/TensorArray"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_8/rnn/while/gru_cell/add"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_8/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "update_GRUpostX_8/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "update_GRUpostX_8/rnn/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostX_8/rnn/while/Identity_1"
input: "update_GRUpostX_8/rnn/while/gru_cell/add"
input: "update_GRUpostX_8/rnn/while/Identity_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_8/rnn/while/gru_cell/add"
    }
  }
}
, name: "update_GRUpostX_8/rnn/while/add_1/y"
op: "Const"
input: "^update_GRUpostX_8/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/while/add_1"
op: "Add"
input: "update_GRUpostX_8/rnn/while/Identity_1"
input: "update_GRUpostX_8/rnn/while/add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/NextIteration"
op: "NextIteration"
input: "update_GRUpostX_8/rnn/while/add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/NextIteration_1"
op: "NextIteration"
input: "update_GRUpostX_8/rnn/while/add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/NextIteration_2"
op: "NextIteration"
input: "update_GRUpostX_8/rnn/while/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/NextIteration_3"
op: "NextIteration"
input: "update_GRUpostX_8/rnn/while/gru_cell/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/Exit"
op: "Exit"
input: "update_GRUpostX_8/rnn/while/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/Exit_1"
op: "Exit"
input: "update_GRUpostX_8/rnn/while/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/while/Exit_2"
op: "Exit"
input: "update_GRUpostX_8/rnn/while/Switch_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/while/Exit_3"
op: "Exit"
input: "update_GRUpostX_8/rnn/while/Switch_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayStack/TensorArraySizeV3"
op: "TensorArraySizeV3"
input: "update_GRUpostX_8/rnn/TensorArray"
input: "update_GRUpostX_8/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_8/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayStack/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_8/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayStack/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_8/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayStack/range"
op: "Range"
input: "update_GRUpostX_8/rnn/TensorArrayStack/range/start"
input: "update_GRUpostX_8/rnn/TensorArrayStack/TensorArraySizeV3"
input: "update_GRUpostX_8/rnn/TensorArrayStack/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_8/rnn/TensorArray"
    }
  }
}
, name: "update_GRUpostX_8/rnn/TensorArrayStack/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "update_GRUpostX_8/rnn/TensorArray"
input: "update_GRUpostX_8/rnn/TensorArrayStack/range"
input: "update_GRUpostX_8/rnn/while/Exit_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_8/rnn/TensorArray"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      dim {
        size: 180
      }
      dim {
        size: 50
      }
    }
  }
}
, name: "update_GRUpostX_8/rnn/Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\264\000\000\000"
    }
  }
}
, name: "update_GRUpostX_8/rnn/Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 50
    }
  }
}
, name: "update_GRUpostX_8/rnn/Rank_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "update_GRUpostX_8/rnn/range_1/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "update_GRUpostX_8/rnn/range_1/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "update_GRUpostX_8/rnn/range_1"
op: "Range"
input: "update_GRUpostX_8/rnn/range_1/start"
input: "update_GRUpostX_8/rnn/Rank_1"
input: "update_GRUpostX_8/rnn/range_1/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/concat_2/values_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "update_GRUpostX_8/rnn/concat_2/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "update_GRUpostX_8/rnn/concat_2"
op: "ConcatV2"
input: "update_GRUpostX_8/rnn/concat_2/values_0"
input: "update_GRUpostX_8/rnn/range_1"
input: "update_GRUpostX_8/rnn/concat_2/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/rnn/transpose_1"
op: "Transpose"
input: "update_GRUpostX_8/rnn/TensorArrayStack/TensorArrayGatherV3"
input: "update_GRUpostX_8/rnn/concat_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/Reshape_2/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX_8/Reshape_2"
op: "Reshape"
input: "update_GRUpostX_8/rnn/while/Exit_3"
input: "update_GRUpostX_8/Reshape_2/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX_8/Mul"
op: "Mul"
input: "update_GRUpostX_8/Reshape_2"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/concat/axis"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "g_nnpostX_2/concat"
op: "ConcatV2"
input: "update_GRUpostX_8/Mul"
input: "Mul"
input: "g_nnpostX_2/concat/axis"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostX_2/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostX_2/Reshape"
op: "Reshape"
input: "g_nnpostX_2/concat"
input: "g_nnpostX_2/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostX_2/dropout/cond/Switch"
op: "Switch"
input: "Placeholder_5"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_2/dropout/cond/switch_t"
op: "Identity"
input: "g_nnpostX_2/dropout/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_2/dropout/cond/switch_f"
op: "Identity"
input: "g_nnpostX_2/dropout/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_2/dropout/cond/pred_id"
op: "Identity"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_2/dropout/cond/dropout/keep_prob"
op: "Const"
input: "^g_nnpostX_2/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.800000011920929
    }
  }
}
, name: "g_nnpostX_2/dropout/cond/dropout/Shape"
op: "Const"
input: "^g_nnpostX_2/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostX_2/dropout/cond/dropout/random_uniform/min"
op: "Const"
input: "^g_nnpostX_2/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX_2/dropout/cond/dropout/random_uniform/max"
op: "Const"
input: "^g_nnpostX_2/dropout/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "g_nnpostX_2/dropout/cond/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpostX_2/dropout/cond/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 2619
  }
}
, name: "g_nnpostX_2/dropout/cond/dropout/random_uniform/sub"
op: "Sub"
input: "g_nnpostX_2/dropout/cond/dropout/random_uniform/max"
input: "g_nnpostX_2/dropout/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout/cond/dropout/random_uniform/mul"
op: "Mul"
input: "g_nnpostX_2/dropout/cond/dropout/random_uniform/RandomUniform"
input: "g_nnpostX_2/dropout/cond/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout/cond/dropout/random_uniform"
op: "Add"
input: "g_nnpostX_2/dropout/cond/dropout/random_uniform/mul"
input: "g_nnpostX_2/dropout/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout/cond/dropout/add"
op: "Add"
input: "g_nnpostX_2/dropout/cond/dropout/keep_prob"
input: "g_nnpostX_2/dropout/cond/dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout/cond/dropout/Floor"
op: "Floor"
input: "g_nnpostX_2/dropout/cond/dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout/cond/dropout/div/Switch"
op: "Switch"
input: "g_nnpostX_2/Reshape"
input: "g_nnpostX_2/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX_2/Reshape"
    }
  }
}
, name: "g_nnpostX_2/dropout/cond/dropout/div"
op: "RealDiv"
input: "g_nnpostX_2/dropout/cond/dropout/div/Switch:1"
input: "g_nnpostX_2/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout/cond/dropout/mul"
op: "Mul"
input: "g_nnpostX_2/dropout/cond/dropout/div"
input: "g_nnpostX_2/dropout/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout/cond/Identity/Switch"
op: "Switch"
input: "g_nnpostX_2/Reshape"
input: "g_nnpostX_2/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX_2/Reshape"
    }
  }
}
, name: "g_nnpostX_2/dropout/cond/Identity"
op: "Identity"
input: "g_nnpostX_2/dropout/cond/Identity/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout/cond/Merge"
op: "Merge"
input: "g_nnpostX_2/dropout/cond/Identity"
input: "g_nnpostX_2/dropout/cond/dropout/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dense/MatMul"
op: "MatMul"
input: "g_nnpostX_2/dropout/cond/Merge"
input: "g_nnpostX/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "g_nnpostX_2/dense/BiasAdd"
op: "BiasAdd"
input: "g_nnpostX_2/dense/MatMul"
input: "g_nnpostX/dense/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "g_nnpostX_2/dense/Sigmoid"
op: "Sigmoid"
input: "g_nnpostX_2/dense/BiasAdd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout_1/cond/Switch"
op: "Switch"
input: "Placeholder_5"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_2/dropout_1/cond/switch_t"
op: "Identity"
input: "g_nnpostX_2/dropout_1/cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_2/dropout_1/cond/switch_f"
op: "Identity"
input: "g_nnpostX_2/dropout_1/cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_2/dropout_1/cond/pred_id"
op: "Identity"
input: "Placeholder_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "g_nnpostX_2/dropout_1/cond/dropout/keep_prob"
op: "Const"
input: "^g_nnpostX_2/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.800000011920929
    }
  }
}
, name: "g_nnpostX_2/dropout_1/cond/dropout/Shape"
op: "Const"
input: "^g_nnpostX_2/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostX_2/dropout_1/cond/dropout/random_uniform/min"
op: "Const"
input: "^g_nnpostX_2/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX_2/dropout_1/cond/dropout/random_uniform/max"
op: "Const"
input: "^g_nnpostX_2/dropout_1/cond/switch_t"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "g_nnpostX_2/dropout_1/cond/dropout/random_uniform/RandomUniform"
op: "RandomUniform"
input: "g_nnpostX_2/dropout_1/cond/dropout/Shape"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "seed"
  value {
    i: 1334
  }
}
attr {
  key: "seed2"
  value {
    i: 2642
  }
}
, name: "g_nnpostX_2/dropout_1/cond/dropout/random_uniform/sub"
op: "Sub"
input: "g_nnpostX_2/dropout_1/cond/dropout/random_uniform/max"
input: "g_nnpostX_2/dropout_1/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout_1/cond/dropout/random_uniform/mul"
op: "Mul"
input: "g_nnpostX_2/dropout_1/cond/dropout/random_uniform/RandomUniform"
input: "g_nnpostX_2/dropout_1/cond/dropout/random_uniform/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout_1/cond/dropout/random_uniform"
op: "Add"
input: "g_nnpostX_2/dropout_1/cond/dropout/random_uniform/mul"
input: "g_nnpostX_2/dropout_1/cond/dropout/random_uniform/min"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout_1/cond/dropout/add"
op: "Add"
input: "g_nnpostX_2/dropout_1/cond/dropout/keep_prob"
input: "g_nnpostX_2/dropout_1/cond/dropout/random_uniform"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout_1/cond/dropout/Floor"
op: "Floor"
input: "g_nnpostX_2/dropout_1/cond/dropout/add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout_1/cond/dropout/div/Switch"
op: "Switch"
input: "g_nnpostX_2/dense/Sigmoid"
input: "g_nnpostX_2/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX_2/dense/Sigmoid"
    }
  }
}
, name: "g_nnpostX_2/dropout_1/cond/dropout/div"
op: "RealDiv"
input: "g_nnpostX_2/dropout_1/cond/dropout/div/Switch:1"
input: "g_nnpostX_2/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout_1/cond/dropout/mul"
op: "Mul"
input: "g_nnpostX_2/dropout_1/cond/dropout/div"
input: "g_nnpostX_2/dropout_1/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout_1/cond/Identity/Switch"
op: "Switch"
input: "g_nnpostX_2/dense/Sigmoid"
input: "g_nnpostX_2/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX_2/dense/Sigmoid"
    }
  }
}
, name: "g_nnpostX_2/dropout_1/cond/Identity"
op: "Identity"
input: "g_nnpostX_2/dropout_1/cond/Identity/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dropout_1/cond/Merge"
op: "Merge"
input: "g_nnpostX_2/dropout_1/cond/Identity"
input: "g_nnpostX_2/dropout_1/cond/dropout/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "g_nnpostX_2/dense_1/MatMul"
op: "MatMul"
input: "g_nnpostX_2/dropout_1/cond/Merge"
input: "g_nnpostX/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "g_nnpostX_2/dense_1/BiasAdd"
op: "BiasAdd"
input: "g_nnpostX_2/dense_1/MatMul"
input: "g_nnpostX/dense_1/bias/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "g_nnpostX_2/Reshape_1/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "g_nnpostX_2/Reshape_1"
op: "Reshape"
input: "g_nnpostX_2/dense_1/BiasAdd"
input: "g_nnpostX_2/Reshape_1/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostX_2/Mul"
op: "Mul"
input: "g_nnpostX_2/Reshape_1"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "save/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
      }
      string_val: "model"
    }
  }
}
, name: "save/SaveV2/tensor_names"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 40
        }
      }
      string_val: "dense/bias"
      string_val: "dense/kernel"
      string_val: "dense_1/bias"
      string_val: "dense_1/kernel"
      string_val: "edge_nnpostX/dense/bias"
      string_val: "edge_nnpostX/dense/kernel"
      string_val: "edge_nnpostX/dense_1/bias"
      string_val: "edge_nnpostX/dense_1/kernel"
      string_val: "edge_nnpostZ/dense/bias"
      string_val: "edge_nnpostZ/dense/kernel"
      string_val: "edge_nnpostZ/dense_1/bias"
      string_val: "edge_nnpostZ/dense_1/kernel"
      string_val: "edge_nnpriorZ/dense/bias"
      string_val: "edge_nnpriorZ/dense/kernel"
      string_val: "edge_nnpriorZ/dense_1/bias"
      string_val: "edge_nnpriorZ/dense_1/kernel"
      string_val: "g_nnpostX/dense/bias"
      string_val: "g_nnpostX/dense/kernel"
      string_val: "g_nnpostX/dense_1/bias"
      string_val: "g_nnpostX/dense_1/kernel"
      string_val: "g_nnpostZ/dense/bias"
      string_val: "g_nnpostZ/dense/kernel"
      string_val: "g_nnpostZ/dense_1/bias"
      string_val: "g_nnpostZ/dense_1/kernel"
      string_val: "g_nnpriorZ/dense/bias"
      string_val: "g_nnpriorZ/dense/kernel"
      string_val: "g_nnpriorZ/dense_1/bias"
      string_val: "g_nnpriorZ/dense_1/kernel"
      string_val: "update_GRUpostX/rnn/gru_cell/candidate/bias"
      string_val: "update_GRUpostX/rnn/gru_cell/candidate/kernel"
      string_val: "update_GRUpostX/rnn/gru_cell/gates/bias"
      string_val: "update_GRUpostX/rnn/gru_cell/gates/kernel"
      string_val: "update_GRUpostZ/rnn/gru_cell/candidate/bias"
      string_val: "update_GRUpostZ/rnn/gru_cell/candidate/kernel"
      string_val: "update_GRUpostZ/rnn/gru_cell/gates/bias"
      string_val: "update_GRUpostZ/rnn/gru_cell/gates/kernel"
      string_val: "update_GRUpriorZ/rnn/gru_cell/candidate/bias"
      string_val: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
      string_val: "update_GRUpriorZ/rnn/gru_cell/gates/bias"
      string_val: "update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "save/SaveV2/shape_and_slices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 40
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}
, name: "save/SaveV2"
op: "SaveV2"
input: "save/Const"
input: "save/SaveV2/tensor_names"
input: "save/SaveV2/shape_and_slices"
input: "dense/bias"
input: "dense/kernel"
input: "dense_1/bias"
input: "dense_1/kernel"
input: "edge_nnpostX/dense/bias"
input: "edge_nnpostX/dense/kernel"
input: "edge_nnpostX/dense_1/bias"
input: "edge_nnpostX/dense_1/kernel"
input: "edge_nnpostZ/dense/bias"
input: "edge_nnpostZ/dense/kernel"
input: "edge_nnpostZ/dense_1/bias"
input: "edge_nnpostZ/dense_1/kernel"
input: "edge_nnpriorZ/dense/bias"
input: "edge_nnpriorZ/dense/kernel"
input: "edge_nnpriorZ/dense_1/bias"
input: "edge_nnpriorZ/dense_1/kernel"
input: "g_nnpostX/dense/bias"
input: "g_nnpostX/dense/kernel"
input: "g_nnpostX/dense_1/bias"
input: "g_nnpostX/dense_1/kernel"
input: "g_nnpostZ/dense/bias"
input: "g_nnpostZ/dense/kernel"
input: "g_nnpostZ/dense_1/bias"
input: "g_nnpostZ/dense_1/kernel"
input: "g_nnpriorZ/dense/bias"
input: "g_nnpriorZ/dense/kernel"
input: "g_nnpriorZ/dense_1/bias"
input: "g_nnpriorZ/dense_1/kernel"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel"
input: "update_GRUpostX/rnn/gru_cell/gates/bias"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}
, name: "save/control_dependency"
op: "Identity"
input: "save/Const"
input: "^save/SaveV2"
attr {
  key: "T"
  value {
    type: DT_STRING
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@save/Const"
    }
  }
}
, name: "save/RestoreV2/tensor_names"
op: "Const"
device: "/device:CPU:0"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 40
        }
      }
      string_val: "dense/bias"
      string_val: "dense/kernel"
      string_val: "dense_1/bias"
      string_val: "dense_1/kernel"
      string_val: "edge_nnpostX/dense/bias"
      string_val: "edge_nnpostX/dense/kernel"
      string_val: "edge_nnpostX/dense_1/bias"
      string_val: "edge_nnpostX/dense_1/kernel"
      string_val: "edge_nnpostZ/dense/bias"
      string_val: "edge_nnpostZ/dense/kernel"
      string_val: "edge_nnpostZ/dense_1/bias"
      string_val: "edge_nnpostZ/dense_1/kernel"
      string_val: "edge_nnpriorZ/dense/bias"
      string_val: "edge_nnpriorZ/dense/kernel"
      string_val: "edge_nnpriorZ/dense_1/bias"
      string_val: "edge_nnpriorZ/dense_1/kernel"
      string_val: "g_nnpostX/dense/bias"
      string_val: "g_nnpostX/dense/kernel"
      string_val: "g_nnpostX/dense_1/bias"
      string_val: "g_nnpostX/dense_1/kernel"
      string_val: "g_nnpostZ/dense/bias"
      string_val: "g_nnpostZ/dense/kernel"
      string_val: "g_nnpostZ/dense_1/bias"
      string_val: "g_nnpostZ/dense_1/kernel"
      string_val: "g_nnpriorZ/dense/bias"
      string_val: "g_nnpriorZ/dense/kernel"
      string_val: "g_nnpriorZ/dense_1/bias"
      string_val: "g_nnpriorZ/dense_1/kernel"
      string_val: "update_GRUpostX/rnn/gru_cell/candidate/bias"
      string_val: "update_GRUpostX/rnn/gru_cell/candidate/kernel"
      string_val: "update_GRUpostX/rnn/gru_cell/gates/bias"
      string_val: "update_GRUpostX/rnn/gru_cell/gates/kernel"
      string_val: "update_GRUpostZ/rnn/gru_cell/candidate/bias"
      string_val: "update_GRUpostZ/rnn/gru_cell/candidate/kernel"
      string_val: "update_GRUpostZ/rnn/gru_cell/gates/bias"
      string_val: "update_GRUpostZ/rnn/gru_cell/gates/kernel"
      string_val: "update_GRUpriorZ/rnn/gru_cell/candidate/bias"
      string_val: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
      string_val: "update_GRUpriorZ/rnn/gru_cell/gates/bias"
      string_val: "update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "save/RestoreV2/shape_and_slices"
op: "Const"
device: "/device:CPU:0"
attr {
  key: "dtype"
  value {
    type: DT_STRING
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_STRING
      tensor_shape {
        dim {
          size: 40
        }
      }
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
      string_val: ""
    }
  }
}
, name: "save/RestoreV2"
op: "RestoreV2"
input: "save/Const"
input: "save/RestoreV2/tensor_names"
input: "save/RestoreV2/shape_and_slices"
device: "/device:CPU:0"
attr {
  key: "dtypes"
  value {
    list {
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
      type: DT_FLOAT
    }
  }
}
, name: "save/Assign"
op: "Assign"
input: "dense/bias"
input: "save/RestoreV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_1"
op: "Assign"
input: "dense/kernel"
input: "save/RestoreV2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_2"
op: "Assign"
input: "dense_1/bias"
input: "save/RestoreV2:2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_3"
op: "Assign"
input: "dense_1/kernel"
input: "save/RestoreV2:3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_4"
op: "Assign"
input: "edge_nnpostX/dense/bias"
input: "save/RestoreV2:4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_5"
op: "Assign"
input: "edge_nnpostX/dense/kernel"
input: "save/RestoreV2:5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_6"
op: "Assign"
input: "edge_nnpostX/dense_1/bias"
input: "save/RestoreV2:6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_7"
op: "Assign"
input: "edge_nnpostX/dense_1/kernel"
input: "save/RestoreV2:7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_8"
op: "Assign"
input: "edge_nnpostZ/dense/bias"
input: "save/RestoreV2:8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_9"
op: "Assign"
input: "edge_nnpostZ/dense/kernel"
input: "save/RestoreV2:9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_10"
op: "Assign"
input: "edge_nnpostZ/dense_1/bias"
input: "save/RestoreV2:10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_11"
op: "Assign"
input: "edge_nnpostZ/dense_1/kernel"
input: "save/RestoreV2:11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_12"
op: "Assign"
input: "edge_nnpriorZ/dense/bias"
input: "save/RestoreV2:12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_13"
op: "Assign"
input: "edge_nnpriorZ/dense/kernel"
input: "save/RestoreV2:13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_14"
op: "Assign"
input: "edge_nnpriorZ/dense_1/bias"
input: "save/RestoreV2:14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_15"
op: "Assign"
input: "edge_nnpriorZ/dense_1/kernel"
input: "save/RestoreV2:15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_16"
op: "Assign"
input: "g_nnpostX/dense/bias"
input: "save/RestoreV2:16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_17"
op: "Assign"
input: "g_nnpostX/dense/kernel"
input: "save/RestoreV2:17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_18"
op: "Assign"
input: "g_nnpostX/dense_1/bias"
input: "save/RestoreV2:18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_19"
op: "Assign"
input: "g_nnpostX/dense_1/kernel"
input: "save/RestoreV2:19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_20"
op: "Assign"
input: "g_nnpostZ/dense/bias"
input: "save/RestoreV2:20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_21"
op: "Assign"
input: "g_nnpostZ/dense/kernel"
input: "save/RestoreV2:21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_22"
op: "Assign"
input: "g_nnpostZ/dense_1/bias"
input: "save/RestoreV2:22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_23"
op: "Assign"
input: "g_nnpostZ/dense_1/kernel"
input: "save/RestoreV2:23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_24"
op: "Assign"
input: "g_nnpriorZ/dense/bias"
input: "save/RestoreV2:24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_25"
op: "Assign"
input: "g_nnpriorZ/dense/kernel"
input: "save/RestoreV2:25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_26"
op: "Assign"
input: "g_nnpriorZ/dense_1/bias"
input: "save/RestoreV2:26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_27"
op: "Assign"
input: "g_nnpriorZ/dense_1/kernel"
input: "save/RestoreV2:27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_28"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias"
input: "save/RestoreV2:28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_29"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel"
input: "save/RestoreV2:29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_30"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/gates/bias"
input: "save/RestoreV2:30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_31"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel"
input: "save/RestoreV2:31"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_32"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias"
input: "save/RestoreV2:32"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_33"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel"
input: "save/RestoreV2:33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_34"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias"
input: "save/RestoreV2:34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_35"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel"
input: "save/RestoreV2:35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_36"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias"
input: "save/RestoreV2:36"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_37"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
input: "save/RestoreV2:37"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_38"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias"
input: "save/RestoreV2:38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/Assign_39"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel"
input: "save/RestoreV2:39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "save/restore_all"
op: "NoOp"
input: "^save/Assign"
input: "^save/Assign_1"
input: "^save/Assign_10"
input: "^save/Assign_11"
input: "^save/Assign_12"
input: "^save/Assign_13"
input: "^save/Assign_14"
input: "^save/Assign_15"
input: "^save/Assign_16"
input: "^save/Assign_17"
input: "^save/Assign_18"
input: "^save/Assign_19"
input: "^save/Assign_2"
input: "^save/Assign_20"
input: "^save/Assign_21"
input: "^save/Assign_22"
input: "^save/Assign_23"
input: "^save/Assign_24"
input: "^save/Assign_25"
input: "^save/Assign_26"
input: "^save/Assign_27"
input: "^save/Assign_28"
input: "^save/Assign_29"
input: "^save/Assign_3"
input: "^save/Assign_30"
input: "^save/Assign_31"
input: "^save/Assign_32"
input: "^save/Assign_33"
input: "^save/Assign_34"
input: "^save/Assign_35"
input: "^save/Assign_36"
input: "^save/Assign_37"
input: "^save/Assign_38"
input: "^save/Assign_39"
input: "^save/Assign_4"
input: "^save/Assign_5"
input: "^save/Assign_6"
input: "^save/Assign_7"
input: "^save/Assign_8"
input: "^save/Assign_9"
, name: "Exp_2"
op: "Exp"
input: "split_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Exp_3"
op: "Exp"
input: "split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "add_5/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_5"
op: "Add"
input: "Exp_2"
input: "add_5/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "add_6/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_6"
op: "Add"
input: "Exp_3"
input: "add_6/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "div"
op: "RealDiv"
input: "add_5"
input: "add_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sub"
op: "Sub"
input: "split"
input: "split_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Square"
op: "Square"
input: "Sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "add_7/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_7"
op: "Add"
input: "Exp_3"
input: "add_7/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "div_1"
op: "RealDiv"
input: "Square"
input: "add_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "add_8/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_8"
op: "Add"
input: "Exp_3"
input: "add_8/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "add_9/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_9"
op: "Add"
input: "Exp_2"
input: "add_9/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "div_2"
op: "RealDiv"
input: "add_8"
input: "add_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "add_10/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_10"
op: "Add"
input: "div_2"
input: "add_10/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Log"
op: "Log"
input: "add_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "add_11"
op: "Add"
input: "div"
input: "div_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "sub_1"
op: "Sub"
input: "add_11"
input: "sub_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "add_12"
op: "Add"
input: "sub_1"
input: "Log"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_1/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "Sum_1"
op: "Sum"
input: "add_12"
input: "Sum_1/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "mul_7/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.5
    }
  }
}
, name: "mul_7"
op: "Mul"
input: "mul_7/x"
input: "Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_8"
op: "Mul"
input: "mul_7"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_2/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\002\000\000\000"
    }
  }
}
, name: "Sum_2"
op: "Sum"
input: "mul_8"
input: "Sum_2/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Const_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "Mean_15"
op: "Mean"
input: "Sum_2"
input: "Const_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Exp_4"
op: "Exp"
input: "split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Square_1"
op: "Square"
input: "split"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "add_13"
op: "Add"
input: "Exp_4"
input: "Square_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "add_14/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "add_14"
op: "Add"
input: "add_14/x"
input: "split:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_2"
op: "Sub"
input: "add_13"
input: "add_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_3/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "Sum_3"
op: "Sum"
input: "sub_2"
input: "Sum_3/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "mul_9/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.5
    }
  }
}
, name: "mul_9"
op: "Mul"
input: "mul_9/x"
input: "Sum_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_10"
op: "Mul"
input: "mul_9"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_4/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\002\000\000\000"
    }
  }
}
, name: "Sum_4"
op: "Sum"
input: "mul_10"
input: "Sum_4/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Const_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "Mean_16"
op: "Mean"
input: "Sum_4"
input: "Const_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "strided_slice/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "strided_slice/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice/stack"
input: "strided_slice/stack_1"
input: "strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_1/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "strided_slice_1/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_1/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_1"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_1/stack"
input: "strided_slice_1/stack_1"
input: "strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_2/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "strided_slice_2/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_2/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_2"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_2/stack"
input: "strided_slice_2/stack_1"
input: "strided_slice_2/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_4"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_5"
op: "Sum"
input: "strided_slice_2"
input: "Const_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_49/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_49"
op: "Reshape"
input: "strided_slice_2"
input: "Reshape_49/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag"
op: "Diag"
input: "Reshape_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_15"
op: "MatMul"
input: "Diag"
input: "strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_15/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_15"
op: "Add"
input: "MatMul_15"
input: "add_15/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_6/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_6"
op: "Sum"
input: "add_15"
input: "Sum_6/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_15"
op: "RealDiv"
input: "Sum_6"
input: "Sum_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_3"
op: "Sub"
input: "strided_slice_1"
input: "truediv_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_5"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_7"
op: "Sum"
input: "strided_slice_2"
input: "Const_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_50/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_50"
op: "Reshape"
input: "strided_slice_2"
input: "Reshape_50/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_1"
op: "Diag"
input: "Reshape_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_16"
op: "MatMul"
input: "Diag_1"
input: "strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_16/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_16"
op: "Add"
input: "MatMul_16"
input: "add_16/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_8/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_8"
op: "Sum"
input: "add_16"
input: "Sum_8/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_16"
op: "RealDiv"
input: "Sum_8"
input: "Sum_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_4"
op: "Sub"
input: "strided_slice"
input: "truediv_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient"
op: "StopGradient"
input: "sub_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_6"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_9"
op: "Sum"
input: "strided_slice_2"
input: "Const_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_51/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_51"
op: "Reshape"
input: "strided_slice_2"
input: "Reshape_51/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_2"
op: "Diag"
input: "Reshape_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_17"
op: "MatMul"
input: "Diag_2"
input: "StopGradient"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_17/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_17"
op: "Add"
input: "MatMul_17"
input: "add_17/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_18"
op: "MatMul"
input: "Diag_2"
input: "sub_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_18/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_18"
op: "Add"
input: "MatMul_18"
input: "add_18/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_16/Rank"
op: "Rank"
input: "add_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_16/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_16/sub"
op: "Sub"
input: "transpose_16/Rank"
input: "transpose_16/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_16/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_16/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_16/Range"
op: "Range"
input: "transpose_16/Range/start"
input: "transpose_16/Rank"
input: "transpose_16/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_16/sub_1"
op: "Sub"
input: "transpose_16/sub"
input: "transpose_16/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_16"
op: "Transpose"
input: "add_17"
input: "transpose_16/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_19"
op: "MatMul"
input: "transpose_16"
input: "add_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd"
op: "Svd"
input: "MatMul_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "Svd:2"
input: "adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_7"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_8"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant"
op: "MatrixDeterminant"
input: "Svd:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_1"
op: "MatrixDeterminant"
input: "adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_11"
op: "Mul"
input: "MatrixDeterminant"
input: "MatrixDeterminant_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less"
op: "Less"
input: "mul_11"
input: "Less/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond/Switch"
op: "Switch"
input: "Less"
input: "Less"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond/switch_t"
op: "Identity"
input: "cond/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond/switch_f"
op: "Identity"
input: "cond/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond/pred_id"
op: "Identity"
input: "Less"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond/mul/Switch"
op: "Switch"
input: "Svd"
input: "cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd"
    }
  }
}
, name: "cond/mul/Switch_1"
op: "Switch"
input: "Const_7"
input: "cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_7"
    }
  }
}
, name: "cond/mul"
op: "Mul"
input: "cond/mul/Switch:1"
input: "cond/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond/mul_1/Switch"
op: "Switch"
input: "Svd:1"
input: "cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd"
    }
  }
}
, name: "cond/mul_1/Switch_1"
op: "Switch"
input: "Const_8"
input: "cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_8"
    }
  }
}
, name: "cond/mul_1"
op: "Mul"
input: "cond/mul_1/Switch:1"
input: "cond/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond/Switch_1"
op: "Switch"
input: "Svd"
input: "cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd"
    }
  }
}
, name: "cond/Switch_2"
op: "Switch"
input: "Svd:1"
input: "cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd"
    }
  }
}
, name: "cond/Merge"
op: "Merge"
input: "cond/Switch_1"
input: "cond/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond/Merge_1"
op: "Merge"
input: "cond/Switch_2"
input: "cond/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_20"
op: "MatMul"
input: "cond/Merge_1"
input: "adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_21"
op: "MatMul"
input: "add_17"
input: "MatMul_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_5"
op: "Sub"
input: "MatMul_21"
input: "add_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_6"
op: "Sub"
input: "MatMul_21"
input: "add_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_12"
op: "Mul"
input: "sub_5"
input: "sub_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_10/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_10"
op: "Sum"
input: "mul_12"
input: "Sum_10/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_11/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_11"
op: "Sum"
input: "Sum_10"
input: "Sum_11/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_17"
op: "RealDiv"
input: "Sum_11"
input: "Sum_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt"
op: "Sqrt"
input: "truediv_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_3/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_3/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}
, name: "strided_slice_3/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_3"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_3/stack"
input: "strided_slice_3/stack_1"
input: "strided_slice_3/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_4/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_4/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}
, name: "strided_slice_4/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_4"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_4/stack"
input: "strided_slice_4/stack_1"
input: "strided_slice_4/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_5/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_5/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}
, name: "strided_slice_5/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_5"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_5/stack"
input: "strided_slice_5/stack_1"
input: "strided_slice_5/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_9"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_12"
op: "Sum"
input: "strided_slice_5"
input: "Const_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_52/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_52"
op: "Reshape"
input: "strided_slice_5"
input: "Reshape_52/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_3"
op: "Diag"
input: "Reshape_52"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_22"
op: "MatMul"
input: "Diag_3"
input: "strided_slice_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_19/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_19"
op: "Add"
input: "MatMul_22"
input: "add_19/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_13/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_13"
op: "Sum"
input: "add_19"
input: "Sum_13/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_18"
op: "RealDiv"
input: "Sum_13"
input: "Sum_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_7"
op: "Sub"
input: "strided_slice_4"
input: "truediv_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_10"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_14"
op: "Sum"
input: "strided_slice_5"
input: "Const_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_53/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_53"
op: "Reshape"
input: "strided_slice_5"
input: "Reshape_53/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_4"
op: "Diag"
input: "Reshape_53"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_23"
op: "MatMul"
input: "Diag_4"
input: "strided_slice_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_20/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_20"
op: "Add"
input: "MatMul_23"
input: "add_20/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_15/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_15"
op: "Sum"
input: "add_20"
input: "Sum_15/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_19"
op: "RealDiv"
input: "Sum_15"
input: "Sum_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_8"
op: "Sub"
input: "strided_slice_3"
input: "truediv_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_1"
op: "StopGradient"
input: "sub_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_11"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_16"
op: "Sum"
input: "strided_slice_5"
input: "Const_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_54/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_54"
op: "Reshape"
input: "strided_slice_5"
input: "Reshape_54/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_5"
op: "Diag"
input: "Reshape_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_24"
op: "MatMul"
input: "Diag_5"
input: "StopGradient_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_21/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_21"
op: "Add"
input: "MatMul_24"
input: "add_21/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_25"
op: "MatMul"
input: "Diag_5"
input: "sub_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_22/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_22"
op: "Add"
input: "MatMul_25"
input: "add_22/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_17/Rank"
op: "Rank"
input: "add_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_17/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_17/sub"
op: "Sub"
input: "transpose_17/Rank"
input: "transpose_17/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_17/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_17/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_17/Range"
op: "Range"
input: "transpose_17/Range/start"
input: "transpose_17/Rank"
input: "transpose_17/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_17/sub_1"
op: "Sub"
input: "transpose_17/sub"
input: "transpose_17/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_17"
op: "Transpose"
input: "add_21"
input: "transpose_17/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_26"
op: "MatMul"
input: "transpose_17"
input: "add_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_1"
op: "Svd"
input: "MatMul_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_1:2"
input: "adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_12"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_13"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_2"
op: "MatrixDeterminant"
input: "Svd_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_3"
op: "MatrixDeterminant"
input: "adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_13"
op: "Mul"
input: "MatrixDeterminant_2"
input: "MatrixDeterminant_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_1/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_1"
op: "Less"
input: "mul_13"
input: "Less_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_1/Switch"
op: "Switch"
input: "Less_1"
input: "Less_1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_1/switch_t"
op: "Identity"
input: "cond_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_1/switch_f"
op: "Identity"
input: "cond_1/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_1/pred_id"
op: "Identity"
input: "Less_1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_1/mul/Switch"
op: "Switch"
input: "Svd_1"
input: "cond_1/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_1"
    }
  }
}
, name: "cond_1/mul/Switch_1"
op: "Switch"
input: "Const_12"
input: "cond_1/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_12"
    }
  }
}
, name: "cond_1/mul"
op: "Mul"
input: "cond_1/mul/Switch:1"
input: "cond_1/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_1/mul_1/Switch"
op: "Switch"
input: "Svd_1:1"
input: "cond_1/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_1"
    }
  }
}
, name: "cond_1/mul_1/Switch_1"
op: "Switch"
input: "Const_13"
input: "cond_1/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_13"
    }
  }
}
, name: "cond_1/mul_1"
op: "Mul"
input: "cond_1/mul_1/Switch:1"
input: "cond_1/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_1/Switch_1"
op: "Switch"
input: "Svd_1"
input: "cond_1/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_1"
    }
  }
}
, name: "cond_1/Switch_2"
op: "Switch"
input: "Svd_1:1"
input: "cond_1/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_1"
    }
  }
}
, name: "cond_1/Merge"
op: "Merge"
input: "cond_1/Switch_1"
input: "cond_1/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_1/Merge_1"
op: "Merge"
input: "cond_1/Switch_2"
input: "cond_1/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_27"
op: "MatMul"
input: "cond_1/Merge_1"
input: "adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_28"
op: "MatMul"
input: "add_21"
input: "MatMul_27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_9"
op: "Sub"
input: "MatMul_28"
input: "add_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_10"
op: "Sub"
input: "MatMul_28"
input: "add_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_14"
op: "Mul"
input: "sub_9"
input: "sub_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_17/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_17"
op: "Sum"
input: "mul_14"
input: "Sum_17/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_18/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_18"
op: "Sum"
input: "Sum_17"
input: "Sum_18/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_20"
op: "RealDiv"
input: "Sum_18"
input: "Sum_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_1"
op: "Sqrt"
input: "truediv_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_6/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}
, name: "strided_slice_6/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}
, name: "strided_slice_6/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_6"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_6/stack"
input: "strided_slice_6/stack_1"
input: "strided_slice_6/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_7/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}
, name: "strided_slice_7/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}
, name: "strided_slice_7/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_7"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_7/stack"
input: "strided_slice_7/stack_1"
input: "strided_slice_7/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_8/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}
, name: "strided_slice_8/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}
, name: "strided_slice_8/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_8"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_8/stack"
input: "strided_slice_8/stack_1"
input: "strided_slice_8/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_14"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_19"
op: "Sum"
input: "strided_slice_8"
input: "Const_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_55/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_55"
op: "Reshape"
input: "strided_slice_8"
input: "Reshape_55/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_6"
op: "Diag"
input: "Reshape_55"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_29"
op: "MatMul"
input: "Diag_6"
input: "strided_slice_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_23/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_23"
op: "Add"
input: "MatMul_29"
input: "add_23/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_20/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_20"
op: "Sum"
input: "add_23"
input: "Sum_20/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_21"
op: "RealDiv"
input: "Sum_20"
input: "Sum_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_11"
op: "Sub"
input: "strided_slice_7"
input: "truediv_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_15"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_21"
op: "Sum"
input: "strided_slice_8"
input: "Const_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_56/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_56"
op: "Reshape"
input: "strided_slice_8"
input: "Reshape_56/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_7"
op: "Diag"
input: "Reshape_56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_30"
op: "MatMul"
input: "Diag_7"
input: "strided_slice_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_24/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_24"
op: "Add"
input: "MatMul_30"
input: "add_24/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_22/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_22"
op: "Sum"
input: "add_24"
input: "Sum_22/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_22"
op: "RealDiv"
input: "Sum_22"
input: "Sum_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_12"
op: "Sub"
input: "strided_slice_6"
input: "truediv_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_2"
op: "StopGradient"
input: "sub_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_16"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_23"
op: "Sum"
input: "strided_slice_8"
input: "Const_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_57/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_57"
op: "Reshape"
input: "strided_slice_8"
input: "Reshape_57/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_8"
op: "Diag"
input: "Reshape_57"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_31"
op: "MatMul"
input: "Diag_8"
input: "StopGradient_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_25/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_25"
op: "Add"
input: "MatMul_31"
input: "add_25/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_32"
op: "MatMul"
input: "Diag_8"
input: "sub_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_26/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_26"
op: "Add"
input: "MatMul_32"
input: "add_26/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_18/Rank"
op: "Rank"
input: "add_25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_18/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_18/sub"
op: "Sub"
input: "transpose_18/Rank"
input: "transpose_18/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_18/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_18/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_18/Range"
op: "Range"
input: "transpose_18/Range/start"
input: "transpose_18/Rank"
input: "transpose_18/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_18/sub_1"
op: "Sub"
input: "transpose_18/sub"
input: "transpose_18/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_18"
op: "Transpose"
input: "add_25"
input: "transpose_18/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_33"
op: "MatMul"
input: "transpose_18"
input: "add_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_2"
op: "Svd"
input: "MatMul_33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_2/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_2/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_2:2"
input: "adjoint_2/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_17"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_18"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_4"
op: "MatrixDeterminant"
input: "Svd_2:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_5"
op: "MatrixDeterminant"
input: "adjoint_2/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_15"
op: "Mul"
input: "MatrixDeterminant_4"
input: "MatrixDeterminant_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_2/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_2"
op: "Less"
input: "mul_15"
input: "Less_2/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_2/Switch"
op: "Switch"
input: "Less_2"
input: "Less_2"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_2/switch_t"
op: "Identity"
input: "cond_2/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_2/switch_f"
op: "Identity"
input: "cond_2/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_2/pred_id"
op: "Identity"
input: "Less_2"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_2/mul/Switch"
op: "Switch"
input: "Svd_2"
input: "cond_2/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_2"
    }
  }
}
, name: "cond_2/mul/Switch_1"
op: "Switch"
input: "Const_17"
input: "cond_2/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_17"
    }
  }
}
, name: "cond_2/mul"
op: "Mul"
input: "cond_2/mul/Switch:1"
input: "cond_2/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_2/mul_1/Switch"
op: "Switch"
input: "Svd_2:1"
input: "cond_2/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_2"
    }
  }
}
, name: "cond_2/mul_1/Switch_1"
op: "Switch"
input: "Const_18"
input: "cond_2/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_18"
    }
  }
}
, name: "cond_2/mul_1"
op: "Mul"
input: "cond_2/mul_1/Switch:1"
input: "cond_2/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_2/Switch_1"
op: "Switch"
input: "Svd_2"
input: "cond_2/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_2"
    }
  }
}
, name: "cond_2/Switch_2"
op: "Switch"
input: "Svd_2:1"
input: "cond_2/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_2"
    }
  }
}
, name: "cond_2/Merge"
op: "Merge"
input: "cond_2/Switch_1"
input: "cond_2/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_2/Merge_1"
op: "Merge"
input: "cond_2/Switch_2"
input: "cond_2/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_34"
op: "MatMul"
input: "cond_2/Merge_1"
input: "adjoint_2/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_35"
op: "MatMul"
input: "add_25"
input: "MatMul_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_13"
op: "Sub"
input: "MatMul_35"
input: "add_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_14"
op: "Sub"
input: "MatMul_35"
input: "add_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_16"
op: "Mul"
input: "sub_13"
input: "sub_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_24/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_24"
op: "Sum"
input: "mul_16"
input: "Sum_24/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_25/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_25"
op: "Sum"
input: "Sum_24"
input: "Sum_25/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_23"
op: "RealDiv"
input: "Sum_25"
input: "Sum_23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_2"
op: "Sqrt"
input: "truediv_23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_9/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}
, name: "strided_slice_9/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 4
    }
  }
}
, name: "strided_slice_9/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_9"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_9/stack"
input: "strided_slice_9/stack_1"
input: "strided_slice_9/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_10/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}
, name: "strided_slice_10/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 4
    }
  }
}
, name: "strided_slice_10/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_10"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_10/stack"
input: "strided_slice_10/stack_1"
input: "strided_slice_10/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_11/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 3
    }
  }
}
, name: "strided_slice_11/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 4
    }
  }
}
, name: "strided_slice_11/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_11"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_11/stack"
input: "strided_slice_11/stack_1"
input: "strided_slice_11/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_19"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_26"
op: "Sum"
input: "strided_slice_11"
input: "Const_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_58/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_58"
op: "Reshape"
input: "strided_slice_11"
input: "Reshape_58/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_9"
op: "Diag"
input: "Reshape_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_36"
op: "MatMul"
input: "Diag_9"
input: "strided_slice_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_27/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_27"
op: "Add"
input: "MatMul_36"
input: "add_27/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_27/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_27"
op: "Sum"
input: "add_27"
input: "Sum_27/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_24"
op: "RealDiv"
input: "Sum_27"
input: "Sum_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_15"
op: "Sub"
input: "strided_slice_10"
input: "truediv_24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_20"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_28"
op: "Sum"
input: "strided_slice_11"
input: "Const_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_59/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_59"
op: "Reshape"
input: "strided_slice_11"
input: "Reshape_59/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_10"
op: "Diag"
input: "Reshape_59"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_37"
op: "MatMul"
input: "Diag_10"
input: "strided_slice_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_28/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_28"
op: "Add"
input: "MatMul_37"
input: "add_28/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_29/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_29"
op: "Sum"
input: "add_28"
input: "Sum_29/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_25"
op: "RealDiv"
input: "Sum_29"
input: "Sum_28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_16"
op: "Sub"
input: "strided_slice_9"
input: "truediv_25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_3"
op: "StopGradient"
input: "sub_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_21"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_30"
op: "Sum"
input: "strided_slice_11"
input: "Const_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_60/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_60"
op: "Reshape"
input: "strided_slice_11"
input: "Reshape_60/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_11"
op: "Diag"
input: "Reshape_60"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_38"
op: "MatMul"
input: "Diag_11"
input: "StopGradient_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_29/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_29"
op: "Add"
input: "MatMul_38"
input: "add_29/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_39"
op: "MatMul"
input: "Diag_11"
input: "sub_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_30/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_30"
op: "Add"
input: "MatMul_39"
input: "add_30/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_19/Rank"
op: "Rank"
input: "add_29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_19/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_19/sub"
op: "Sub"
input: "transpose_19/Rank"
input: "transpose_19/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_19/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_19/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_19/Range"
op: "Range"
input: "transpose_19/Range/start"
input: "transpose_19/Rank"
input: "transpose_19/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_19/sub_1"
op: "Sub"
input: "transpose_19/sub"
input: "transpose_19/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_19"
op: "Transpose"
input: "add_29"
input: "transpose_19/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_40"
op: "MatMul"
input: "transpose_19"
input: "add_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_3"
op: "Svd"
input: "MatMul_40"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_3/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_3/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_3:2"
input: "adjoint_3/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_22"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_23"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_6"
op: "MatrixDeterminant"
input: "Svd_3:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_7"
op: "MatrixDeterminant"
input: "adjoint_3/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_17"
op: "Mul"
input: "MatrixDeterminant_6"
input: "MatrixDeterminant_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_3/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_3"
op: "Less"
input: "mul_17"
input: "Less_3/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_3/Switch"
op: "Switch"
input: "Less_3"
input: "Less_3"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_3/switch_t"
op: "Identity"
input: "cond_3/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_3/switch_f"
op: "Identity"
input: "cond_3/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_3/pred_id"
op: "Identity"
input: "Less_3"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_3/mul/Switch"
op: "Switch"
input: "Svd_3"
input: "cond_3/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_3"
    }
  }
}
, name: "cond_3/mul/Switch_1"
op: "Switch"
input: "Const_22"
input: "cond_3/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_22"
    }
  }
}
, name: "cond_3/mul"
op: "Mul"
input: "cond_3/mul/Switch:1"
input: "cond_3/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_3/mul_1/Switch"
op: "Switch"
input: "Svd_3:1"
input: "cond_3/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_3"
    }
  }
}
, name: "cond_3/mul_1/Switch_1"
op: "Switch"
input: "Const_23"
input: "cond_3/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_23"
    }
  }
}
, name: "cond_3/mul_1"
op: "Mul"
input: "cond_3/mul_1/Switch:1"
input: "cond_3/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_3/Switch_1"
op: "Switch"
input: "Svd_3"
input: "cond_3/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_3"
    }
  }
}
, name: "cond_3/Switch_2"
op: "Switch"
input: "Svd_3:1"
input: "cond_3/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_3"
    }
  }
}
, name: "cond_3/Merge"
op: "Merge"
input: "cond_3/Switch_1"
input: "cond_3/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_3/Merge_1"
op: "Merge"
input: "cond_3/Switch_2"
input: "cond_3/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_41"
op: "MatMul"
input: "cond_3/Merge_1"
input: "adjoint_3/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_42"
op: "MatMul"
input: "add_29"
input: "MatMul_41"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_17"
op: "Sub"
input: "MatMul_42"
input: "add_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_18"
op: "Sub"
input: "MatMul_42"
input: "add_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_18"
op: "Mul"
input: "sub_17"
input: "sub_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_31/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_31"
op: "Sum"
input: "mul_18"
input: "Sum_31/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_32/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_32"
op: "Sum"
input: "Sum_31"
input: "Sum_32/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_26"
op: "RealDiv"
input: "Sum_32"
input: "Sum_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_3"
op: "Sqrt"
input: "truediv_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_12/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 4
    }
  }
}
, name: "strided_slice_12/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 5
    }
  }
}
, name: "strided_slice_12/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_12"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_12/stack"
input: "strided_slice_12/stack_1"
input: "strided_slice_12/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_13/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 4
    }
  }
}
, name: "strided_slice_13/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 5
    }
  }
}
, name: "strided_slice_13/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_13"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_13/stack"
input: "strided_slice_13/stack_1"
input: "strided_slice_13/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_14/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 4
    }
  }
}
, name: "strided_slice_14/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 5
    }
  }
}
, name: "strided_slice_14/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_14"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_14/stack"
input: "strided_slice_14/stack_1"
input: "strided_slice_14/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_24"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_33"
op: "Sum"
input: "strided_slice_14"
input: "Const_24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_61/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_61"
op: "Reshape"
input: "strided_slice_14"
input: "Reshape_61/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_12"
op: "Diag"
input: "Reshape_61"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_43"
op: "MatMul"
input: "Diag_12"
input: "strided_slice_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_31/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_31"
op: "Add"
input: "MatMul_43"
input: "add_31/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_34/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_34"
op: "Sum"
input: "add_31"
input: "Sum_34/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_27"
op: "RealDiv"
input: "Sum_34"
input: "Sum_33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_19"
op: "Sub"
input: "strided_slice_13"
input: "truediv_27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_25"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_35"
op: "Sum"
input: "strided_slice_14"
input: "Const_25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_62/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_62"
op: "Reshape"
input: "strided_slice_14"
input: "Reshape_62/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_13"
op: "Diag"
input: "Reshape_62"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_44"
op: "MatMul"
input: "Diag_13"
input: "strided_slice_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_32/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_32"
op: "Add"
input: "MatMul_44"
input: "add_32/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_36/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_36"
op: "Sum"
input: "add_32"
input: "Sum_36/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_28"
op: "RealDiv"
input: "Sum_36"
input: "Sum_35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_20"
op: "Sub"
input: "strided_slice_12"
input: "truediv_28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_4"
op: "StopGradient"
input: "sub_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_26"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_37"
op: "Sum"
input: "strided_slice_14"
input: "Const_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_63/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_63"
op: "Reshape"
input: "strided_slice_14"
input: "Reshape_63/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_14"
op: "Diag"
input: "Reshape_63"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_45"
op: "MatMul"
input: "Diag_14"
input: "StopGradient_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_33/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_33"
op: "Add"
input: "MatMul_45"
input: "add_33/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_46"
op: "MatMul"
input: "Diag_14"
input: "sub_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_34/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_34"
op: "Add"
input: "MatMul_46"
input: "add_34/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_20/Rank"
op: "Rank"
input: "add_33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_20/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_20/sub"
op: "Sub"
input: "transpose_20/Rank"
input: "transpose_20/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_20/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_20/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_20/Range"
op: "Range"
input: "transpose_20/Range/start"
input: "transpose_20/Rank"
input: "transpose_20/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_20/sub_1"
op: "Sub"
input: "transpose_20/sub"
input: "transpose_20/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_20"
op: "Transpose"
input: "add_33"
input: "transpose_20/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_47"
op: "MatMul"
input: "transpose_20"
input: "add_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_4"
op: "Svd"
input: "MatMul_47"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_4/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_4/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_4:2"
input: "adjoint_4/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_27"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_28"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_8"
op: "MatrixDeterminant"
input: "Svd_4:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_9"
op: "MatrixDeterminant"
input: "adjoint_4/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_19"
op: "Mul"
input: "MatrixDeterminant_8"
input: "MatrixDeterminant_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_4/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_4"
op: "Less"
input: "mul_19"
input: "Less_4/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_4/Switch"
op: "Switch"
input: "Less_4"
input: "Less_4"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_4/switch_t"
op: "Identity"
input: "cond_4/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_4/switch_f"
op: "Identity"
input: "cond_4/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_4/pred_id"
op: "Identity"
input: "Less_4"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_4/mul/Switch"
op: "Switch"
input: "Svd_4"
input: "cond_4/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_4"
    }
  }
}
, name: "cond_4/mul/Switch_1"
op: "Switch"
input: "Const_27"
input: "cond_4/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_27"
    }
  }
}
, name: "cond_4/mul"
op: "Mul"
input: "cond_4/mul/Switch:1"
input: "cond_4/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_4/mul_1/Switch"
op: "Switch"
input: "Svd_4:1"
input: "cond_4/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_4"
    }
  }
}
, name: "cond_4/mul_1/Switch_1"
op: "Switch"
input: "Const_28"
input: "cond_4/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_28"
    }
  }
}
, name: "cond_4/mul_1"
op: "Mul"
input: "cond_4/mul_1/Switch:1"
input: "cond_4/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_4/Switch_1"
op: "Switch"
input: "Svd_4"
input: "cond_4/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_4"
    }
  }
}
, name: "cond_4/Switch_2"
op: "Switch"
input: "Svd_4:1"
input: "cond_4/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_4"
    }
  }
}
, name: "cond_4/Merge"
op: "Merge"
input: "cond_4/Switch_1"
input: "cond_4/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_4/Merge_1"
op: "Merge"
input: "cond_4/Switch_2"
input: "cond_4/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_48"
op: "MatMul"
input: "cond_4/Merge_1"
input: "adjoint_4/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_49"
op: "MatMul"
input: "add_33"
input: "MatMul_48"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_21"
op: "Sub"
input: "MatMul_49"
input: "add_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_22"
op: "Sub"
input: "MatMul_49"
input: "add_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_20"
op: "Mul"
input: "sub_21"
input: "sub_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_38/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_38"
op: "Sum"
input: "mul_20"
input: "Sum_38/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_39/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_39"
op: "Sum"
input: "Sum_38"
input: "Sum_39/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_29"
op: "RealDiv"
input: "Sum_39"
input: "Sum_37"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_4"
op: "Sqrt"
input: "truediv_29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_15/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 5
    }
  }
}
, name: "strided_slice_15/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 6
    }
  }
}
, name: "strided_slice_15/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_15"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_15/stack"
input: "strided_slice_15/stack_1"
input: "strided_slice_15/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_16/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 5
    }
  }
}
, name: "strided_slice_16/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 6
    }
  }
}
, name: "strided_slice_16/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_16"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_16/stack"
input: "strided_slice_16/stack_1"
input: "strided_slice_16/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_17/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 5
    }
  }
}
, name: "strided_slice_17/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 6
    }
  }
}
, name: "strided_slice_17/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_17"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_17/stack"
input: "strided_slice_17/stack_1"
input: "strided_slice_17/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_29"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_40"
op: "Sum"
input: "strided_slice_17"
input: "Const_29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_64/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_64"
op: "Reshape"
input: "strided_slice_17"
input: "Reshape_64/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_15"
op: "Diag"
input: "Reshape_64"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_50"
op: "MatMul"
input: "Diag_15"
input: "strided_slice_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_35/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_35"
op: "Add"
input: "MatMul_50"
input: "add_35/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_41/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_41"
op: "Sum"
input: "add_35"
input: "Sum_41/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_30"
op: "RealDiv"
input: "Sum_41"
input: "Sum_40"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_23"
op: "Sub"
input: "strided_slice_16"
input: "truediv_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_30"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_42"
op: "Sum"
input: "strided_slice_17"
input: "Const_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_65/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_65"
op: "Reshape"
input: "strided_slice_17"
input: "Reshape_65/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_16"
op: "Diag"
input: "Reshape_65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_51"
op: "MatMul"
input: "Diag_16"
input: "strided_slice_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_36/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_36"
op: "Add"
input: "MatMul_51"
input: "add_36/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_43/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_43"
op: "Sum"
input: "add_36"
input: "Sum_43/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_31"
op: "RealDiv"
input: "Sum_43"
input: "Sum_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_24"
op: "Sub"
input: "strided_slice_15"
input: "truediv_31"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_5"
op: "StopGradient"
input: "sub_23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_31"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_44"
op: "Sum"
input: "strided_slice_17"
input: "Const_31"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_66/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_66"
op: "Reshape"
input: "strided_slice_17"
input: "Reshape_66/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_17"
op: "Diag"
input: "Reshape_66"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_52"
op: "MatMul"
input: "Diag_17"
input: "StopGradient_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_37/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_37"
op: "Add"
input: "MatMul_52"
input: "add_37/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_53"
op: "MatMul"
input: "Diag_17"
input: "sub_24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_38/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_38"
op: "Add"
input: "MatMul_53"
input: "add_38/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_21/Rank"
op: "Rank"
input: "add_37"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_21/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_21/sub"
op: "Sub"
input: "transpose_21/Rank"
input: "transpose_21/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_21/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_21/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_21/Range"
op: "Range"
input: "transpose_21/Range/start"
input: "transpose_21/Rank"
input: "transpose_21/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_21/sub_1"
op: "Sub"
input: "transpose_21/sub"
input: "transpose_21/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_21"
op: "Transpose"
input: "add_37"
input: "transpose_21/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_54"
op: "MatMul"
input: "transpose_21"
input: "add_38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_5"
op: "Svd"
input: "MatMul_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_5/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_5/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_5:2"
input: "adjoint_5/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_32"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_33"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_10"
op: "MatrixDeterminant"
input: "Svd_5:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_11"
op: "MatrixDeterminant"
input: "adjoint_5/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_21"
op: "Mul"
input: "MatrixDeterminant_10"
input: "MatrixDeterminant_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_5/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_5"
op: "Less"
input: "mul_21"
input: "Less_5/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_5/Switch"
op: "Switch"
input: "Less_5"
input: "Less_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_5/switch_t"
op: "Identity"
input: "cond_5/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_5/switch_f"
op: "Identity"
input: "cond_5/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_5/pred_id"
op: "Identity"
input: "Less_5"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_5/mul/Switch"
op: "Switch"
input: "Svd_5"
input: "cond_5/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_5"
    }
  }
}
, name: "cond_5/mul/Switch_1"
op: "Switch"
input: "Const_32"
input: "cond_5/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_32"
    }
  }
}
, name: "cond_5/mul"
op: "Mul"
input: "cond_5/mul/Switch:1"
input: "cond_5/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_5/mul_1/Switch"
op: "Switch"
input: "Svd_5:1"
input: "cond_5/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_5"
    }
  }
}
, name: "cond_5/mul_1/Switch_1"
op: "Switch"
input: "Const_33"
input: "cond_5/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_33"
    }
  }
}
, name: "cond_5/mul_1"
op: "Mul"
input: "cond_5/mul_1/Switch:1"
input: "cond_5/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_5/Switch_1"
op: "Switch"
input: "Svd_5"
input: "cond_5/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_5"
    }
  }
}
, name: "cond_5/Switch_2"
op: "Switch"
input: "Svd_5:1"
input: "cond_5/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_5"
    }
  }
}
, name: "cond_5/Merge"
op: "Merge"
input: "cond_5/Switch_1"
input: "cond_5/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_5/Merge_1"
op: "Merge"
input: "cond_5/Switch_2"
input: "cond_5/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_55"
op: "MatMul"
input: "cond_5/Merge_1"
input: "adjoint_5/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_56"
op: "MatMul"
input: "add_37"
input: "MatMul_55"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_25"
op: "Sub"
input: "MatMul_56"
input: "add_38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_26"
op: "Sub"
input: "MatMul_56"
input: "add_38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_22"
op: "Mul"
input: "sub_25"
input: "sub_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_45/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_45"
op: "Sum"
input: "mul_22"
input: "Sum_45/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_46/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_46"
op: "Sum"
input: "Sum_45"
input: "Sum_46/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_32"
op: "RealDiv"
input: "Sum_46"
input: "Sum_44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_5"
op: "Sqrt"
input: "truediv_32"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_18/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 6
    }
  }
}
, name: "strided_slice_18/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 7
    }
  }
}
, name: "strided_slice_18/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_18"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_18/stack"
input: "strided_slice_18/stack_1"
input: "strided_slice_18/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_19/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 6
    }
  }
}
, name: "strided_slice_19/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 7
    }
  }
}
, name: "strided_slice_19/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_19"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_19/stack"
input: "strided_slice_19/stack_1"
input: "strided_slice_19/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_20/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 6
    }
  }
}
, name: "strided_slice_20/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 7
    }
  }
}
, name: "strided_slice_20/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_20"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_20/stack"
input: "strided_slice_20/stack_1"
input: "strided_slice_20/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_34"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_47"
op: "Sum"
input: "strided_slice_20"
input: "Const_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_67/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_67"
op: "Reshape"
input: "strided_slice_20"
input: "Reshape_67/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_18"
op: "Diag"
input: "Reshape_67"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_57"
op: "MatMul"
input: "Diag_18"
input: "strided_slice_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_39/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_39"
op: "Add"
input: "MatMul_57"
input: "add_39/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_48/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_48"
op: "Sum"
input: "add_39"
input: "Sum_48/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_33"
op: "RealDiv"
input: "Sum_48"
input: "Sum_47"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_27"
op: "Sub"
input: "strided_slice_19"
input: "truediv_33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_35"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_49"
op: "Sum"
input: "strided_slice_20"
input: "Const_35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_68/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_68"
op: "Reshape"
input: "strided_slice_20"
input: "Reshape_68/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_19"
op: "Diag"
input: "Reshape_68"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_58"
op: "MatMul"
input: "Diag_19"
input: "strided_slice_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_40/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_40"
op: "Add"
input: "MatMul_58"
input: "add_40/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_50/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_50"
op: "Sum"
input: "add_40"
input: "Sum_50/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_34"
op: "RealDiv"
input: "Sum_50"
input: "Sum_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_28"
op: "Sub"
input: "strided_slice_18"
input: "truediv_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_6"
op: "StopGradient"
input: "sub_27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_36"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_51"
op: "Sum"
input: "strided_slice_20"
input: "Const_36"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_69/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_69"
op: "Reshape"
input: "strided_slice_20"
input: "Reshape_69/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_20"
op: "Diag"
input: "Reshape_69"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_59"
op: "MatMul"
input: "Diag_20"
input: "StopGradient_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_41/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_41"
op: "Add"
input: "MatMul_59"
input: "add_41/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_60"
op: "MatMul"
input: "Diag_20"
input: "sub_28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_42/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_42"
op: "Add"
input: "MatMul_60"
input: "add_42/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_22/Rank"
op: "Rank"
input: "add_41"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_22/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_22/sub"
op: "Sub"
input: "transpose_22/Rank"
input: "transpose_22/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_22/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_22/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_22/Range"
op: "Range"
input: "transpose_22/Range/start"
input: "transpose_22/Rank"
input: "transpose_22/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_22/sub_1"
op: "Sub"
input: "transpose_22/sub"
input: "transpose_22/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_22"
op: "Transpose"
input: "add_41"
input: "transpose_22/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_61"
op: "MatMul"
input: "transpose_22"
input: "add_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_6"
op: "Svd"
input: "MatMul_61"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_6/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_6/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_6:2"
input: "adjoint_6/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_37"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_38"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_12"
op: "MatrixDeterminant"
input: "Svd_6:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_13"
op: "MatrixDeterminant"
input: "adjoint_6/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_23"
op: "Mul"
input: "MatrixDeterminant_12"
input: "MatrixDeterminant_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_6/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_6"
op: "Less"
input: "mul_23"
input: "Less_6/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_6/Switch"
op: "Switch"
input: "Less_6"
input: "Less_6"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_6/switch_t"
op: "Identity"
input: "cond_6/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_6/switch_f"
op: "Identity"
input: "cond_6/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_6/pred_id"
op: "Identity"
input: "Less_6"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_6/mul/Switch"
op: "Switch"
input: "Svd_6"
input: "cond_6/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_6"
    }
  }
}
, name: "cond_6/mul/Switch_1"
op: "Switch"
input: "Const_37"
input: "cond_6/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_37"
    }
  }
}
, name: "cond_6/mul"
op: "Mul"
input: "cond_6/mul/Switch:1"
input: "cond_6/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_6/mul_1/Switch"
op: "Switch"
input: "Svd_6:1"
input: "cond_6/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_6"
    }
  }
}
, name: "cond_6/mul_1/Switch_1"
op: "Switch"
input: "Const_38"
input: "cond_6/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_38"
    }
  }
}
, name: "cond_6/mul_1"
op: "Mul"
input: "cond_6/mul_1/Switch:1"
input: "cond_6/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_6/Switch_1"
op: "Switch"
input: "Svd_6"
input: "cond_6/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_6"
    }
  }
}
, name: "cond_6/Switch_2"
op: "Switch"
input: "Svd_6:1"
input: "cond_6/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_6"
    }
  }
}
, name: "cond_6/Merge"
op: "Merge"
input: "cond_6/Switch_1"
input: "cond_6/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_6/Merge_1"
op: "Merge"
input: "cond_6/Switch_2"
input: "cond_6/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_62"
op: "MatMul"
input: "cond_6/Merge_1"
input: "adjoint_6/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_63"
op: "MatMul"
input: "add_41"
input: "MatMul_62"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_29"
op: "Sub"
input: "MatMul_63"
input: "add_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_30"
op: "Sub"
input: "MatMul_63"
input: "add_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_24"
op: "Mul"
input: "sub_29"
input: "sub_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_52/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_52"
op: "Sum"
input: "mul_24"
input: "Sum_52/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_53/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_53"
op: "Sum"
input: "Sum_52"
input: "Sum_53/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_35"
op: "RealDiv"
input: "Sum_53"
input: "Sum_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_6"
op: "Sqrt"
input: "truediv_35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_21/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 7
    }
  }
}
, name: "strided_slice_21/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 8
    }
  }
}
, name: "strided_slice_21/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_21"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_21/stack"
input: "strided_slice_21/stack_1"
input: "strided_slice_21/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_22/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 7
    }
  }
}
, name: "strided_slice_22/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 8
    }
  }
}
, name: "strided_slice_22/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_22"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_22/stack"
input: "strided_slice_22/stack_1"
input: "strided_slice_22/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_23/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 7
    }
  }
}
, name: "strided_slice_23/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 8
    }
  }
}
, name: "strided_slice_23/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_23"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_23/stack"
input: "strided_slice_23/stack_1"
input: "strided_slice_23/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_39"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_54"
op: "Sum"
input: "strided_slice_23"
input: "Const_39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_70/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_70"
op: "Reshape"
input: "strided_slice_23"
input: "Reshape_70/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_21"
op: "Diag"
input: "Reshape_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_64"
op: "MatMul"
input: "Diag_21"
input: "strided_slice_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_43/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_43"
op: "Add"
input: "MatMul_64"
input: "add_43/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_55/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_55"
op: "Sum"
input: "add_43"
input: "Sum_55/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_36"
op: "RealDiv"
input: "Sum_55"
input: "Sum_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_31"
op: "Sub"
input: "strided_slice_22"
input: "truediv_36"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_40"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_56"
op: "Sum"
input: "strided_slice_23"
input: "Const_40"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_71/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_71"
op: "Reshape"
input: "strided_slice_23"
input: "Reshape_71/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_22"
op: "Diag"
input: "Reshape_71"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_65"
op: "MatMul"
input: "Diag_22"
input: "strided_slice_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_44/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_44"
op: "Add"
input: "MatMul_65"
input: "add_44/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_57/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_57"
op: "Sum"
input: "add_44"
input: "Sum_57/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_37"
op: "RealDiv"
input: "Sum_57"
input: "Sum_56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_32"
op: "Sub"
input: "strided_slice_21"
input: "truediv_37"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_7"
op: "StopGradient"
input: "sub_31"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_41"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_58"
op: "Sum"
input: "strided_slice_23"
input: "Const_41"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_72/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_72"
op: "Reshape"
input: "strided_slice_23"
input: "Reshape_72/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_23"
op: "Diag"
input: "Reshape_72"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_66"
op: "MatMul"
input: "Diag_23"
input: "StopGradient_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_45/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_45"
op: "Add"
input: "MatMul_66"
input: "add_45/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_67"
op: "MatMul"
input: "Diag_23"
input: "sub_32"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_46/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_46"
op: "Add"
input: "MatMul_67"
input: "add_46/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_23/Rank"
op: "Rank"
input: "add_45"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_23/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_23/sub"
op: "Sub"
input: "transpose_23/Rank"
input: "transpose_23/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_23/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_23/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_23/Range"
op: "Range"
input: "transpose_23/Range/start"
input: "transpose_23/Rank"
input: "transpose_23/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_23/sub_1"
op: "Sub"
input: "transpose_23/sub"
input: "transpose_23/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_23"
op: "Transpose"
input: "add_45"
input: "transpose_23/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_68"
op: "MatMul"
input: "transpose_23"
input: "add_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_7"
op: "Svd"
input: "MatMul_68"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_7/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_7/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_7:2"
input: "adjoint_7/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_42"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_43"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_14"
op: "MatrixDeterminant"
input: "Svd_7:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_15"
op: "MatrixDeterminant"
input: "adjoint_7/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_25"
op: "Mul"
input: "MatrixDeterminant_14"
input: "MatrixDeterminant_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_7/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_7"
op: "Less"
input: "mul_25"
input: "Less_7/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_7/Switch"
op: "Switch"
input: "Less_7"
input: "Less_7"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_7/switch_t"
op: "Identity"
input: "cond_7/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_7/switch_f"
op: "Identity"
input: "cond_7/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_7/pred_id"
op: "Identity"
input: "Less_7"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_7/mul/Switch"
op: "Switch"
input: "Svd_7"
input: "cond_7/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_7"
    }
  }
}
, name: "cond_7/mul/Switch_1"
op: "Switch"
input: "Const_42"
input: "cond_7/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_42"
    }
  }
}
, name: "cond_7/mul"
op: "Mul"
input: "cond_7/mul/Switch:1"
input: "cond_7/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_7/mul_1/Switch"
op: "Switch"
input: "Svd_7:1"
input: "cond_7/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_7"
    }
  }
}
, name: "cond_7/mul_1/Switch_1"
op: "Switch"
input: "Const_43"
input: "cond_7/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_43"
    }
  }
}
, name: "cond_7/mul_1"
op: "Mul"
input: "cond_7/mul_1/Switch:1"
input: "cond_7/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_7/Switch_1"
op: "Switch"
input: "Svd_7"
input: "cond_7/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_7"
    }
  }
}
, name: "cond_7/Switch_2"
op: "Switch"
input: "Svd_7:1"
input: "cond_7/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_7"
    }
  }
}
, name: "cond_7/Merge"
op: "Merge"
input: "cond_7/Switch_1"
input: "cond_7/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_7/Merge_1"
op: "Merge"
input: "cond_7/Switch_2"
input: "cond_7/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_69"
op: "MatMul"
input: "cond_7/Merge_1"
input: "adjoint_7/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_70"
op: "MatMul"
input: "add_45"
input: "MatMul_69"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_33"
op: "Sub"
input: "MatMul_70"
input: "add_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_34"
op: "Sub"
input: "MatMul_70"
input: "add_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_26"
op: "Mul"
input: "sub_33"
input: "sub_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_59/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_59"
op: "Sum"
input: "mul_26"
input: "Sum_59/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_60/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_60"
op: "Sum"
input: "Sum_59"
input: "Sum_60/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_38"
op: "RealDiv"
input: "Sum_60"
input: "Sum_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_7"
op: "Sqrt"
input: "truediv_38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_24/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 8
    }
  }
}
, name: "strided_slice_24/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "strided_slice_24/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_24"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_24/stack"
input: "strided_slice_24/stack_1"
input: "strided_slice_24/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_25/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 8
    }
  }
}
, name: "strided_slice_25/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "strided_slice_25/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_25"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_25/stack"
input: "strided_slice_25/stack_1"
input: "strided_slice_25/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_26/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 8
    }
  }
}
, name: "strided_slice_26/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "strided_slice_26/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_26"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_26/stack"
input: "strided_slice_26/stack_1"
input: "strided_slice_26/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_44"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_61"
op: "Sum"
input: "strided_slice_26"
input: "Const_44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_73/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_73"
op: "Reshape"
input: "strided_slice_26"
input: "Reshape_73/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_24"
op: "Diag"
input: "Reshape_73"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_71"
op: "MatMul"
input: "Diag_24"
input: "strided_slice_25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_47/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_47"
op: "Add"
input: "MatMul_71"
input: "add_47/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_62/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_62"
op: "Sum"
input: "add_47"
input: "Sum_62/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_39"
op: "RealDiv"
input: "Sum_62"
input: "Sum_61"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_35"
op: "Sub"
input: "strided_slice_25"
input: "truediv_39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_45"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_63"
op: "Sum"
input: "strided_slice_26"
input: "Const_45"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_74/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_74"
op: "Reshape"
input: "strided_slice_26"
input: "Reshape_74/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_25"
op: "Diag"
input: "Reshape_74"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_72"
op: "MatMul"
input: "Diag_25"
input: "strided_slice_24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_48/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_48"
op: "Add"
input: "MatMul_72"
input: "add_48/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_64/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_64"
op: "Sum"
input: "add_48"
input: "Sum_64/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_40"
op: "RealDiv"
input: "Sum_64"
input: "Sum_63"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_36"
op: "Sub"
input: "strided_slice_24"
input: "truediv_40"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_8"
op: "StopGradient"
input: "sub_35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_46"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_65"
op: "Sum"
input: "strided_slice_26"
input: "Const_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_75/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_75"
op: "Reshape"
input: "strided_slice_26"
input: "Reshape_75/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_26"
op: "Diag"
input: "Reshape_75"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_73"
op: "MatMul"
input: "Diag_26"
input: "StopGradient_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_49/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_49"
op: "Add"
input: "MatMul_73"
input: "add_49/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_74"
op: "MatMul"
input: "Diag_26"
input: "sub_36"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_50/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_50"
op: "Add"
input: "MatMul_74"
input: "add_50/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_24/Rank"
op: "Rank"
input: "add_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_24/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_24/sub"
op: "Sub"
input: "transpose_24/Rank"
input: "transpose_24/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_24/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_24/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_24/Range"
op: "Range"
input: "transpose_24/Range/start"
input: "transpose_24/Rank"
input: "transpose_24/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_24/sub_1"
op: "Sub"
input: "transpose_24/sub"
input: "transpose_24/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_24"
op: "Transpose"
input: "add_49"
input: "transpose_24/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_75"
op: "MatMul"
input: "transpose_24"
input: "add_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_8"
op: "Svd"
input: "MatMul_75"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_8/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_8/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_8:2"
input: "adjoint_8/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_47"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_48"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_16"
op: "MatrixDeterminant"
input: "Svd_8:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_17"
op: "MatrixDeterminant"
input: "adjoint_8/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_27"
op: "Mul"
input: "MatrixDeterminant_16"
input: "MatrixDeterminant_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_8/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_8"
op: "Less"
input: "mul_27"
input: "Less_8/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_8/Switch"
op: "Switch"
input: "Less_8"
input: "Less_8"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_8/switch_t"
op: "Identity"
input: "cond_8/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_8/switch_f"
op: "Identity"
input: "cond_8/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_8/pred_id"
op: "Identity"
input: "Less_8"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_8/mul/Switch"
op: "Switch"
input: "Svd_8"
input: "cond_8/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_8"
    }
  }
}
, name: "cond_8/mul/Switch_1"
op: "Switch"
input: "Const_47"
input: "cond_8/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_47"
    }
  }
}
, name: "cond_8/mul"
op: "Mul"
input: "cond_8/mul/Switch:1"
input: "cond_8/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_8/mul_1/Switch"
op: "Switch"
input: "Svd_8:1"
input: "cond_8/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_8"
    }
  }
}
, name: "cond_8/mul_1/Switch_1"
op: "Switch"
input: "Const_48"
input: "cond_8/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_48"
    }
  }
}
, name: "cond_8/mul_1"
op: "Mul"
input: "cond_8/mul_1/Switch:1"
input: "cond_8/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_8/Switch_1"
op: "Switch"
input: "Svd_8"
input: "cond_8/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_8"
    }
  }
}
, name: "cond_8/Switch_2"
op: "Switch"
input: "Svd_8:1"
input: "cond_8/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_8"
    }
  }
}
, name: "cond_8/Merge"
op: "Merge"
input: "cond_8/Switch_1"
input: "cond_8/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_8/Merge_1"
op: "Merge"
input: "cond_8/Switch_2"
input: "cond_8/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_76"
op: "MatMul"
input: "cond_8/Merge_1"
input: "adjoint_8/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_77"
op: "MatMul"
input: "add_49"
input: "MatMul_76"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_37"
op: "Sub"
input: "MatMul_77"
input: "add_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_38"
op: "Sub"
input: "MatMul_77"
input: "add_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_28"
op: "Mul"
input: "sub_37"
input: "sub_38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_66/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_66"
op: "Sum"
input: "mul_28"
input: "Sum_66/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_67/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_67"
op: "Sum"
input: "Sum_66"
input: "Sum_67/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_41"
op: "RealDiv"
input: "Sum_67"
input: "Sum_65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_8"
op: "Sqrt"
input: "truediv_41"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_27/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "strided_slice_27/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 10
    }
  }
}
, name: "strided_slice_27/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_27"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_27/stack"
input: "strided_slice_27/stack_1"
input: "strided_slice_27/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_28/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "strided_slice_28/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 10
    }
  }
}
, name: "strided_slice_28/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_28"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_28/stack"
input: "strided_slice_28/stack_1"
input: "strided_slice_28/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_29/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "strided_slice_29/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 10
    }
  }
}
, name: "strided_slice_29/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_29"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_29/stack"
input: "strided_slice_29/stack_1"
input: "strided_slice_29/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_49"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_68"
op: "Sum"
input: "strided_slice_29"
input: "Const_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_76/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_76"
op: "Reshape"
input: "strided_slice_29"
input: "Reshape_76/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_27"
op: "Diag"
input: "Reshape_76"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_78"
op: "MatMul"
input: "Diag_27"
input: "strided_slice_28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_51/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_51"
op: "Add"
input: "MatMul_78"
input: "add_51/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_69/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_69"
op: "Sum"
input: "add_51"
input: "Sum_69/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_42"
op: "RealDiv"
input: "Sum_69"
input: "Sum_68"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_39"
op: "Sub"
input: "strided_slice_28"
input: "truediv_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_50"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_70"
op: "Sum"
input: "strided_slice_29"
input: "Const_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_77/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_77"
op: "Reshape"
input: "strided_slice_29"
input: "Reshape_77/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_28"
op: "Diag"
input: "Reshape_77"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_79"
op: "MatMul"
input: "Diag_28"
input: "strided_slice_27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_52/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_52"
op: "Add"
input: "MatMul_79"
input: "add_52/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_71/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_71"
op: "Sum"
input: "add_52"
input: "Sum_71/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_43"
op: "RealDiv"
input: "Sum_71"
input: "Sum_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_40"
op: "Sub"
input: "strided_slice_27"
input: "truediv_43"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_9"
op: "StopGradient"
input: "sub_39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_51"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_72"
op: "Sum"
input: "strided_slice_29"
input: "Const_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_78/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_78"
op: "Reshape"
input: "strided_slice_29"
input: "Reshape_78/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_29"
op: "Diag"
input: "Reshape_78"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_80"
op: "MatMul"
input: "Diag_29"
input: "StopGradient_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_53/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_53"
op: "Add"
input: "MatMul_80"
input: "add_53/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_81"
op: "MatMul"
input: "Diag_29"
input: "sub_40"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_54/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_54"
op: "Add"
input: "MatMul_81"
input: "add_54/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_25/Rank"
op: "Rank"
input: "add_53"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_25/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_25/sub"
op: "Sub"
input: "transpose_25/Rank"
input: "transpose_25/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_25/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_25/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_25/Range"
op: "Range"
input: "transpose_25/Range/start"
input: "transpose_25/Rank"
input: "transpose_25/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_25/sub_1"
op: "Sub"
input: "transpose_25/sub"
input: "transpose_25/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_25"
op: "Transpose"
input: "add_53"
input: "transpose_25/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_82"
op: "MatMul"
input: "transpose_25"
input: "add_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_9"
op: "Svd"
input: "MatMul_82"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_9/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_9/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_9:2"
input: "adjoint_9/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_52"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_53"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_18"
op: "MatrixDeterminant"
input: "Svd_9:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_19"
op: "MatrixDeterminant"
input: "adjoint_9/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_29"
op: "Mul"
input: "MatrixDeterminant_18"
input: "MatrixDeterminant_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_9/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_9"
op: "Less"
input: "mul_29"
input: "Less_9/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_9/Switch"
op: "Switch"
input: "Less_9"
input: "Less_9"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_9/switch_t"
op: "Identity"
input: "cond_9/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_9/switch_f"
op: "Identity"
input: "cond_9/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_9/pred_id"
op: "Identity"
input: "Less_9"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_9/mul/Switch"
op: "Switch"
input: "Svd_9"
input: "cond_9/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_9"
    }
  }
}
, name: "cond_9/mul/Switch_1"
op: "Switch"
input: "Const_52"
input: "cond_9/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_52"
    }
  }
}
, name: "cond_9/mul"
op: "Mul"
input: "cond_9/mul/Switch:1"
input: "cond_9/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_9/mul_1/Switch"
op: "Switch"
input: "Svd_9:1"
input: "cond_9/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_9"
    }
  }
}
, name: "cond_9/mul_1/Switch_1"
op: "Switch"
input: "Const_53"
input: "cond_9/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_53"
    }
  }
}
, name: "cond_9/mul_1"
op: "Mul"
input: "cond_9/mul_1/Switch:1"
input: "cond_9/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_9/Switch_1"
op: "Switch"
input: "Svd_9"
input: "cond_9/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_9"
    }
  }
}
, name: "cond_9/Switch_2"
op: "Switch"
input: "Svd_9:1"
input: "cond_9/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_9"
    }
  }
}
, name: "cond_9/Merge"
op: "Merge"
input: "cond_9/Switch_1"
input: "cond_9/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_9/Merge_1"
op: "Merge"
input: "cond_9/Switch_2"
input: "cond_9/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_83"
op: "MatMul"
input: "cond_9/Merge_1"
input: "adjoint_9/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_84"
op: "MatMul"
input: "add_53"
input: "MatMul_83"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_41"
op: "Sub"
input: "MatMul_84"
input: "add_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_42"
op: "Sub"
input: "MatMul_84"
input: "add_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_30"
op: "Mul"
input: "sub_41"
input: "sub_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_73/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_73"
op: "Sum"
input: "mul_30"
input: "Sum_73/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_74/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_74"
op: "Sum"
input: "Sum_73"
input: "Sum_74/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_44"
op: "RealDiv"
input: "Sum_74"
input: "Sum_72"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_9"
op: "Sqrt"
input: "truediv_44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_30/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 10
    }
  }
}
, name: "strided_slice_30/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 11
    }
  }
}
, name: "strided_slice_30/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_30"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_30/stack"
input: "strided_slice_30/stack_1"
input: "strided_slice_30/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_31/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 10
    }
  }
}
, name: "strided_slice_31/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 11
    }
  }
}
, name: "strided_slice_31/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_31"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_31/stack"
input: "strided_slice_31/stack_1"
input: "strided_slice_31/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_32/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 10
    }
  }
}
, name: "strided_slice_32/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 11
    }
  }
}
, name: "strided_slice_32/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_32"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_32/stack"
input: "strided_slice_32/stack_1"
input: "strided_slice_32/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_54"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_75"
op: "Sum"
input: "strided_slice_32"
input: "Const_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_79/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_79"
op: "Reshape"
input: "strided_slice_32"
input: "Reshape_79/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_30"
op: "Diag"
input: "Reshape_79"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_85"
op: "MatMul"
input: "Diag_30"
input: "strided_slice_31"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_55/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_55"
op: "Add"
input: "MatMul_85"
input: "add_55/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_76/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_76"
op: "Sum"
input: "add_55"
input: "Sum_76/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_45"
op: "RealDiv"
input: "Sum_76"
input: "Sum_75"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_43"
op: "Sub"
input: "strided_slice_31"
input: "truediv_45"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_55"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_77"
op: "Sum"
input: "strided_slice_32"
input: "Const_55"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_80/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_80"
op: "Reshape"
input: "strided_slice_32"
input: "Reshape_80/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_31"
op: "Diag"
input: "Reshape_80"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_86"
op: "MatMul"
input: "Diag_31"
input: "strided_slice_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_56/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_56"
op: "Add"
input: "MatMul_86"
input: "add_56/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_78/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_78"
op: "Sum"
input: "add_56"
input: "Sum_78/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_46"
op: "RealDiv"
input: "Sum_78"
input: "Sum_77"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_44"
op: "Sub"
input: "strided_slice_30"
input: "truediv_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_10"
op: "StopGradient"
input: "sub_43"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_56"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_79"
op: "Sum"
input: "strided_slice_32"
input: "Const_56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_81/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_81"
op: "Reshape"
input: "strided_slice_32"
input: "Reshape_81/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_32"
op: "Diag"
input: "Reshape_81"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_87"
op: "MatMul"
input: "Diag_32"
input: "StopGradient_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_57/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_57"
op: "Add"
input: "MatMul_87"
input: "add_57/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_88"
op: "MatMul"
input: "Diag_32"
input: "sub_44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_58/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_58"
op: "Add"
input: "MatMul_88"
input: "add_58/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_26/Rank"
op: "Rank"
input: "add_57"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_26/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_26/sub"
op: "Sub"
input: "transpose_26/Rank"
input: "transpose_26/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_26/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_26/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_26/Range"
op: "Range"
input: "transpose_26/Range/start"
input: "transpose_26/Rank"
input: "transpose_26/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_26/sub_1"
op: "Sub"
input: "transpose_26/sub"
input: "transpose_26/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_26"
op: "Transpose"
input: "add_57"
input: "transpose_26/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_89"
op: "MatMul"
input: "transpose_26"
input: "add_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_10"
op: "Svd"
input: "MatMul_89"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_10/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_10/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_10:2"
input: "adjoint_10/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_57"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_58"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_20"
op: "MatrixDeterminant"
input: "Svd_10:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_21"
op: "MatrixDeterminant"
input: "adjoint_10/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_31"
op: "Mul"
input: "MatrixDeterminant_20"
input: "MatrixDeterminant_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_10/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_10"
op: "Less"
input: "mul_31"
input: "Less_10/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_10/Switch"
op: "Switch"
input: "Less_10"
input: "Less_10"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_10/switch_t"
op: "Identity"
input: "cond_10/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_10/switch_f"
op: "Identity"
input: "cond_10/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_10/pred_id"
op: "Identity"
input: "Less_10"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_10/mul/Switch"
op: "Switch"
input: "Svd_10"
input: "cond_10/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_10"
    }
  }
}
, name: "cond_10/mul/Switch_1"
op: "Switch"
input: "Const_57"
input: "cond_10/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_57"
    }
  }
}
, name: "cond_10/mul"
op: "Mul"
input: "cond_10/mul/Switch:1"
input: "cond_10/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_10/mul_1/Switch"
op: "Switch"
input: "Svd_10:1"
input: "cond_10/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_10"
    }
  }
}
, name: "cond_10/mul_1/Switch_1"
op: "Switch"
input: "Const_58"
input: "cond_10/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_58"
    }
  }
}
, name: "cond_10/mul_1"
op: "Mul"
input: "cond_10/mul_1/Switch:1"
input: "cond_10/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_10/Switch_1"
op: "Switch"
input: "Svd_10"
input: "cond_10/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_10"
    }
  }
}
, name: "cond_10/Switch_2"
op: "Switch"
input: "Svd_10:1"
input: "cond_10/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_10"
    }
  }
}
, name: "cond_10/Merge"
op: "Merge"
input: "cond_10/Switch_1"
input: "cond_10/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_10/Merge_1"
op: "Merge"
input: "cond_10/Switch_2"
input: "cond_10/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_90"
op: "MatMul"
input: "cond_10/Merge_1"
input: "adjoint_10/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_91"
op: "MatMul"
input: "add_57"
input: "MatMul_90"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_45"
op: "Sub"
input: "MatMul_91"
input: "add_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_46"
op: "Sub"
input: "MatMul_91"
input: "add_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_32"
op: "Mul"
input: "sub_45"
input: "sub_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_80/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_80"
op: "Sum"
input: "mul_32"
input: "Sum_80/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_81/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_81"
op: "Sum"
input: "Sum_80"
input: "Sum_81/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_47"
op: "RealDiv"
input: "Sum_81"
input: "Sum_79"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_10"
op: "Sqrt"
input: "truediv_47"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_33/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 11
    }
  }
}
, name: "strided_slice_33/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 12
    }
  }
}
, name: "strided_slice_33/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_33"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_33/stack"
input: "strided_slice_33/stack_1"
input: "strided_slice_33/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_34/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 11
    }
  }
}
, name: "strided_slice_34/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 12
    }
  }
}
, name: "strided_slice_34/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_34"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_34/stack"
input: "strided_slice_34/stack_1"
input: "strided_slice_34/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_35/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 11
    }
  }
}
, name: "strided_slice_35/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 12
    }
  }
}
, name: "strided_slice_35/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_35"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_35/stack"
input: "strided_slice_35/stack_1"
input: "strided_slice_35/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_59"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_82"
op: "Sum"
input: "strided_slice_35"
input: "Const_59"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_82/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_82"
op: "Reshape"
input: "strided_slice_35"
input: "Reshape_82/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_33"
op: "Diag"
input: "Reshape_82"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_92"
op: "MatMul"
input: "Diag_33"
input: "strided_slice_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_59/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_59"
op: "Add"
input: "MatMul_92"
input: "add_59/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_83/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_83"
op: "Sum"
input: "add_59"
input: "Sum_83/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_48"
op: "RealDiv"
input: "Sum_83"
input: "Sum_82"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_47"
op: "Sub"
input: "strided_slice_34"
input: "truediv_48"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_60"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_84"
op: "Sum"
input: "strided_slice_35"
input: "Const_60"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_83/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_83"
op: "Reshape"
input: "strided_slice_35"
input: "Reshape_83/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_34"
op: "Diag"
input: "Reshape_83"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_93"
op: "MatMul"
input: "Diag_34"
input: "strided_slice_33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_60/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_60"
op: "Add"
input: "MatMul_93"
input: "add_60/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_85/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_85"
op: "Sum"
input: "add_60"
input: "Sum_85/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_49"
op: "RealDiv"
input: "Sum_85"
input: "Sum_84"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_48"
op: "Sub"
input: "strided_slice_33"
input: "truediv_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_11"
op: "StopGradient"
input: "sub_47"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_61"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_86"
op: "Sum"
input: "strided_slice_35"
input: "Const_61"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_84/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_84"
op: "Reshape"
input: "strided_slice_35"
input: "Reshape_84/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_35"
op: "Diag"
input: "Reshape_84"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_94"
op: "MatMul"
input: "Diag_35"
input: "StopGradient_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_61/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_61"
op: "Add"
input: "MatMul_94"
input: "add_61/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_95"
op: "MatMul"
input: "Diag_35"
input: "sub_48"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_62/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_62"
op: "Add"
input: "MatMul_95"
input: "add_62/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_27/Rank"
op: "Rank"
input: "add_61"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_27/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_27/sub"
op: "Sub"
input: "transpose_27/Rank"
input: "transpose_27/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_27/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_27/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_27/Range"
op: "Range"
input: "transpose_27/Range/start"
input: "transpose_27/Rank"
input: "transpose_27/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_27/sub_1"
op: "Sub"
input: "transpose_27/sub"
input: "transpose_27/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_27"
op: "Transpose"
input: "add_61"
input: "transpose_27/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_96"
op: "MatMul"
input: "transpose_27"
input: "add_62"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_11"
op: "Svd"
input: "MatMul_96"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_11/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_11/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_11:2"
input: "adjoint_11/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_62"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_63"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_22"
op: "MatrixDeterminant"
input: "Svd_11:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_23"
op: "MatrixDeterminant"
input: "adjoint_11/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_33"
op: "Mul"
input: "MatrixDeterminant_22"
input: "MatrixDeterminant_23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_11/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_11"
op: "Less"
input: "mul_33"
input: "Less_11/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_11/Switch"
op: "Switch"
input: "Less_11"
input: "Less_11"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_11/switch_t"
op: "Identity"
input: "cond_11/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_11/switch_f"
op: "Identity"
input: "cond_11/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_11/pred_id"
op: "Identity"
input: "Less_11"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_11/mul/Switch"
op: "Switch"
input: "Svd_11"
input: "cond_11/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_11"
    }
  }
}
, name: "cond_11/mul/Switch_1"
op: "Switch"
input: "Const_62"
input: "cond_11/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_62"
    }
  }
}
, name: "cond_11/mul"
op: "Mul"
input: "cond_11/mul/Switch:1"
input: "cond_11/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_11/mul_1/Switch"
op: "Switch"
input: "Svd_11:1"
input: "cond_11/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_11"
    }
  }
}
, name: "cond_11/mul_1/Switch_1"
op: "Switch"
input: "Const_63"
input: "cond_11/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_63"
    }
  }
}
, name: "cond_11/mul_1"
op: "Mul"
input: "cond_11/mul_1/Switch:1"
input: "cond_11/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_11/Switch_1"
op: "Switch"
input: "Svd_11"
input: "cond_11/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_11"
    }
  }
}
, name: "cond_11/Switch_2"
op: "Switch"
input: "Svd_11:1"
input: "cond_11/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_11"
    }
  }
}
, name: "cond_11/Merge"
op: "Merge"
input: "cond_11/Switch_1"
input: "cond_11/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_11/Merge_1"
op: "Merge"
input: "cond_11/Switch_2"
input: "cond_11/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_97"
op: "MatMul"
input: "cond_11/Merge_1"
input: "adjoint_11/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_98"
op: "MatMul"
input: "add_61"
input: "MatMul_97"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_49"
op: "Sub"
input: "MatMul_98"
input: "add_62"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_50"
op: "Sub"
input: "MatMul_98"
input: "add_62"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_34"
op: "Mul"
input: "sub_49"
input: "sub_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_87/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_87"
op: "Sum"
input: "mul_34"
input: "Sum_87/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_88/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_88"
op: "Sum"
input: "Sum_87"
input: "Sum_88/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_50"
op: "RealDiv"
input: "Sum_88"
input: "Sum_86"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_11"
op: "Sqrt"
input: "truediv_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_36/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 12
    }
  }
}
, name: "strided_slice_36/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 13
    }
  }
}
, name: "strided_slice_36/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_36"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_36/stack"
input: "strided_slice_36/stack_1"
input: "strided_slice_36/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_37/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 12
    }
  }
}
, name: "strided_slice_37/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 13
    }
  }
}
, name: "strided_slice_37/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_37"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_37/stack"
input: "strided_slice_37/stack_1"
input: "strided_slice_37/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_38/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 12
    }
  }
}
, name: "strided_slice_38/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 13
    }
  }
}
, name: "strided_slice_38/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_38"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_38/stack"
input: "strided_slice_38/stack_1"
input: "strided_slice_38/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_64"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_89"
op: "Sum"
input: "strided_slice_38"
input: "Const_64"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_85/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_85"
op: "Reshape"
input: "strided_slice_38"
input: "Reshape_85/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_36"
op: "Diag"
input: "Reshape_85"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_99"
op: "MatMul"
input: "Diag_36"
input: "strided_slice_37"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_63/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_63"
op: "Add"
input: "MatMul_99"
input: "add_63/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_90/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_90"
op: "Sum"
input: "add_63"
input: "Sum_90/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_51"
op: "RealDiv"
input: "Sum_90"
input: "Sum_89"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_51"
op: "Sub"
input: "strided_slice_37"
input: "truediv_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_65"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_91"
op: "Sum"
input: "strided_slice_38"
input: "Const_65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_86/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_86"
op: "Reshape"
input: "strided_slice_38"
input: "Reshape_86/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_37"
op: "Diag"
input: "Reshape_86"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_100"
op: "MatMul"
input: "Diag_37"
input: "strided_slice_36"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_64/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_64"
op: "Add"
input: "MatMul_100"
input: "add_64/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_92/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_92"
op: "Sum"
input: "add_64"
input: "Sum_92/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_52"
op: "RealDiv"
input: "Sum_92"
input: "Sum_91"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_52"
op: "Sub"
input: "strided_slice_36"
input: "truediv_52"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_12"
op: "StopGradient"
input: "sub_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_66"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_93"
op: "Sum"
input: "strided_slice_38"
input: "Const_66"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_87/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_87"
op: "Reshape"
input: "strided_slice_38"
input: "Reshape_87/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_38"
op: "Diag"
input: "Reshape_87"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_101"
op: "MatMul"
input: "Diag_38"
input: "StopGradient_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_65/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_65"
op: "Add"
input: "MatMul_101"
input: "add_65/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_102"
op: "MatMul"
input: "Diag_38"
input: "sub_52"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_66/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_66"
op: "Add"
input: "MatMul_102"
input: "add_66/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_28/Rank"
op: "Rank"
input: "add_65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_28/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_28/sub"
op: "Sub"
input: "transpose_28/Rank"
input: "transpose_28/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_28/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_28/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_28/Range"
op: "Range"
input: "transpose_28/Range/start"
input: "transpose_28/Rank"
input: "transpose_28/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_28/sub_1"
op: "Sub"
input: "transpose_28/sub"
input: "transpose_28/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_28"
op: "Transpose"
input: "add_65"
input: "transpose_28/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_103"
op: "MatMul"
input: "transpose_28"
input: "add_66"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_12"
op: "Svd"
input: "MatMul_103"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_12/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_12/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_12:2"
input: "adjoint_12/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_67"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_68"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_24"
op: "MatrixDeterminant"
input: "Svd_12:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_25"
op: "MatrixDeterminant"
input: "adjoint_12/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_35"
op: "Mul"
input: "MatrixDeterminant_24"
input: "MatrixDeterminant_25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_12/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_12"
op: "Less"
input: "mul_35"
input: "Less_12/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_12/Switch"
op: "Switch"
input: "Less_12"
input: "Less_12"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_12/switch_t"
op: "Identity"
input: "cond_12/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_12/switch_f"
op: "Identity"
input: "cond_12/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_12/pred_id"
op: "Identity"
input: "Less_12"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_12/mul/Switch"
op: "Switch"
input: "Svd_12"
input: "cond_12/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_12"
    }
  }
}
, name: "cond_12/mul/Switch_1"
op: "Switch"
input: "Const_67"
input: "cond_12/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_67"
    }
  }
}
, name: "cond_12/mul"
op: "Mul"
input: "cond_12/mul/Switch:1"
input: "cond_12/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_12/mul_1/Switch"
op: "Switch"
input: "Svd_12:1"
input: "cond_12/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_12"
    }
  }
}
, name: "cond_12/mul_1/Switch_1"
op: "Switch"
input: "Const_68"
input: "cond_12/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_68"
    }
  }
}
, name: "cond_12/mul_1"
op: "Mul"
input: "cond_12/mul_1/Switch:1"
input: "cond_12/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_12/Switch_1"
op: "Switch"
input: "Svd_12"
input: "cond_12/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_12"
    }
  }
}
, name: "cond_12/Switch_2"
op: "Switch"
input: "Svd_12:1"
input: "cond_12/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_12"
    }
  }
}
, name: "cond_12/Merge"
op: "Merge"
input: "cond_12/Switch_1"
input: "cond_12/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_12/Merge_1"
op: "Merge"
input: "cond_12/Switch_2"
input: "cond_12/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_104"
op: "MatMul"
input: "cond_12/Merge_1"
input: "adjoint_12/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_105"
op: "MatMul"
input: "add_65"
input: "MatMul_104"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_53"
op: "Sub"
input: "MatMul_105"
input: "add_66"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_54"
op: "Sub"
input: "MatMul_105"
input: "add_66"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_36"
op: "Mul"
input: "sub_53"
input: "sub_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_94/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_94"
op: "Sum"
input: "mul_36"
input: "Sum_94/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_95/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_95"
op: "Sum"
input: "Sum_94"
input: "Sum_95/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_53"
op: "RealDiv"
input: "Sum_95"
input: "Sum_93"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_12"
op: "Sqrt"
input: "truediv_53"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_39/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 13
    }
  }
}
, name: "strided_slice_39/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 14
    }
  }
}
, name: "strided_slice_39/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_39"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_39/stack"
input: "strided_slice_39/stack_1"
input: "strided_slice_39/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_40/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 13
    }
  }
}
, name: "strided_slice_40/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 14
    }
  }
}
, name: "strided_slice_40/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_40"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_40/stack"
input: "strided_slice_40/stack_1"
input: "strided_slice_40/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_41/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 13
    }
  }
}
, name: "strided_slice_41/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 14
    }
  }
}
, name: "strided_slice_41/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_41"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_41/stack"
input: "strided_slice_41/stack_1"
input: "strided_slice_41/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_69"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_96"
op: "Sum"
input: "strided_slice_41"
input: "Const_69"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_88/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_88"
op: "Reshape"
input: "strided_slice_41"
input: "Reshape_88/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_39"
op: "Diag"
input: "Reshape_88"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_106"
op: "MatMul"
input: "Diag_39"
input: "strided_slice_40"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_67/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_67"
op: "Add"
input: "MatMul_106"
input: "add_67/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_97/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_97"
op: "Sum"
input: "add_67"
input: "Sum_97/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_54"
op: "RealDiv"
input: "Sum_97"
input: "Sum_96"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_55"
op: "Sub"
input: "strided_slice_40"
input: "truediv_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_70"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_98"
op: "Sum"
input: "strided_slice_41"
input: "Const_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_89/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_89"
op: "Reshape"
input: "strided_slice_41"
input: "Reshape_89/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_40"
op: "Diag"
input: "Reshape_89"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_107"
op: "MatMul"
input: "Diag_40"
input: "strided_slice_39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_68/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_68"
op: "Add"
input: "MatMul_107"
input: "add_68/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_99/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_99"
op: "Sum"
input: "add_68"
input: "Sum_99/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_55"
op: "RealDiv"
input: "Sum_99"
input: "Sum_98"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_56"
op: "Sub"
input: "strided_slice_39"
input: "truediv_55"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_13"
op: "StopGradient"
input: "sub_55"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_71"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_100"
op: "Sum"
input: "strided_slice_41"
input: "Const_71"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_90/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_90"
op: "Reshape"
input: "strided_slice_41"
input: "Reshape_90/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_41"
op: "Diag"
input: "Reshape_90"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_108"
op: "MatMul"
input: "Diag_41"
input: "StopGradient_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_69/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_69"
op: "Add"
input: "MatMul_108"
input: "add_69/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_109"
op: "MatMul"
input: "Diag_41"
input: "sub_56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_70/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_70"
op: "Add"
input: "MatMul_109"
input: "add_70/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_29/Rank"
op: "Rank"
input: "add_69"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_29/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_29/sub"
op: "Sub"
input: "transpose_29/Rank"
input: "transpose_29/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_29/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_29/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_29/Range"
op: "Range"
input: "transpose_29/Range/start"
input: "transpose_29/Rank"
input: "transpose_29/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_29/sub_1"
op: "Sub"
input: "transpose_29/sub"
input: "transpose_29/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_29"
op: "Transpose"
input: "add_69"
input: "transpose_29/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_110"
op: "MatMul"
input: "transpose_29"
input: "add_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_13"
op: "Svd"
input: "MatMul_110"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_13/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_13/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_13:2"
input: "adjoint_13/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_72"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_73"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_26"
op: "MatrixDeterminant"
input: "Svd_13:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_27"
op: "MatrixDeterminant"
input: "adjoint_13/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_37"
op: "Mul"
input: "MatrixDeterminant_26"
input: "MatrixDeterminant_27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_13/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_13"
op: "Less"
input: "mul_37"
input: "Less_13/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_13/Switch"
op: "Switch"
input: "Less_13"
input: "Less_13"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_13/switch_t"
op: "Identity"
input: "cond_13/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_13/switch_f"
op: "Identity"
input: "cond_13/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_13/pred_id"
op: "Identity"
input: "Less_13"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_13/mul/Switch"
op: "Switch"
input: "Svd_13"
input: "cond_13/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_13"
    }
  }
}
, name: "cond_13/mul/Switch_1"
op: "Switch"
input: "Const_72"
input: "cond_13/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_72"
    }
  }
}
, name: "cond_13/mul"
op: "Mul"
input: "cond_13/mul/Switch:1"
input: "cond_13/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_13/mul_1/Switch"
op: "Switch"
input: "Svd_13:1"
input: "cond_13/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_13"
    }
  }
}
, name: "cond_13/mul_1/Switch_1"
op: "Switch"
input: "Const_73"
input: "cond_13/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_73"
    }
  }
}
, name: "cond_13/mul_1"
op: "Mul"
input: "cond_13/mul_1/Switch:1"
input: "cond_13/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_13/Switch_1"
op: "Switch"
input: "Svd_13"
input: "cond_13/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_13"
    }
  }
}
, name: "cond_13/Switch_2"
op: "Switch"
input: "Svd_13:1"
input: "cond_13/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_13"
    }
  }
}
, name: "cond_13/Merge"
op: "Merge"
input: "cond_13/Switch_1"
input: "cond_13/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_13/Merge_1"
op: "Merge"
input: "cond_13/Switch_2"
input: "cond_13/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_111"
op: "MatMul"
input: "cond_13/Merge_1"
input: "adjoint_13/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_112"
op: "MatMul"
input: "add_69"
input: "MatMul_111"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_57"
op: "Sub"
input: "MatMul_112"
input: "add_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_58"
op: "Sub"
input: "MatMul_112"
input: "add_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_38"
op: "Mul"
input: "sub_57"
input: "sub_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_101/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_101"
op: "Sum"
input: "mul_38"
input: "Sum_101/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_102/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_102"
op: "Sum"
input: "Sum_101"
input: "Sum_102/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_56"
op: "RealDiv"
input: "Sum_102"
input: "Sum_100"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_13"
op: "Sqrt"
input: "truediv_56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_42/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 14
    }
  }
}
, name: "strided_slice_42/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 15
    }
  }
}
, name: "strided_slice_42/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_42"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_42/stack"
input: "strided_slice_42/stack_1"
input: "strided_slice_42/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_43/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 14
    }
  }
}
, name: "strided_slice_43/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 15
    }
  }
}
, name: "strided_slice_43/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_43"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_43/stack"
input: "strided_slice_43/stack_1"
input: "strided_slice_43/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_44/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 14
    }
  }
}
, name: "strided_slice_44/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 15
    }
  }
}
, name: "strided_slice_44/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_44"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_44/stack"
input: "strided_slice_44/stack_1"
input: "strided_slice_44/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_74"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_103"
op: "Sum"
input: "strided_slice_44"
input: "Const_74"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_91/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_91"
op: "Reshape"
input: "strided_slice_44"
input: "Reshape_91/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_42"
op: "Diag"
input: "Reshape_91"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_113"
op: "MatMul"
input: "Diag_42"
input: "strided_slice_43"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_71/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_71"
op: "Add"
input: "MatMul_113"
input: "add_71/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_104/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_104"
op: "Sum"
input: "add_71"
input: "Sum_104/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_57"
op: "RealDiv"
input: "Sum_104"
input: "Sum_103"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_59"
op: "Sub"
input: "strided_slice_43"
input: "truediv_57"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_75"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_105"
op: "Sum"
input: "strided_slice_44"
input: "Const_75"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_92/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_92"
op: "Reshape"
input: "strided_slice_44"
input: "Reshape_92/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_43"
op: "Diag"
input: "Reshape_92"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_114"
op: "MatMul"
input: "Diag_43"
input: "strided_slice_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_72/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_72"
op: "Add"
input: "MatMul_114"
input: "add_72/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_106/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_106"
op: "Sum"
input: "add_72"
input: "Sum_106/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_58"
op: "RealDiv"
input: "Sum_106"
input: "Sum_105"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_60"
op: "Sub"
input: "strided_slice_42"
input: "truediv_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_14"
op: "StopGradient"
input: "sub_59"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_76"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_107"
op: "Sum"
input: "strided_slice_44"
input: "Const_76"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_93/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_93"
op: "Reshape"
input: "strided_slice_44"
input: "Reshape_93/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_44"
op: "Diag"
input: "Reshape_93"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_115"
op: "MatMul"
input: "Diag_44"
input: "StopGradient_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_73/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_73"
op: "Add"
input: "MatMul_115"
input: "add_73/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_116"
op: "MatMul"
input: "Diag_44"
input: "sub_60"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_74/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_74"
op: "Add"
input: "MatMul_116"
input: "add_74/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_30/Rank"
op: "Rank"
input: "add_73"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_30/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_30/sub"
op: "Sub"
input: "transpose_30/Rank"
input: "transpose_30/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_30/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_30/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_30/Range"
op: "Range"
input: "transpose_30/Range/start"
input: "transpose_30/Rank"
input: "transpose_30/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_30/sub_1"
op: "Sub"
input: "transpose_30/sub"
input: "transpose_30/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_30"
op: "Transpose"
input: "add_73"
input: "transpose_30/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_117"
op: "MatMul"
input: "transpose_30"
input: "add_74"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_14"
op: "Svd"
input: "MatMul_117"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_14/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_14/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_14:2"
input: "adjoint_14/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_77"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_78"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_28"
op: "MatrixDeterminant"
input: "Svd_14:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_29"
op: "MatrixDeterminant"
input: "adjoint_14/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_39"
op: "Mul"
input: "MatrixDeterminant_28"
input: "MatrixDeterminant_29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_14/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_14"
op: "Less"
input: "mul_39"
input: "Less_14/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_14/Switch"
op: "Switch"
input: "Less_14"
input: "Less_14"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_14/switch_t"
op: "Identity"
input: "cond_14/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_14/switch_f"
op: "Identity"
input: "cond_14/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_14/pred_id"
op: "Identity"
input: "Less_14"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_14/mul/Switch"
op: "Switch"
input: "Svd_14"
input: "cond_14/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_14"
    }
  }
}
, name: "cond_14/mul/Switch_1"
op: "Switch"
input: "Const_77"
input: "cond_14/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_77"
    }
  }
}
, name: "cond_14/mul"
op: "Mul"
input: "cond_14/mul/Switch:1"
input: "cond_14/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_14/mul_1/Switch"
op: "Switch"
input: "Svd_14:1"
input: "cond_14/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_14"
    }
  }
}
, name: "cond_14/mul_1/Switch_1"
op: "Switch"
input: "Const_78"
input: "cond_14/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_78"
    }
  }
}
, name: "cond_14/mul_1"
op: "Mul"
input: "cond_14/mul_1/Switch:1"
input: "cond_14/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_14/Switch_1"
op: "Switch"
input: "Svd_14"
input: "cond_14/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_14"
    }
  }
}
, name: "cond_14/Switch_2"
op: "Switch"
input: "Svd_14:1"
input: "cond_14/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_14"
    }
  }
}
, name: "cond_14/Merge"
op: "Merge"
input: "cond_14/Switch_1"
input: "cond_14/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_14/Merge_1"
op: "Merge"
input: "cond_14/Switch_2"
input: "cond_14/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_118"
op: "MatMul"
input: "cond_14/Merge_1"
input: "adjoint_14/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_119"
op: "MatMul"
input: "add_73"
input: "MatMul_118"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_61"
op: "Sub"
input: "MatMul_119"
input: "add_74"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_62"
op: "Sub"
input: "MatMul_119"
input: "add_74"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_40"
op: "Mul"
input: "sub_61"
input: "sub_62"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_108/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_108"
op: "Sum"
input: "mul_40"
input: "Sum_108/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_109/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_109"
op: "Sum"
input: "Sum_108"
input: "Sum_109/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_59"
op: "RealDiv"
input: "Sum_109"
input: "Sum_107"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_14"
op: "Sqrt"
input: "truediv_59"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_45/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 15
    }
  }
}
, name: "strided_slice_45/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
, name: "strided_slice_45/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_45"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_45/stack"
input: "strided_slice_45/stack_1"
input: "strided_slice_45/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_46/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 15
    }
  }
}
, name: "strided_slice_46/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
, name: "strided_slice_46/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_46"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_46/stack"
input: "strided_slice_46/stack_1"
input: "strided_slice_46/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_47/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 15
    }
  }
}
, name: "strided_slice_47/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
, name: "strided_slice_47/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_47"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_47/stack"
input: "strided_slice_47/stack_1"
input: "strided_slice_47/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_79"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_110"
op: "Sum"
input: "strided_slice_47"
input: "Const_79"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_94/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_94"
op: "Reshape"
input: "strided_slice_47"
input: "Reshape_94/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_45"
op: "Diag"
input: "Reshape_94"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_120"
op: "MatMul"
input: "Diag_45"
input: "strided_slice_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_75/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_75"
op: "Add"
input: "MatMul_120"
input: "add_75/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_111/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_111"
op: "Sum"
input: "add_75"
input: "Sum_111/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_60"
op: "RealDiv"
input: "Sum_111"
input: "Sum_110"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_63"
op: "Sub"
input: "strided_slice_46"
input: "truediv_60"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_80"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_112"
op: "Sum"
input: "strided_slice_47"
input: "Const_80"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_95/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_95"
op: "Reshape"
input: "strided_slice_47"
input: "Reshape_95/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_46"
op: "Diag"
input: "Reshape_95"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_121"
op: "MatMul"
input: "Diag_46"
input: "strided_slice_45"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_76/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_76"
op: "Add"
input: "MatMul_121"
input: "add_76/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_113/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_113"
op: "Sum"
input: "add_76"
input: "Sum_113/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_61"
op: "RealDiv"
input: "Sum_113"
input: "Sum_112"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_64"
op: "Sub"
input: "strided_slice_45"
input: "truediv_61"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_15"
op: "StopGradient"
input: "sub_63"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_81"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_114"
op: "Sum"
input: "strided_slice_47"
input: "Const_81"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_96/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_96"
op: "Reshape"
input: "strided_slice_47"
input: "Reshape_96/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_47"
op: "Diag"
input: "Reshape_96"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_122"
op: "MatMul"
input: "Diag_47"
input: "StopGradient_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_77/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_77"
op: "Add"
input: "MatMul_122"
input: "add_77/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_123"
op: "MatMul"
input: "Diag_47"
input: "sub_64"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_78/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_78"
op: "Add"
input: "MatMul_123"
input: "add_78/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_31/Rank"
op: "Rank"
input: "add_77"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_31/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_31/sub"
op: "Sub"
input: "transpose_31/Rank"
input: "transpose_31/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_31/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_31/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_31/Range"
op: "Range"
input: "transpose_31/Range/start"
input: "transpose_31/Rank"
input: "transpose_31/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_31/sub_1"
op: "Sub"
input: "transpose_31/sub"
input: "transpose_31/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_31"
op: "Transpose"
input: "add_77"
input: "transpose_31/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_124"
op: "MatMul"
input: "transpose_31"
input: "add_78"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_15"
op: "Svd"
input: "MatMul_124"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_15/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_15/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_15:2"
input: "adjoint_15/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_82"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_83"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_30"
op: "MatrixDeterminant"
input: "Svd_15:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_31"
op: "MatrixDeterminant"
input: "adjoint_15/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_41"
op: "Mul"
input: "MatrixDeterminant_30"
input: "MatrixDeterminant_31"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_15/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_15"
op: "Less"
input: "mul_41"
input: "Less_15/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_15/Switch"
op: "Switch"
input: "Less_15"
input: "Less_15"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_15/switch_t"
op: "Identity"
input: "cond_15/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_15/switch_f"
op: "Identity"
input: "cond_15/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_15/pred_id"
op: "Identity"
input: "Less_15"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_15/mul/Switch"
op: "Switch"
input: "Svd_15"
input: "cond_15/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_15"
    }
  }
}
, name: "cond_15/mul/Switch_1"
op: "Switch"
input: "Const_82"
input: "cond_15/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_82"
    }
  }
}
, name: "cond_15/mul"
op: "Mul"
input: "cond_15/mul/Switch:1"
input: "cond_15/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_15/mul_1/Switch"
op: "Switch"
input: "Svd_15:1"
input: "cond_15/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_15"
    }
  }
}
, name: "cond_15/mul_1/Switch_1"
op: "Switch"
input: "Const_83"
input: "cond_15/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_83"
    }
  }
}
, name: "cond_15/mul_1"
op: "Mul"
input: "cond_15/mul_1/Switch:1"
input: "cond_15/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_15/Switch_1"
op: "Switch"
input: "Svd_15"
input: "cond_15/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_15"
    }
  }
}
, name: "cond_15/Switch_2"
op: "Switch"
input: "Svd_15:1"
input: "cond_15/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_15"
    }
  }
}
, name: "cond_15/Merge"
op: "Merge"
input: "cond_15/Switch_1"
input: "cond_15/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_15/Merge_1"
op: "Merge"
input: "cond_15/Switch_2"
input: "cond_15/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_125"
op: "MatMul"
input: "cond_15/Merge_1"
input: "adjoint_15/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_126"
op: "MatMul"
input: "add_77"
input: "MatMul_125"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_65"
op: "Sub"
input: "MatMul_126"
input: "add_78"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_66"
op: "Sub"
input: "MatMul_126"
input: "add_78"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_42"
op: "Mul"
input: "sub_65"
input: "sub_66"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_115/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_115"
op: "Sum"
input: "mul_42"
input: "Sum_115/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_116/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_116"
op: "Sum"
input: "Sum_115"
input: "Sum_116/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_62"
op: "RealDiv"
input: "Sum_116"
input: "Sum_114"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_15"
op: "Sqrt"
input: "truediv_62"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_48/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
, name: "strided_slice_48/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 17
    }
  }
}
, name: "strided_slice_48/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_48"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_48/stack"
input: "strided_slice_48/stack_1"
input: "strided_slice_48/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_49/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
, name: "strided_slice_49/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 17
    }
  }
}
, name: "strided_slice_49/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_49"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_49/stack"
input: "strided_slice_49/stack_1"
input: "strided_slice_49/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_50/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 16
    }
  }
}
, name: "strided_slice_50/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 17
    }
  }
}
, name: "strided_slice_50/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_50"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_50/stack"
input: "strided_slice_50/stack_1"
input: "strided_slice_50/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_84"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_117"
op: "Sum"
input: "strided_slice_50"
input: "Const_84"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_97/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_97"
op: "Reshape"
input: "strided_slice_50"
input: "Reshape_97/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_48"
op: "Diag"
input: "Reshape_97"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_127"
op: "MatMul"
input: "Diag_48"
input: "strided_slice_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_79/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_79"
op: "Add"
input: "MatMul_127"
input: "add_79/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_118/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_118"
op: "Sum"
input: "add_79"
input: "Sum_118/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_63"
op: "RealDiv"
input: "Sum_118"
input: "Sum_117"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_67"
op: "Sub"
input: "strided_slice_49"
input: "truediv_63"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_85"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_119"
op: "Sum"
input: "strided_slice_50"
input: "Const_85"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_98/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_98"
op: "Reshape"
input: "strided_slice_50"
input: "Reshape_98/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_49"
op: "Diag"
input: "Reshape_98"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_128"
op: "MatMul"
input: "Diag_49"
input: "strided_slice_48"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_80/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_80"
op: "Add"
input: "MatMul_128"
input: "add_80/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_120/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_120"
op: "Sum"
input: "add_80"
input: "Sum_120/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_64"
op: "RealDiv"
input: "Sum_120"
input: "Sum_119"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_68"
op: "Sub"
input: "strided_slice_48"
input: "truediv_64"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_16"
op: "StopGradient"
input: "sub_67"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_86"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_121"
op: "Sum"
input: "strided_slice_50"
input: "Const_86"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_99/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_99"
op: "Reshape"
input: "strided_slice_50"
input: "Reshape_99/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_50"
op: "Diag"
input: "Reshape_99"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_129"
op: "MatMul"
input: "Diag_50"
input: "StopGradient_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_81/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_81"
op: "Add"
input: "MatMul_129"
input: "add_81/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_130"
op: "MatMul"
input: "Diag_50"
input: "sub_68"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_82/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_82"
op: "Add"
input: "MatMul_130"
input: "add_82/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_32/Rank"
op: "Rank"
input: "add_81"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_32/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_32/sub"
op: "Sub"
input: "transpose_32/Rank"
input: "transpose_32/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_32/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_32/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_32/Range"
op: "Range"
input: "transpose_32/Range/start"
input: "transpose_32/Rank"
input: "transpose_32/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_32/sub_1"
op: "Sub"
input: "transpose_32/sub"
input: "transpose_32/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_32"
op: "Transpose"
input: "add_81"
input: "transpose_32/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_131"
op: "MatMul"
input: "transpose_32"
input: "add_82"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_16"
op: "Svd"
input: "MatMul_131"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_16/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_16/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_16:2"
input: "adjoint_16/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_87"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_88"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_32"
op: "MatrixDeterminant"
input: "Svd_16:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_33"
op: "MatrixDeterminant"
input: "adjoint_16/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_43"
op: "Mul"
input: "MatrixDeterminant_32"
input: "MatrixDeterminant_33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_16/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_16"
op: "Less"
input: "mul_43"
input: "Less_16/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_16/Switch"
op: "Switch"
input: "Less_16"
input: "Less_16"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_16/switch_t"
op: "Identity"
input: "cond_16/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_16/switch_f"
op: "Identity"
input: "cond_16/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_16/pred_id"
op: "Identity"
input: "Less_16"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_16/mul/Switch"
op: "Switch"
input: "Svd_16"
input: "cond_16/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_16"
    }
  }
}
, name: "cond_16/mul/Switch_1"
op: "Switch"
input: "Const_87"
input: "cond_16/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_87"
    }
  }
}
, name: "cond_16/mul"
op: "Mul"
input: "cond_16/mul/Switch:1"
input: "cond_16/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_16/mul_1/Switch"
op: "Switch"
input: "Svd_16:1"
input: "cond_16/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_16"
    }
  }
}
, name: "cond_16/mul_1/Switch_1"
op: "Switch"
input: "Const_88"
input: "cond_16/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_88"
    }
  }
}
, name: "cond_16/mul_1"
op: "Mul"
input: "cond_16/mul_1/Switch:1"
input: "cond_16/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_16/Switch_1"
op: "Switch"
input: "Svd_16"
input: "cond_16/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_16"
    }
  }
}
, name: "cond_16/Switch_2"
op: "Switch"
input: "Svd_16:1"
input: "cond_16/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_16"
    }
  }
}
, name: "cond_16/Merge"
op: "Merge"
input: "cond_16/Switch_1"
input: "cond_16/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_16/Merge_1"
op: "Merge"
input: "cond_16/Switch_2"
input: "cond_16/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_132"
op: "MatMul"
input: "cond_16/Merge_1"
input: "adjoint_16/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_133"
op: "MatMul"
input: "add_81"
input: "MatMul_132"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_69"
op: "Sub"
input: "MatMul_133"
input: "add_82"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_70"
op: "Sub"
input: "MatMul_133"
input: "add_82"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_44"
op: "Mul"
input: "sub_69"
input: "sub_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_122/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_122"
op: "Sum"
input: "mul_44"
input: "Sum_122/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_123/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_123"
op: "Sum"
input: "Sum_122"
input: "Sum_123/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_65"
op: "RealDiv"
input: "Sum_123"
input: "Sum_121"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_16"
op: "Sqrt"
input: "truediv_65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_51/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 17
    }
  }
}
, name: "strided_slice_51/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 18
    }
  }
}
, name: "strided_slice_51/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_51"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_51/stack"
input: "strided_slice_51/stack_1"
input: "strided_slice_51/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_52/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 17
    }
  }
}
, name: "strided_slice_52/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 18
    }
  }
}
, name: "strided_slice_52/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_52"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_52/stack"
input: "strided_slice_52/stack_1"
input: "strided_slice_52/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_53/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 17
    }
  }
}
, name: "strided_slice_53/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 18
    }
  }
}
, name: "strided_slice_53/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_53"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_53/stack"
input: "strided_slice_53/stack_1"
input: "strided_slice_53/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_89"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_124"
op: "Sum"
input: "strided_slice_53"
input: "Const_89"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_100/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_100"
op: "Reshape"
input: "strided_slice_53"
input: "Reshape_100/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_51"
op: "Diag"
input: "Reshape_100"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_134"
op: "MatMul"
input: "Diag_51"
input: "strided_slice_52"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_83/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_83"
op: "Add"
input: "MatMul_134"
input: "add_83/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_125/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_125"
op: "Sum"
input: "add_83"
input: "Sum_125/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_66"
op: "RealDiv"
input: "Sum_125"
input: "Sum_124"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_71"
op: "Sub"
input: "strided_slice_52"
input: "truediv_66"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_90"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_126"
op: "Sum"
input: "strided_slice_53"
input: "Const_90"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_101/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_101"
op: "Reshape"
input: "strided_slice_53"
input: "Reshape_101/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_52"
op: "Diag"
input: "Reshape_101"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_135"
op: "MatMul"
input: "Diag_52"
input: "strided_slice_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_84/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_84"
op: "Add"
input: "MatMul_135"
input: "add_84/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_127/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_127"
op: "Sum"
input: "add_84"
input: "Sum_127/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_67"
op: "RealDiv"
input: "Sum_127"
input: "Sum_126"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_72"
op: "Sub"
input: "strided_slice_51"
input: "truediv_67"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_17"
op: "StopGradient"
input: "sub_71"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_91"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_128"
op: "Sum"
input: "strided_slice_53"
input: "Const_91"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_102/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_102"
op: "Reshape"
input: "strided_slice_53"
input: "Reshape_102/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_53"
op: "Diag"
input: "Reshape_102"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_136"
op: "MatMul"
input: "Diag_53"
input: "StopGradient_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_85/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_85"
op: "Add"
input: "MatMul_136"
input: "add_85/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_137"
op: "MatMul"
input: "Diag_53"
input: "sub_72"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_86/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_86"
op: "Add"
input: "MatMul_137"
input: "add_86/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_33/Rank"
op: "Rank"
input: "add_85"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_33/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_33/sub"
op: "Sub"
input: "transpose_33/Rank"
input: "transpose_33/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_33/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_33/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_33/Range"
op: "Range"
input: "transpose_33/Range/start"
input: "transpose_33/Rank"
input: "transpose_33/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_33/sub_1"
op: "Sub"
input: "transpose_33/sub"
input: "transpose_33/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_33"
op: "Transpose"
input: "add_85"
input: "transpose_33/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_138"
op: "MatMul"
input: "transpose_33"
input: "add_86"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_17"
op: "Svd"
input: "MatMul_138"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_17/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_17/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_17:2"
input: "adjoint_17/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_92"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_93"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_34"
op: "MatrixDeterminant"
input: "Svd_17:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_35"
op: "MatrixDeterminant"
input: "adjoint_17/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_45"
op: "Mul"
input: "MatrixDeterminant_34"
input: "MatrixDeterminant_35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_17/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_17"
op: "Less"
input: "mul_45"
input: "Less_17/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_17/Switch"
op: "Switch"
input: "Less_17"
input: "Less_17"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_17/switch_t"
op: "Identity"
input: "cond_17/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_17/switch_f"
op: "Identity"
input: "cond_17/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_17/pred_id"
op: "Identity"
input: "Less_17"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_17/mul/Switch"
op: "Switch"
input: "Svd_17"
input: "cond_17/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_17"
    }
  }
}
, name: "cond_17/mul/Switch_1"
op: "Switch"
input: "Const_92"
input: "cond_17/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_92"
    }
  }
}
, name: "cond_17/mul"
op: "Mul"
input: "cond_17/mul/Switch:1"
input: "cond_17/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_17/mul_1/Switch"
op: "Switch"
input: "Svd_17:1"
input: "cond_17/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_17"
    }
  }
}
, name: "cond_17/mul_1/Switch_1"
op: "Switch"
input: "Const_93"
input: "cond_17/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_93"
    }
  }
}
, name: "cond_17/mul_1"
op: "Mul"
input: "cond_17/mul_1/Switch:1"
input: "cond_17/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_17/Switch_1"
op: "Switch"
input: "Svd_17"
input: "cond_17/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_17"
    }
  }
}
, name: "cond_17/Switch_2"
op: "Switch"
input: "Svd_17:1"
input: "cond_17/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_17"
    }
  }
}
, name: "cond_17/Merge"
op: "Merge"
input: "cond_17/Switch_1"
input: "cond_17/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_17/Merge_1"
op: "Merge"
input: "cond_17/Switch_2"
input: "cond_17/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_139"
op: "MatMul"
input: "cond_17/Merge_1"
input: "adjoint_17/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_140"
op: "MatMul"
input: "add_85"
input: "MatMul_139"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_73"
op: "Sub"
input: "MatMul_140"
input: "add_86"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_74"
op: "Sub"
input: "MatMul_140"
input: "add_86"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_46"
op: "Mul"
input: "sub_73"
input: "sub_74"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_129/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_129"
op: "Sum"
input: "mul_46"
input: "Sum_129/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_130/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_130"
op: "Sum"
input: "Sum_129"
input: "Sum_130/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_68"
op: "RealDiv"
input: "Sum_130"
input: "Sum_128"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_17"
op: "Sqrt"
input: "truediv_68"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_54/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 18
    }
  }
}
, name: "strided_slice_54/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 19
    }
  }
}
, name: "strided_slice_54/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_54"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_54/stack"
input: "strided_slice_54/stack_1"
input: "strided_slice_54/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_55/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 18
    }
  }
}
, name: "strided_slice_55/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 19
    }
  }
}
, name: "strided_slice_55/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_55"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_55/stack"
input: "strided_slice_55/stack_1"
input: "strided_slice_55/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_56/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 18
    }
  }
}
, name: "strided_slice_56/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 19
    }
  }
}
, name: "strided_slice_56/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_56"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_56/stack"
input: "strided_slice_56/stack_1"
input: "strided_slice_56/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_94"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_131"
op: "Sum"
input: "strided_slice_56"
input: "Const_94"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_103/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_103"
op: "Reshape"
input: "strided_slice_56"
input: "Reshape_103/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_54"
op: "Diag"
input: "Reshape_103"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_141"
op: "MatMul"
input: "Diag_54"
input: "strided_slice_55"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_87/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_87"
op: "Add"
input: "MatMul_141"
input: "add_87/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_132/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_132"
op: "Sum"
input: "add_87"
input: "Sum_132/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_69"
op: "RealDiv"
input: "Sum_132"
input: "Sum_131"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_75"
op: "Sub"
input: "strided_slice_55"
input: "truediv_69"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_95"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_133"
op: "Sum"
input: "strided_slice_56"
input: "Const_95"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_104/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_104"
op: "Reshape"
input: "strided_slice_56"
input: "Reshape_104/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_55"
op: "Diag"
input: "Reshape_104"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_142"
op: "MatMul"
input: "Diag_55"
input: "strided_slice_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_88/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_88"
op: "Add"
input: "MatMul_142"
input: "add_88/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_134/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_134"
op: "Sum"
input: "add_88"
input: "Sum_134/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_70"
op: "RealDiv"
input: "Sum_134"
input: "Sum_133"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_76"
op: "Sub"
input: "strided_slice_54"
input: "truediv_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_18"
op: "StopGradient"
input: "sub_75"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_96"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_135"
op: "Sum"
input: "strided_slice_56"
input: "Const_96"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_105/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_105"
op: "Reshape"
input: "strided_slice_56"
input: "Reshape_105/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_56"
op: "Diag"
input: "Reshape_105"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_143"
op: "MatMul"
input: "Diag_56"
input: "StopGradient_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_89/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_89"
op: "Add"
input: "MatMul_143"
input: "add_89/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_144"
op: "MatMul"
input: "Diag_56"
input: "sub_76"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_90/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_90"
op: "Add"
input: "MatMul_144"
input: "add_90/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_34/Rank"
op: "Rank"
input: "add_89"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_34/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_34/sub"
op: "Sub"
input: "transpose_34/Rank"
input: "transpose_34/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_34/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_34/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_34/Range"
op: "Range"
input: "transpose_34/Range/start"
input: "transpose_34/Rank"
input: "transpose_34/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_34/sub_1"
op: "Sub"
input: "transpose_34/sub"
input: "transpose_34/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_34"
op: "Transpose"
input: "add_89"
input: "transpose_34/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_145"
op: "MatMul"
input: "transpose_34"
input: "add_90"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_18"
op: "Svd"
input: "MatMul_145"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_18/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_18/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_18:2"
input: "adjoint_18/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_97"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_98"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_36"
op: "MatrixDeterminant"
input: "Svd_18:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_37"
op: "MatrixDeterminant"
input: "adjoint_18/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_47"
op: "Mul"
input: "MatrixDeterminant_36"
input: "MatrixDeterminant_37"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_18/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_18"
op: "Less"
input: "mul_47"
input: "Less_18/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_18/Switch"
op: "Switch"
input: "Less_18"
input: "Less_18"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_18/switch_t"
op: "Identity"
input: "cond_18/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_18/switch_f"
op: "Identity"
input: "cond_18/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_18/pred_id"
op: "Identity"
input: "Less_18"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_18/mul/Switch"
op: "Switch"
input: "Svd_18"
input: "cond_18/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_18"
    }
  }
}
, name: "cond_18/mul/Switch_1"
op: "Switch"
input: "Const_97"
input: "cond_18/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_97"
    }
  }
}
, name: "cond_18/mul"
op: "Mul"
input: "cond_18/mul/Switch:1"
input: "cond_18/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_18/mul_1/Switch"
op: "Switch"
input: "Svd_18:1"
input: "cond_18/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_18"
    }
  }
}
, name: "cond_18/mul_1/Switch_1"
op: "Switch"
input: "Const_98"
input: "cond_18/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_98"
    }
  }
}
, name: "cond_18/mul_1"
op: "Mul"
input: "cond_18/mul_1/Switch:1"
input: "cond_18/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_18/Switch_1"
op: "Switch"
input: "Svd_18"
input: "cond_18/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_18"
    }
  }
}
, name: "cond_18/Switch_2"
op: "Switch"
input: "Svd_18:1"
input: "cond_18/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_18"
    }
  }
}
, name: "cond_18/Merge"
op: "Merge"
input: "cond_18/Switch_1"
input: "cond_18/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_18/Merge_1"
op: "Merge"
input: "cond_18/Switch_2"
input: "cond_18/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_146"
op: "MatMul"
input: "cond_18/Merge_1"
input: "adjoint_18/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_147"
op: "MatMul"
input: "add_89"
input: "MatMul_146"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_77"
op: "Sub"
input: "MatMul_147"
input: "add_90"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_78"
op: "Sub"
input: "MatMul_147"
input: "add_90"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_48"
op: "Mul"
input: "sub_77"
input: "sub_78"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_136/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_136"
op: "Sum"
input: "mul_48"
input: "Sum_136/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_137/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_137"
op: "Sum"
input: "Sum_136"
input: "Sum_137/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_71"
op: "RealDiv"
input: "Sum_137"
input: "Sum_135"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_18"
op: "Sqrt"
input: "truediv_71"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "strided_slice_57/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 19
    }
  }
}
, name: "strided_slice_57/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 20
    }
  }
}
, name: "strided_slice_57/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_57"
op: "StridedSlice"
input: "g_nnpostX/Mul"
input: "strided_slice_57/stack"
input: "strided_slice_57/stack_1"
input: "strided_slice_57/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_58/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 19
    }
  }
}
, name: "strided_slice_58/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 20
    }
  }
}
, name: "strided_slice_58/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_58"
op: "StridedSlice"
input: "Placeholder_3"
input: "strided_slice_58/stack"
input: "strided_slice_58/stack_1"
input: "strided_slice_58/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "strided_slice_59/stack"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 19
    }
  }
}
, name: "strided_slice_59/stack_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 20
    }
  }
}
, name: "strided_slice_59/stack_2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "strided_slice_59"
op: "StridedSlice"
input: "Placeholder_1"
input: "strided_slice_59/stack"
input: "strided_slice_59/stack_1"
input: "strided_slice_59/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "Const_99"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_138"
op: "Sum"
input: "strided_slice_59"
input: "Const_99"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_106/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_106"
op: "Reshape"
input: "strided_slice_59"
input: "Reshape_106/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_57"
op: "Diag"
input: "Reshape_106"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_148"
op: "MatMul"
input: "Diag_57"
input: "strided_slice_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_91/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_91"
op: "Add"
input: "MatMul_148"
input: "add_91/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_139/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_139"
op: "Sum"
input: "add_91"
input: "Sum_139/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_72"
op: "RealDiv"
input: "Sum_139"
input: "Sum_138"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_79"
op: "Sub"
input: "strided_slice_58"
input: "truediv_72"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_100"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_140"
op: "Sum"
input: "strided_slice_59"
input: "Const_100"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_107/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_107"
op: "Reshape"
input: "strided_slice_59"
input: "Reshape_107/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_58"
op: "Diag"
input: "Reshape_107"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_149"
op: "MatMul"
input: "Diag_58"
input: "strided_slice_57"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_92/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_92"
op: "Add"
input: "MatMul_149"
input: "add_92/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_141/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_141"
op: "Sum"
input: "add_92"
input: "Sum_141/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: true
  }
}
, name: "truediv_73"
op: "RealDiv"
input: "Sum_141"
input: "Sum_140"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_80"
op: "Sub"
input: "strided_slice_57"
input: "truediv_73"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "StopGradient_19"
op: "StopGradient"
input: "sub_79"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Const_101"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\000\000\000\000\001\000\000\000"
    }
  }
}
, name: "Sum_142"
op: "Sum"
input: "strided_slice_59"
input: "Const_101"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Reshape_108/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: -1
    }
  }
}
, name: "Reshape_108"
op: "Reshape"
input: "strided_slice_59"
input: "Reshape_108/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "Diag_59"
op: "Diag"
input: "Reshape_108"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_150"
op: "MatMul"
input: "Diag_59"
input: "StopGradient_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_93/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_93"
op: "Add"
input: "MatMul_150"
input: "add_93/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_151"
op: "MatMul"
input: "Diag_59"
input: "sub_80"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "add_94/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "add_94"
op: "Add"
input: "MatMul_151"
input: "add_94/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_35/Rank"
op: "Rank"
input: "add_93"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "transpose_35/sub/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_35/sub"
op: "Sub"
input: "transpose_35/Rank"
input: "transpose_35/sub/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_35/Range/start"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "transpose_35/Range/delta"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "transpose_35/Range"
op: "Range"
input: "transpose_35/Range/start"
input: "transpose_35/Rank"
input: "transpose_35/Range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "transpose_35/sub_1"
op: "Sub"
input: "transpose_35/sub"
input: "transpose_35/Range"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "transpose_35"
op: "Transpose"
input: "add_93"
input: "transpose_35/sub_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "MatMul_152"
op: "MatMul"
input: "transpose_35"
input: "add_94"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "Svd_19"
op: "Svd"
input: "MatMul_152"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "compute_uv"
  value {
    b: true
  }
}
attr {
  key: "full_matrices"
  value {
    b: true
  }
}
, name: "adjoint_19/matrix_transpose/transpose/perm"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "adjoint_19/matrix_transpose/transpose"
op: "Transpose"
input: "Svd_19:2"
input: "adjoint_19/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "Const_102"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "Const_103"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277\000\000\200?\000\000\200?\000\000\200\277"
    }
  }
}
, name: "MatrixDeterminant_38"
op: "MatrixDeterminant"
input: "Svd_19:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatrixDeterminant_39"
op: "MatrixDeterminant"
input: "adjoint_19/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_49"
op: "Mul"
input: "MatrixDeterminant_38"
input: "MatrixDeterminant_39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Less_19/y"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "Less_19"
op: "Less"
input: "mul_49"
input: "Less_19/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_19/Switch"
op: "Switch"
input: "Less_19"
input: "Less_19"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_19/switch_t"
op: "Identity"
input: "cond_19/Switch:1"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_19/switch_f"
op: "Identity"
input: "cond_19/Switch"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_19/pred_id"
op: "Identity"
input: "Less_19"
attr {
  key: "T"
  value {
    type: DT_BOOL
  }
}
, name: "cond_19/mul/Switch"
op: "Switch"
input: "Svd_19"
input: "cond_19/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_19"
    }
  }
}
, name: "cond_19/mul/Switch_1"
op: "Switch"
input: "Const_102"
input: "cond_19/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_102"
    }
  }
}
, name: "cond_19/mul"
op: "Mul"
input: "cond_19/mul/Switch:1"
input: "cond_19/mul/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_19/mul_1/Switch"
op: "Switch"
input: "Svd_19:1"
input: "cond_19/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_19"
    }
  }
}
, name: "cond_19/mul_1/Switch_1"
op: "Switch"
input: "Const_103"
input: "cond_19/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Const_103"
    }
  }
}
, name: "cond_19/mul_1"
op: "Mul"
input: "cond_19/mul_1/Switch:1"
input: "cond_19/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_19/Switch_1"
op: "Switch"
input: "Svd_19"
input: "cond_19/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_19"
    }
  }
}
, name: "cond_19/Switch_2"
op: "Switch"
input: "Svd_19:1"
input: "cond_19/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@Svd_19"
    }
  }
}
, name: "cond_19/Merge"
op: "Merge"
input: "cond_19/Switch_1"
input: "cond_19/mul"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "cond_19/Merge_1"
op: "Merge"
input: "cond_19/Switch_2"
input: "cond_19/mul_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "MatMul_153"
op: "MatMul"
input: "cond_19/Merge_1"
input: "adjoint_19/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "MatMul_154"
op: "MatMul"
input: "add_93"
input: "MatMul_153"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "sub_81"
op: "Sub"
input: "MatMul_154"
input: "add_94"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "sub_82"
op: "Sub"
input: "MatMul_154"
input: "add_94"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_50"
op: "Mul"
input: "sub_81"
input: "sub_82"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sum_143/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "Sum_143"
op: "Sum"
input: "mul_50"
input: "Sum_143/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "Sum_144/reduction_indices"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "Sum_144"
op: "Sum"
input: "Sum_143"
input: "Sum_144/reduction_indices"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "truediv_74"
op: "RealDiv"
input: "Sum_144"
input: "Sum_142"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "Sqrt_19"
op: "Sqrt"
input: "truediv_74"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "stack"
op: "Pack"
input: "Sqrt"
input: "Sqrt_1"
input: "Sqrt_2"
input: "Sqrt_3"
input: "Sqrt_4"
input: "Sqrt_5"
input: "Sqrt_6"
input: "Sqrt_7"
input: "Sqrt_8"
input: "Sqrt_9"
input: "Sqrt_10"
input: "Sqrt_11"
input: "Sqrt_12"
input: "Sqrt_13"
input: "Sqrt_14"
input: "Sqrt_15"
input: "Sqrt_16"
input: "Sqrt_17"
input: "Sqrt_18"
input: "Sqrt_19"
attr {
  key: "N"
  value {
    i: 20
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}
, name: "Const_104"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 0
    }
  }
}
, name: "Mean_17"
op: "Mean"
input: "stack"
input: "Const_104"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "add_95"
op: "Add"
input: "Mean_17"
input: "Mean_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "mul_51/x"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.999999747378752e-06
    }
  }
}
, name: "mul_51"
op: "Mul"
input: "mul_51/x"
input: "Mean_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "add_96"
op: "Add"
input: "add_95"
input: "mul_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/grad_ys_0"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 1.0
    }
  }
}
, name: "gradients/Fill"
op: "Fill"
input: "gradients/Shape"
input: "gradients/grad_ys_0"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/f_count_1"
op: "Enter"
input: "gradients/f_count"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge"
op: "Merge"
input: "gradients/f_count_1"
input: "gradients/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Switch"
op: "Switch"
input: "gradients/Merge"
input: "update_GRUpriorZ_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Add/y"
op: "Const"
input: "^update_GRUpriorZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Add"
op: "Add"
input: "gradients/Switch:1"
input: "gradients/Add/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_2"
op: "Exit"
input: "gradients/Switch"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/b_count_1"
op: "Enter"
input: "gradients/f_count_2"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_1"
op: "Merge"
input: "gradients/b_count_1"
input: "gradients/NextIteration_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/GreaterEqual/Enter"
op: "Enter"
input: "gradients/b_count"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/GreaterEqual"
op: "GreaterEqual"
input: "gradients/Merge_1"
input: "gradients/GreaterEqual/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_2"
op: "LoopCond"
input: "gradients/GreaterEqual"
, name: "gradients/Switch_1"
op: "Switch"
input: "gradients/Merge_1"
input: "gradients/b_count_2"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sub"
op: "Sub"
input: "gradients/Switch_1:1"
input: "gradients/GreaterEqual/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_3"
op: "Exit"
input: "gradients/Switch_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_3"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/f_count_4"
op: "Enter"
input: "gradients/f_count_3"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_2"
op: "Merge"
input: "gradients/f_count_4"
input: "gradients/NextIteration_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Switch_2"
op: "Switch"
input: "gradients/Merge_2"
input: "update_GRUpostX_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Add_1/y"
op: "Const"
input: "^update_GRUpostX_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Add_1"
op: "Add"
input: "gradients/Switch_2:1"
input: "gradients/Add_1/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_5"
op: "Exit"
input: "gradients/Switch_2"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_4"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/b_count_5"
op: "Enter"
input: "gradients/f_count_5"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_3"
op: "Merge"
input: "gradients/b_count_5"
input: "gradients/NextIteration_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/GreaterEqual_1/Enter"
op: "Enter"
input: "gradients/b_count_4"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/GreaterEqual_1"
op: "GreaterEqual"
input: "gradients/Merge_3"
input: "gradients/GreaterEqual_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_6"
op: "LoopCond"
input: "gradients/GreaterEqual_1"
, name: "gradients/Switch_3"
op: "Switch"
input: "gradients/Merge_3"
input: "gradients/b_count_6"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sub_1"
op: "Sub"
input: "gradients/Switch_3:1"
input: "gradients/GreaterEqual_1/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_7"
op: "Exit"
input: "gradients/Switch_3"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_6"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/f_count_7"
op: "Enter"
input: "gradients/f_count_6"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_4"
op: "Merge"
input: "gradients/f_count_7"
input: "gradients/NextIteration_4"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Switch_4"
op: "Switch"
input: "gradients/Merge_4"
input: "update_GRUpostZ_2/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Add_2/y"
op: "Const"
input: "^update_GRUpostZ_2/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Add_2"
op: "Add"
input: "gradients/Switch_4:1"
input: "gradients/Add_2/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_8"
op: "Exit"
input: "gradients/Switch_4"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_8"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/b_count_9"
op: "Enter"
input: "gradients/f_count_8"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_5"
op: "Merge"
input: "gradients/b_count_9"
input: "gradients/NextIteration_5"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/GreaterEqual_2/Enter"
op: "Enter"
input: "gradients/b_count_8"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/GreaterEqual_2"
op: "GreaterEqual"
input: "gradients/Merge_5"
input: "gradients/GreaterEqual_2/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_10"
op: "LoopCond"
input: "gradients/GreaterEqual_2"
, name: "gradients/Switch_5"
op: "Switch"
input: "gradients/Merge_5"
input: "gradients/b_count_10"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sub_2"
op: "Sub"
input: "gradients/Switch_5:1"
input: "gradients/GreaterEqual_2/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_11"
op: "Exit"
input: "gradients/Switch_5"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_9"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/f_count_10"
op: "Enter"
input: "gradients/f_count_9"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_6"
op: "Merge"
input: "gradients/f_count_10"
input: "gradients/NextIteration_6"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Switch_6"
op: "Switch"
input: "gradients/Merge_6"
input: "update_GRUpriorZ_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Add_3/y"
op: "Const"
input: "^update_GRUpriorZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Add_3"
op: "Add"
input: "gradients/Switch_6:1"
input: "gradients/Add_3/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_11"
op: "Exit"
input: "gradients/Switch_6"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_12"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/b_count_13"
op: "Enter"
input: "gradients/f_count_11"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_7"
op: "Merge"
input: "gradients/b_count_13"
input: "gradients/NextIteration_7"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/GreaterEqual_3/Enter"
op: "Enter"
input: "gradients/b_count_12"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/GreaterEqual_3"
op: "GreaterEqual"
input: "gradients/Merge_7"
input: "gradients/GreaterEqual_3/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_14"
op: "LoopCond"
input: "gradients/GreaterEqual_3"
, name: "gradients/Switch_7"
op: "Switch"
input: "gradients/Merge_7"
input: "gradients/b_count_14"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sub_3"
op: "Sub"
input: "gradients/Switch_7:1"
input: "gradients/GreaterEqual_3/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_15"
op: "Exit"
input: "gradients/Switch_7"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_12"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/f_count_13"
op: "Enter"
input: "gradients/f_count_12"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_8"
op: "Merge"
input: "gradients/f_count_13"
input: "gradients/NextIteration_8"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Switch_8"
op: "Switch"
input: "gradients/Merge_8"
input: "update_GRUpostX_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Add_4/y"
op: "Const"
input: "^update_GRUpostX_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Add_4"
op: "Add"
input: "gradients/Switch_8:1"
input: "gradients/Add_4/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_14"
op: "Exit"
input: "gradients/Switch_8"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_16"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/b_count_17"
op: "Enter"
input: "gradients/f_count_14"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_9"
op: "Merge"
input: "gradients/b_count_17"
input: "gradients/NextIteration_9"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/GreaterEqual_4/Enter"
op: "Enter"
input: "gradients/b_count_16"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/GreaterEqual_4"
op: "GreaterEqual"
input: "gradients/Merge_9"
input: "gradients/GreaterEqual_4/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_18"
op: "LoopCond"
input: "gradients/GreaterEqual_4"
, name: "gradients/Switch_9"
op: "Switch"
input: "gradients/Merge_9"
input: "gradients/b_count_18"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sub_4"
op: "Sub"
input: "gradients/Switch_9:1"
input: "gradients/GreaterEqual_4/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_19"
op: "Exit"
input: "gradients/Switch_9"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_15"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/f_count_16"
op: "Enter"
input: "gradients/f_count_15"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_10"
op: "Merge"
input: "gradients/f_count_16"
input: "gradients/NextIteration_10"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Switch_10"
op: "Switch"
input: "gradients/Merge_10"
input: "update_GRUpostZ_1/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Add_5/y"
op: "Const"
input: "^update_GRUpostZ_1/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Add_5"
op: "Add"
input: "gradients/Switch_10:1"
input: "gradients/Add_5/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_17"
op: "Exit"
input: "gradients/Switch_10"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_20"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/b_count_21"
op: "Enter"
input: "gradients/f_count_17"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_11"
op: "Merge"
input: "gradients/b_count_21"
input: "gradients/NextIteration_11"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/GreaterEqual_5/Enter"
op: "Enter"
input: "gradients/b_count_20"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/GreaterEqual_5"
op: "GreaterEqual"
input: "gradients/Merge_11"
input: "gradients/GreaterEqual_5/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_22"
op: "LoopCond"
input: "gradients/GreaterEqual_5"
, name: "gradients/Switch_11"
op: "Switch"
input: "gradients/Merge_11"
input: "gradients/b_count_22"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sub_5"
op: "Sub"
input: "gradients/Switch_11:1"
input: "gradients/GreaterEqual_5/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_23"
op: "Exit"
input: "gradients/Switch_11"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_18"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/f_count_19"
op: "Enter"
input: "gradients/f_count_18"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_12"
op: "Merge"
input: "gradients/f_count_19"
input: "gradients/NextIteration_12"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Switch_12"
op: "Switch"
input: "gradients/Merge_12"
input: "update_GRUpriorZ/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Add_6/y"
op: "Const"
input: "^update_GRUpriorZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Add_6"
op: "Add"
input: "gradients/Switch_12:1"
input: "gradients/Add_6/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_20"
op: "Exit"
input: "gradients/Switch_12"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_24"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/b_count_25"
op: "Enter"
input: "gradients/f_count_20"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_13"
op: "Merge"
input: "gradients/b_count_25"
input: "gradients/NextIteration_13"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/GreaterEqual_6/Enter"
op: "Enter"
input: "gradients/b_count_24"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/GreaterEqual_6"
op: "GreaterEqual"
input: "gradients/Merge_13"
input: "gradients/GreaterEqual_6/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_26"
op: "LoopCond"
input: "gradients/GreaterEqual_6"
, name: "gradients/Switch_13"
op: "Switch"
input: "gradients/Merge_13"
input: "gradients/b_count_26"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sub_6"
op: "Sub"
input: "gradients/Switch_13:1"
input: "gradients/GreaterEqual_6/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_27"
op: "Exit"
input: "gradients/Switch_13"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_21"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/f_count_22"
op: "Enter"
input: "gradients/f_count_21"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_14"
op: "Merge"
input: "gradients/f_count_22"
input: "gradients/NextIteration_14"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Switch_14"
op: "Switch"
input: "gradients/Merge_14"
input: "update_GRUpostX/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Add_7/y"
op: "Const"
input: "^update_GRUpostX/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Add_7"
op: "Add"
input: "gradients/Switch_14:1"
input: "gradients/Add_7/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_23"
op: "Exit"
input: "gradients/Switch_14"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_28"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/b_count_29"
op: "Enter"
input: "gradients/f_count_23"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_15"
op: "Merge"
input: "gradients/b_count_29"
input: "gradients/NextIteration_15"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/GreaterEqual_7/Enter"
op: "Enter"
input: "gradients/b_count_28"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/GreaterEqual_7"
op: "GreaterEqual"
input: "gradients/Merge_15"
input: "gradients/GreaterEqual_7/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_30"
op: "LoopCond"
input: "gradients/GreaterEqual_7"
, name: "gradients/Switch_15"
op: "Switch"
input: "gradients/Merge_15"
input: "gradients/b_count_30"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sub_7"
op: "Sub"
input: "gradients/Switch_15:1"
input: "gradients/GreaterEqual_7/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_31"
op: "Exit"
input: "gradients/Switch_15"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_24"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/f_count_25"
op: "Enter"
input: "gradients/f_count_24"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_16"
op: "Merge"
input: "gradients/f_count_25"
input: "gradients/NextIteration_16"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Switch_16"
op: "Switch"
input: "gradients/Merge_16"
input: "update_GRUpostZ/rnn/while/LoopCond"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Add_8/y"
op: "Const"
input: "^update_GRUpostZ/rnn/while/Identity"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Add_8"
op: "Add"
input: "gradients/Switch_16:1"
input: "gradients/Add_8/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/f_count_26"
op: "Exit"
input: "gradients/Switch_16"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_32"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/b_count_33"
op: "Enter"
input: "gradients/f_count_26"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/Merge_17"
op: "Merge"
input: "gradients/b_count_33"
input: "gradients/NextIteration_17"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/GreaterEqual_8/Enter"
op: "Enter"
input: "gradients/b_count_32"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/GreaterEqual_8"
op: "GreaterEqual"
input: "gradients/Merge_17"
input: "gradients/GreaterEqual_8/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_34"
op: "LoopCond"
input: "gradients/GreaterEqual_8"
, name: "gradients/Switch_17"
op: "Switch"
input: "gradients/Merge_17"
input: "gradients/b_count_34"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sub_8"
op: "Sub"
input: "gradients/Switch_17:1"
input: "gradients/GreaterEqual_8/Enter"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/b_count_35"
op: "Exit"
input: "gradients/Switch_17"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_96_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Fill"
, name: "gradients/add_96_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/add_96_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
, name: "gradients/add_96_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Fill"
input: "^gradients/add_96_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
, name: "gradients/add_95_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_96_grad/tuple/control_dependency"
, name: "gradients/add_95_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_96_grad/tuple/control_dependency"
input: "^gradients/add_95_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
, name: "gradients/add_95_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_96_grad/tuple/control_dependency"
input: "^gradients/add_95_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Fill"
    }
  }
}
, name: "gradients/mul_51_grad/Mul"
op: "Mul"
input: "gradients/add_96_grad/tuple/control_dependency_1"
input: "Mean_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_51_grad/Mul_1"
op: "Mul"
input: "gradients/add_96_grad/tuple/control_dependency_1"
input: "mul_51/x"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_51_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_51_grad/Mul"
input: "^gradients/mul_51_grad/Mul_1"
, name: "gradients/mul_51_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_51_grad/Mul"
input: "^gradients/mul_51_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_51_grad/Mul"
    }
  }
}
, name: "gradients/mul_51_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_51_grad/Mul_1"
input: "^gradients/mul_51_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_51_grad/Mul_1"
    }
  }
}
, name: "gradients/Mean_17_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_17_grad/Reshape"
op: "Reshape"
input: "gradients/add_95_grad/tuple/control_dependency"
input: "gradients/Mean_17_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_17_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 20
    }
  }
}
, name: "gradients/Mean_17_grad/Tile"
op: "Tile"
input: "gradients/Mean_17_grad/Reshape"
input: "gradients/Mean_17_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_17_grad/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 20.0
    }
  }
}
, name: "gradients/Mean_17_grad/truediv"
op: "RealDiv"
input: "gradients/Mean_17_grad/Tile"
input: "gradients/Mean_17_grad/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Mean_15_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_15_grad/Reshape"
op: "Reshape"
input: "gradients/add_95_grad/tuple/control_dependency_1"
input: "gradients/Mean_15_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_15_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 20
    }
  }
}
, name: "gradients/Mean_15_grad/Tile"
op: "Tile"
input: "gradients/Mean_15_grad/Reshape"
input: "gradients/Mean_15_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_15_grad/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 20.0
    }
  }
}
, name: "gradients/Mean_15_grad/truediv"
op: "RealDiv"
input: "gradients/Mean_15_grad/Tile"
input: "gradients/Mean_15_grad/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Mean_16_grad/Reshape/shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_16_grad/Reshape"
op: "Reshape"
input: "gradients/mul_51_grad/tuple/control_dependency_1"
input: "gradients/Mean_16_grad/Reshape/shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_16_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 20
    }
  }
}
, name: "gradients/Mean_16_grad/Tile"
op: "Tile"
input: "gradients/Mean_16_grad/Reshape"
input: "gradients/Mean_16_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_16_grad/Const_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 20.0
    }
  }
}
, name: "gradients/Mean_16_grad/truediv"
op: "RealDiv"
input: "gradients/Mean_16_grad/Tile"
input: "gradients/Mean_16_grad/Const_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/stack_grad/unstack"
op: "Unpack"
input: "gradients/Mean_17_grad/truediv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "axis"
  value {
    i: 0
  }
}
attr {
  key: "num"
  value {
    i: 20
  }
}
, name: "gradients/stack_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/stack_grad/unstack"
, name: "gradients/stack_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/stack_grad/unstack"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/stack_grad/unstack:1"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_2"
op: "Identity"
input: "gradients/stack_grad/unstack:2"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_3"
op: "Identity"
input: "gradients/stack_grad/unstack:3"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_4"
op: "Identity"
input: "gradients/stack_grad/unstack:4"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_5"
op: "Identity"
input: "gradients/stack_grad/unstack:5"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_6"
op: "Identity"
input: "gradients/stack_grad/unstack:6"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_7"
op: "Identity"
input: "gradients/stack_grad/unstack:7"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_8"
op: "Identity"
input: "gradients/stack_grad/unstack:8"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_9"
op: "Identity"
input: "gradients/stack_grad/unstack:9"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_10"
op: "Identity"
input: "gradients/stack_grad/unstack:10"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_11"
op: "Identity"
input: "gradients/stack_grad/unstack:11"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_12"
op: "Identity"
input: "gradients/stack_grad/unstack:12"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_13"
op: "Identity"
input: "gradients/stack_grad/unstack:13"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_14"
op: "Identity"
input: "gradients/stack_grad/unstack:14"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_15"
op: "Identity"
input: "gradients/stack_grad/unstack:15"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_16"
op: "Identity"
input: "gradients/stack_grad/unstack:16"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_17"
op: "Identity"
input: "gradients/stack_grad/unstack:17"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_18"
op: "Identity"
input: "gradients/stack_grad/unstack:18"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/stack_grad/tuple/control_dependency_19"
op: "Identity"
input: "gradients/stack_grad/unstack:19"
input: "^gradients/stack_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/stack_grad/unstack"
    }
  }
}
, name: "gradients/Sum_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Sum_2_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_2_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "gradients/Sum_2_grad/add"
op: "Add"
input: "Sum_2/reduction_indices"
input: "gradients/Sum_2_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_2_grad/Shape"
    }
  }
}
, name: "gradients/Sum_2_grad/mod"
op: "FloorMod"
input: "gradients/Sum_2_grad/add"
input: "gradients/Sum_2_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_2_grad/Shape"
    }
  }
}
, name: "gradients/Sum_2_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_2_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_2_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_2_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_2_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_2_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_2_grad/range"
op: "Range"
input: "gradients/Sum_2_grad/range/start"
input: "gradients/Sum_2_grad/Size"
input: "gradients/Sum_2_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_2_grad/Shape"
    }
  }
}
, name: "gradients/Sum_2_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_2_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_2_grad/Fill"
op: "Fill"
input: "gradients/Sum_2_grad/Shape_1"
input: "gradients/Sum_2_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_2_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_2_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_2_grad/range"
input: "gradients/Sum_2_grad/mod"
input: "gradients/Sum_2_grad/Shape"
input: "gradients/Sum_2_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_2_grad/Shape"
    }
  }
}
, name: "gradients/Sum_2_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_2_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_2_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_2_grad/DynamicStitch"
input: "gradients/Sum_2_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_2_grad/Shape"
    }
  }
}
, name: "gradients/Sum_2_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_2_grad/Shape"
input: "gradients/Sum_2_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_2_grad/Shape"
    }
  }
}
, name: "gradients/Sum_2_grad/Reshape"
op: "Reshape"
input: "gradients/Mean_15_grad/truediv"
input: "gradients/Sum_2_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_2_grad/Tile"
op: "Tile"
input: "gradients/Sum_2_grad/Reshape"
input: "gradients/Sum_2_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_4_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Sum_4_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_4_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "gradients/Sum_4_grad/add"
op: "Add"
input: "Sum_4/reduction_indices"
input: "gradients/Sum_4_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_4_grad/Shape"
    }
  }
}
, name: "gradients/Sum_4_grad/mod"
op: "FloorMod"
input: "gradients/Sum_4_grad/add"
input: "gradients/Sum_4_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_4_grad/Shape"
    }
  }
}
, name: "gradients/Sum_4_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_4_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_4_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_4_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_4_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_4_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_4_grad/range"
op: "Range"
input: "gradients/Sum_4_grad/range/start"
input: "gradients/Sum_4_grad/Size"
input: "gradients/Sum_4_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_4_grad/Shape"
    }
  }
}
, name: "gradients/Sum_4_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_4_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_4_grad/Fill"
op: "Fill"
input: "gradients/Sum_4_grad/Shape_1"
input: "gradients/Sum_4_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_4_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_4_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_4_grad/range"
input: "gradients/Sum_4_grad/mod"
input: "gradients/Sum_4_grad/Shape"
input: "gradients/Sum_4_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_4_grad/Shape"
    }
  }
}
, name: "gradients/Sum_4_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_4_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_4_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_4_grad/DynamicStitch"
input: "gradients/Sum_4_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_4_grad/Shape"
    }
  }
}
, name: "gradients/Sum_4_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_4_grad/Shape"
input: "gradients/Sum_4_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_4_grad/Shape"
    }
  }
}
, name: "gradients/Sum_4_grad/Reshape"
op: "Reshape"
input: "gradients/Mean_16_grad/truediv"
input: "gradients/Sum_4_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_4_grad/Tile"
op: "Tile"
input: "gradients/Sum_4_grad/Reshape"
input: "gradients/Sum_4_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sqrt_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt"
input: "gradients/stack_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_1_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_1"
input: "gradients/stack_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_2_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_2"
input: "gradients/stack_grad/tuple/control_dependency_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_3_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_3"
input: "gradients/stack_grad/tuple/control_dependency_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_4_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_4"
input: "gradients/stack_grad/tuple/control_dependency_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_5_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_5"
input: "gradients/stack_grad/tuple/control_dependency_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_6_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_6"
input: "gradients/stack_grad/tuple/control_dependency_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_7_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_7"
input: "gradients/stack_grad/tuple/control_dependency_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_8_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_8"
input: "gradients/stack_grad/tuple/control_dependency_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_9_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_9"
input: "gradients/stack_grad/tuple/control_dependency_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_10_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_10"
input: "gradients/stack_grad/tuple/control_dependency_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_11_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_11"
input: "gradients/stack_grad/tuple/control_dependency_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_12_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_12"
input: "gradients/stack_grad/tuple/control_dependency_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_13_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_13"
input: "gradients/stack_grad/tuple/control_dependency_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_14_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_14"
input: "gradients/stack_grad/tuple/control_dependency_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_15_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_15"
input: "gradients/stack_grad/tuple/control_dependency_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_16_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_16"
input: "gradients/stack_grad/tuple/control_dependency_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_17_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_17"
input: "gradients/stack_grad/tuple/control_dependency_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_18_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_18"
input: "gradients/stack_grad/tuple/control_dependency_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sqrt_19_grad/SqrtGrad"
op: "SqrtGrad"
input: "Sqrt_19"
input: "gradients/stack_grad/tuple/control_dependency_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_8_grad/Mul"
op: "Mul"
input: "gradients/Sum_2_grad/Tile"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_8_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_2_grad/Tile"
input: "mul_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_8_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_8_grad/Mul"
input: "^gradients/mul_8_grad/Mul_1"
, name: "gradients/mul_8_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_8_grad/Mul"
input: "^gradients/mul_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_8_grad/Mul"
    }
  }
}
, name: "gradients/mul_8_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_8_grad/Mul_1"
input: "^gradients/mul_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_8_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_10_grad/Mul"
op: "Mul"
input: "gradients/Sum_4_grad/Tile"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_10_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_4_grad/Tile"
input: "mul_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_10_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_10_grad/Mul"
input: "^gradients/mul_10_grad/Mul_1"
, name: "gradients/mul_10_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_10_grad/Mul"
input: "^gradients/mul_10_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_10_grad/Mul"
    }
  }
}
, name: "gradients/mul_10_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_10_grad/Mul_1"
input: "^gradients/mul_10_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_10_grad/Mul_1"
    }
  }
}
, name: "gradients/truediv_17_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_17_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_17_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_17_grad/Shape"
input: "gradients/truediv_17_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_17_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_grad/SqrtGrad"
input: "Sum_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_17_grad/Sum"
op: "Sum"
input: "gradients/truediv_17_grad/RealDiv"
input: "gradients/truediv_17_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_17_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_17_grad/Sum"
input: "gradients/truediv_17_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_17_grad/Neg"
op: "Neg"
input: "Sum_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_17_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_17_grad/Neg"
input: "Sum_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_17_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_17_grad/RealDiv_1"
input: "Sum_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_17_grad/mul"
op: "Mul"
input: "gradients/Sqrt_grad/SqrtGrad"
input: "gradients/truediv_17_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_17_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_17_grad/mul"
input: "gradients/truediv_17_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_17_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_17_grad/Sum_1"
input: "gradients/truediv_17_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_17_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_17_grad/Reshape"
input: "^gradients/truediv_17_grad/Reshape_1"
, name: "gradients/truediv_17_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_17_grad/Reshape"
input: "^gradients/truediv_17_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_17_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_17_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_17_grad/Reshape_1"
input: "^gradients/truediv_17_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_17_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_20_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_20_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_20_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_20_grad/Shape"
input: "gradients/truediv_20_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_20_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_1_grad/SqrtGrad"
input: "Sum_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_20_grad/Sum"
op: "Sum"
input: "gradients/truediv_20_grad/RealDiv"
input: "gradients/truediv_20_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_20_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_20_grad/Sum"
input: "gradients/truediv_20_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_20_grad/Neg"
op: "Neg"
input: "Sum_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_20_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_20_grad/Neg"
input: "Sum_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_20_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_20_grad/RealDiv_1"
input: "Sum_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_20_grad/mul"
op: "Mul"
input: "gradients/Sqrt_1_grad/SqrtGrad"
input: "gradients/truediv_20_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_20_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_20_grad/mul"
input: "gradients/truediv_20_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_20_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_20_grad/Sum_1"
input: "gradients/truediv_20_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_20_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_20_grad/Reshape"
input: "^gradients/truediv_20_grad/Reshape_1"
, name: "gradients/truediv_20_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_20_grad/Reshape"
input: "^gradients/truediv_20_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_20_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_20_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_20_grad/Reshape_1"
input: "^gradients/truediv_20_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_20_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_23_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_23_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_23_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_23_grad/Shape"
input: "gradients/truediv_23_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_23_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_2_grad/SqrtGrad"
input: "Sum_23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_23_grad/Sum"
op: "Sum"
input: "gradients/truediv_23_grad/RealDiv"
input: "gradients/truediv_23_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_23_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_23_grad/Sum"
input: "gradients/truediv_23_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_23_grad/Neg"
op: "Neg"
input: "Sum_25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_23_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_23_grad/Neg"
input: "Sum_23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_23_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_23_grad/RealDiv_1"
input: "Sum_23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_23_grad/mul"
op: "Mul"
input: "gradients/Sqrt_2_grad/SqrtGrad"
input: "gradients/truediv_23_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_23_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_23_grad/mul"
input: "gradients/truediv_23_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_23_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_23_grad/Sum_1"
input: "gradients/truediv_23_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_23_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_23_grad/Reshape"
input: "^gradients/truediv_23_grad/Reshape_1"
, name: "gradients/truediv_23_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_23_grad/Reshape"
input: "^gradients/truediv_23_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_23_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_23_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_23_grad/Reshape_1"
input: "^gradients/truediv_23_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_23_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_26_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_26_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_26_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_26_grad/Shape"
input: "gradients/truediv_26_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_26_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_3_grad/SqrtGrad"
input: "Sum_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_26_grad/Sum"
op: "Sum"
input: "gradients/truediv_26_grad/RealDiv"
input: "gradients/truediv_26_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_26_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_26_grad/Sum"
input: "gradients/truediv_26_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_26_grad/Neg"
op: "Neg"
input: "Sum_32"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_26_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_26_grad/Neg"
input: "Sum_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_26_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_26_grad/RealDiv_1"
input: "Sum_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_26_grad/mul"
op: "Mul"
input: "gradients/Sqrt_3_grad/SqrtGrad"
input: "gradients/truediv_26_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_26_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_26_grad/mul"
input: "gradients/truediv_26_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_26_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_26_grad/Sum_1"
input: "gradients/truediv_26_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_26_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_26_grad/Reshape"
input: "^gradients/truediv_26_grad/Reshape_1"
, name: "gradients/truediv_26_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_26_grad/Reshape"
input: "^gradients/truediv_26_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_26_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_26_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_26_grad/Reshape_1"
input: "^gradients/truediv_26_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_26_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_29_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_29_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_29_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_29_grad/Shape"
input: "gradients/truediv_29_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_29_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_4_grad/SqrtGrad"
input: "Sum_37"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_29_grad/Sum"
op: "Sum"
input: "gradients/truediv_29_grad/RealDiv"
input: "gradients/truediv_29_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_29_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_29_grad/Sum"
input: "gradients/truediv_29_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_29_grad/Neg"
op: "Neg"
input: "Sum_39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_29_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_29_grad/Neg"
input: "Sum_37"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_29_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_29_grad/RealDiv_1"
input: "Sum_37"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_29_grad/mul"
op: "Mul"
input: "gradients/Sqrt_4_grad/SqrtGrad"
input: "gradients/truediv_29_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_29_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_29_grad/mul"
input: "gradients/truediv_29_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_29_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_29_grad/Sum_1"
input: "gradients/truediv_29_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_29_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_29_grad/Reshape"
input: "^gradients/truediv_29_grad/Reshape_1"
, name: "gradients/truediv_29_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_29_grad/Reshape"
input: "^gradients/truediv_29_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_29_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_29_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_29_grad/Reshape_1"
input: "^gradients/truediv_29_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_29_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_32_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_32_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_32_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_32_grad/Shape"
input: "gradients/truediv_32_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_32_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_5_grad/SqrtGrad"
input: "Sum_44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_32_grad/Sum"
op: "Sum"
input: "gradients/truediv_32_grad/RealDiv"
input: "gradients/truediv_32_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_32_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_32_grad/Sum"
input: "gradients/truediv_32_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_32_grad/Neg"
op: "Neg"
input: "Sum_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_32_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_32_grad/Neg"
input: "Sum_44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_32_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_32_grad/RealDiv_1"
input: "Sum_44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_32_grad/mul"
op: "Mul"
input: "gradients/Sqrt_5_grad/SqrtGrad"
input: "gradients/truediv_32_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_32_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_32_grad/mul"
input: "gradients/truediv_32_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_32_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_32_grad/Sum_1"
input: "gradients/truediv_32_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_32_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_32_grad/Reshape"
input: "^gradients/truediv_32_grad/Reshape_1"
, name: "gradients/truediv_32_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_32_grad/Reshape"
input: "^gradients/truediv_32_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_32_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_32_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_32_grad/Reshape_1"
input: "^gradients/truediv_32_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_32_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_35_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_35_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_35_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_35_grad/Shape"
input: "gradients/truediv_35_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_35_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_6_grad/SqrtGrad"
input: "Sum_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_35_grad/Sum"
op: "Sum"
input: "gradients/truediv_35_grad/RealDiv"
input: "gradients/truediv_35_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_35_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_35_grad/Sum"
input: "gradients/truediv_35_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_35_grad/Neg"
op: "Neg"
input: "Sum_53"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_35_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_35_grad/Neg"
input: "Sum_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_35_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_35_grad/RealDiv_1"
input: "Sum_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_35_grad/mul"
op: "Mul"
input: "gradients/Sqrt_6_grad/SqrtGrad"
input: "gradients/truediv_35_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_35_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_35_grad/mul"
input: "gradients/truediv_35_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_35_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_35_grad/Sum_1"
input: "gradients/truediv_35_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_35_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_35_grad/Reshape"
input: "^gradients/truediv_35_grad/Reshape_1"
, name: "gradients/truediv_35_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_35_grad/Reshape"
input: "^gradients/truediv_35_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_35_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_35_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_35_grad/Reshape_1"
input: "^gradients/truediv_35_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_35_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_38_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_38_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_38_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_38_grad/Shape"
input: "gradients/truediv_38_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_38_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_7_grad/SqrtGrad"
input: "Sum_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_38_grad/Sum"
op: "Sum"
input: "gradients/truediv_38_grad/RealDiv"
input: "gradients/truediv_38_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_38_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_38_grad/Sum"
input: "gradients/truediv_38_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_38_grad/Neg"
op: "Neg"
input: "Sum_60"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_38_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_38_grad/Neg"
input: "Sum_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_38_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_38_grad/RealDiv_1"
input: "Sum_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_38_grad/mul"
op: "Mul"
input: "gradients/Sqrt_7_grad/SqrtGrad"
input: "gradients/truediv_38_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_38_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_38_grad/mul"
input: "gradients/truediv_38_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_38_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_38_grad/Sum_1"
input: "gradients/truediv_38_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_38_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_38_grad/Reshape"
input: "^gradients/truediv_38_grad/Reshape_1"
, name: "gradients/truediv_38_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_38_grad/Reshape"
input: "^gradients/truediv_38_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_38_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_38_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_38_grad/Reshape_1"
input: "^gradients/truediv_38_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_38_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_41_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_41_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_41_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_41_grad/Shape"
input: "gradients/truediv_41_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_41_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_8_grad/SqrtGrad"
input: "Sum_65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_41_grad/Sum"
op: "Sum"
input: "gradients/truediv_41_grad/RealDiv"
input: "gradients/truediv_41_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_41_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_41_grad/Sum"
input: "gradients/truediv_41_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_41_grad/Neg"
op: "Neg"
input: "Sum_67"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_41_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_41_grad/Neg"
input: "Sum_65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_41_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_41_grad/RealDiv_1"
input: "Sum_65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_41_grad/mul"
op: "Mul"
input: "gradients/Sqrt_8_grad/SqrtGrad"
input: "gradients/truediv_41_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_41_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_41_grad/mul"
input: "gradients/truediv_41_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_41_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_41_grad/Sum_1"
input: "gradients/truediv_41_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_41_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_41_grad/Reshape"
input: "^gradients/truediv_41_grad/Reshape_1"
, name: "gradients/truediv_41_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_41_grad/Reshape"
input: "^gradients/truediv_41_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_41_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_41_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_41_grad/Reshape_1"
input: "^gradients/truediv_41_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_41_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_44_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_44_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_44_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_44_grad/Shape"
input: "gradients/truediv_44_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_44_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_9_grad/SqrtGrad"
input: "Sum_72"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_44_grad/Sum"
op: "Sum"
input: "gradients/truediv_44_grad/RealDiv"
input: "gradients/truediv_44_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_44_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_44_grad/Sum"
input: "gradients/truediv_44_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_44_grad/Neg"
op: "Neg"
input: "Sum_74"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_44_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_44_grad/Neg"
input: "Sum_72"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_44_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_44_grad/RealDiv_1"
input: "Sum_72"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_44_grad/mul"
op: "Mul"
input: "gradients/Sqrt_9_grad/SqrtGrad"
input: "gradients/truediv_44_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_44_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_44_grad/mul"
input: "gradients/truediv_44_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_44_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_44_grad/Sum_1"
input: "gradients/truediv_44_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_44_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_44_grad/Reshape"
input: "^gradients/truediv_44_grad/Reshape_1"
, name: "gradients/truediv_44_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_44_grad/Reshape"
input: "^gradients/truediv_44_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_44_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_44_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_44_grad/Reshape_1"
input: "^gradients/truediv_44_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_44_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_47_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_47_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_47_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_47_grad/Shape"
input: "gradients/truediv_47_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_47_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_10_grad/SqrtGrad"
input: "Sum_79"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_47_grad/Sum"
op: "Sum"
input: "gradients/truediv_47_grad/RealDiv"
input: "gradients/truediv_47_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_47_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_47_grad/Sum"
input: "gradients/truediv_47_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_47_grad/Neg"
op: "Neg"
input: "Sum_81"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_47_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_47_grad/Neg"
input: "Sum_79"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_47_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_47_grad/RealDiv_1"
input: "Sum_79"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_47_grad/mul"
op: "Mul"
input: "gradients/Sqrt_10_grad/SqrtGrad"
input: "gradients/truediv_47_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_47_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_47_grad/mul"
input: "gradients/truediv_47_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_47_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_47_grad/Sum_1"
input: "gradients/truediv_47_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_47_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_47_grad/Reshape"
input: "^gradients/truediv_47_grad/Reshape_1"
, name: "gradients/truediv_47_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_47_grad/Reshape"
input: "^gradients/truediv_47_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_47_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_47_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_47_grad/Reshape_1"
input: "^gradients/truediv_47_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_47_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_50_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_50_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_50_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_50_grad/Shape"
input: "gradients/truediv_50_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_50_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_11_grad/SqrtGrad"
input: "Sum_86"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_50_grad/Sum"
op: "Sum"
input: "gradients/truediv_50_grad/RealDiv"
input: "gradients/truediv_50_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_50_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_50_grad/Sum"
input: "gradients/truediv_50_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_50_grad/Neg"
op: "Neg"
input: "Sum_88"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_50_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_50_grad/Neg"
input: "Sum_86"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_50_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_50_grad/RealDiv_1"
input: "Sum_86"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_50_grad/mul"
op: "Mul"
input: "gradients/Sqrt_11_grad/SqrtGrad"
input: "gradients/truediv_50_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_50_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_50_grad/mul"
input: "gradients/truediv_50_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_50_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_50_grad/Sum_1"
input: "gradients/truediv_50_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_50_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_50_grad/Reshape"
input: "^gradients/truediv_50_grad/Reshape_1"
, name: "gradients/truediv_50_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_50_grad/Reshape"
input: "^gradients/truediv_50_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_50_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_50_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_50_grad/Reshape_1"
input: "^gradients/truediv_50_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_50_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_53_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_53_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_53_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_53_grad/Shape"
input: "gradients/truediv_53_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_53_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_12_grad/SqrtGrad"
input: "Sum_93"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_53_grad/Sum"
op: "Sum"
input: "gradients/truediv_53_grad/RealDiv"
input: "gradients/truediv_53_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_53_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_53_grad/Sum"
input: "gradients/truediv_53_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_53_grad/Neg"
op: "Neg"
input: "Sum_95"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_53_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_53_grad/Neg"
input: "Sum_93"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_53_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_53_grad/RealDiv_1"
input: "Sum_93"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_53_grad/mul"
op: "Mul"
input: "gradients/Sqrt_12_grad/SqrtGrad"
input: "gradients/truediv_53_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_53_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_53_grad/mul"
input: "gradients/truediv_53_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_53_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_53_grad/Sum_1"
input: "gradients/truediv_53_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_53_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_53_grad/Reshape"
input: "^gradients/truediv_53_grad/Reshape_1"
, name: "gradients/truediv_53_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_53_grad/Reshape"
input: "^gradients/truediv_53_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_53_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_53_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_53_grad/Reshape_1"
input: "^gradients/truediv_53_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_53_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_56_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_56_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_56_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_56_grad/Shape"
input: "gradients/truediv_56_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_56_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_13_grad/SqrtGrad"
input: "Sum_100"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_56_grad/Sum"
op: "Sum"
input: "gradients/truediv_56_grad/RealDiv"
input: "gradients/truediv_56_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_56_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_56_grad/Sum"
input: "gradients/truediv_56_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_56_grad/Neg"
op: "Neg"
input: "Sum_102"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_56_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_56_grad/Neg"
input: "Sum_100"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_56_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_56_grad/RealDiv_1"
input: "Sum_100"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_56_grad/mul"
op: "Mul"
input: "gradients/Sqrt_13_grad/SqrtGrad"
input: "gradients/truediv_56_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_56_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_56_grad/mul"
input: "gradients/truediv_56_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_56_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_56_grad/Sum_1"
input: "gradients/truediv_56_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_56_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_56_grad/Reshape"
input: "^gradients/truediv_56_grad/Reshape_1"
, name: "gradients/truediv_56_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_56_grad/Reshape"
input: "^gradients/truediv_56_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_56_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_56_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_56_grad/Reshape_1"
input: "^gradients/truediv_56_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_56_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_59_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_59_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_59_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_59_grad/Shape"
input: "gradients/truediv_59_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_59_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_14_grad/SqrtGrad"
input: "Sum_107"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_59_grad/Sum"
op: "Sum"
input: "gradients/truediv_59_grad/RealDiv"
input: "gradients/truediv_59_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_59_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_59_grad/Sum"
input: "gradients/truediv_59_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_59_grad/Neg"
op: "Neg"
input: "Sum_109"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_59_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_59_grad/Neg"
input: "Sum_107"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_59_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_59_grad/RealDiv_1"
input: "Sum_107"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_59_grad/mul"
op: "Mul"
input: "gradients/Sqrt_14_grad/SqrtGrad"
input: "gradients/truediv_59_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_59_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_59_grad/mul"
input: "gradients/truediv_59_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_59_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_59_grad/Sum_1"
input: "gradients/truediv_59_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_59_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_59_grad/Reshape"
input: "^gradients/truediv_59_grad/Reshape_1"
, name: "gradients/truediv_59_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_59_grad/Reshape"
input: "^gradients/truediv_59_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_59_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_59_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_59_grad/Reshape_1"
input: "^gradients/truediv_59_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_59_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_62_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_62_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_62_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_62_grad/Shape"
input: "gradients/truediv_62_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_62_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_15_grad/SqrtGrad"
input: "Sum_114"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_62_grad/Sum"
op: "Sum"
input: "gradients/truediv_62_grad/RealDiv"
input: "gradients/truediv_62_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_62_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_62_grad/Sum"
input: "gradients/truediv_62_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_62_grad/Neg"
op: "Neg"
input: "Sum_116"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_62_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_62_grad/Neg"
input: "Sum_114"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_62_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_62_grad/RealDiv_1"
input: "Sum_114"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_62_grad/mul"
op: "Mul"
input: "gradients/Sqrt_15_grad/SqrtGrad"
input: "gradients/truediv_62_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_62_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_62_grad/mul"
input: "gradients/truediv_62_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_62_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_62_grad/Sum_1"
input: "gradients/truediv_62_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_62_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_62_grad/Reshape"
input: "^gradients/truediv_62_grad/Reshape_1"
, name: "gradients/truediv_62_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_62_grad/Reshape"
input: "^gradients/truediv_62_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_62_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_62_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_62_grad/Reshape_1"
input: "^gradients/truediv_62_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_62_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_65_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_65_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_65_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_65_grad/Shape"
input: "gradients/truediv_65_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_65_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_16_grad/SqrtGrad"
input: "Sum_121"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_65_grad/Sum"
op: "Sum"
input: "gradients/truediv_65_grad/RealDiv"
input: "gradients/truediv_65_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_65_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_65_grad/Sum"
input: "gradients/truediv_65_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_65_grad/Neg"
op: "Neg"
input: "Sum_123"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_65_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_65_grad/Neg"
input: "Sum_121"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_65_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_65_grad/RealDiv_1"
input: "Sum_121"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_65_grad/mul"
op: "Mul"
input: "gradients/Sqrt_16_grad/SqrtGrad"
input: "gradients/truediv_65_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_65_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_65_grad/mul"
input: "gradients/truediv_65_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_65_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_65_grad/Sum_1"
input: "gradients/truediv_65_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_65_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_65_grad/Reshape"
input: "^gradients/truediv_65_grad/Reshape_1"
, name: "gradients/truediv_65_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_65_grad/Reshape"
input: "^gradients/truediv_65_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_65_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_65_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_65_grad/Reshape_1"
input: "^gradients/truediv_65_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_65_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_68_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_68_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_68_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_68_grad/Shape"
input: "gradients/truediv_68_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_68_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_17_grad/SqrtGrad"
input: "Sum_128"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_68_grad/Sum"
op: "Sum"
input: "gradients/truediv_68_grad/RealDiv"
input: "gradients/truediv_68_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_68_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_68_grad/Sum"
input: "gradients/truediv_68_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_68_grad/Neg"
op: "Neg"
input: "Sum_130"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_68_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_68_grad/Neg"
input: "Sum_128"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_68_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_68_grad/RealDiv_1"
input: "Sum_128"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_68_grad/mul"
op: "Mul"
input: "gradients/Sqrt_17_grad/SqrtGrad"
input: "gradients/truediv_68_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_68_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_68_grad/mul"
input: "gradients/truediv_68_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_68_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_68_grad/Sum_1"
input: "gradients/truediv_68_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_68_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_68_grad/Reshape"
input: "^gradients/truediv_68_grad/Reshape_1"
, name: "gradients/truediv_68_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_68_grad/Reshape"
input: "^gradients/truediv_68_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_68_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_68_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_68_grad/Reshape_1"
input: "^gradients/truediv_68_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_68_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_71_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_71_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_71_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_71_grad/Shape"
input: "gradients/truediv_71_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_71_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_18_grad/SqrtGrad"
input: "Sum_135"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_71_grad/Sum"
op: "Sum"
input: "gradients/truediv_71_grad/RealDiv"
input: "gradients/truediv_71_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_71_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_71_grad/Sum"
input: "gradients/truediv_71_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_71_grad/Neg"
op: "Neg"
input: "Sum_137"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_71_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_71_grad/Neg"
input: "Sum_135"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_71_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_71_grad/RealDiv_1"
input: "Sum_135"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_71_grad/mul"
op: "Mul"
input: "gradients/Sqrt_18_grad/SqrtGrad"
input: "gradients/truediv_71_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_71_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_71_grad/mul"
input: "gradients/truediv_71_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_71_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_71_grad/Sum_1"
input: "gradients/truediv_71_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_71_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_71_grad/Reshape"
input: "^gradients/truediv_71_grad/Reshape_1"
, name: "gradients/truediv_71_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_71_grad/Reshape"
input: "^gradients/truediv_71_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_71_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_71_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_71_grad/Reshape_1"
input: "^gradients/truediv_71_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_71_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_74_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_74_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_74_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_74_grad/Shape"
input: "gradients/truediv_74_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_74_grad/RealDiv"
op: "RealDiv"
input: "gradients/Sqrt_19_grad/SqrtGrad"
input: "Sum_142"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_74_grad/Sum"
op: "Sum"
input: "gradients/truediv_74_grad/RealDiv"
input: "gradients/truediv_74_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_74_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_74_grad/Sum"
input: "gradients/truediv_74_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_74_grad/Neg"
op: "Neg"
input: "Sum_144"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_74_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_74_grad/Neg"
input: "Sum_142"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_74_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_74_grad/RealDiv_1"
input: "Sum_142"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_74_grad/mul"
op: "Mul"
input: "gradients/Sqrt_19_grad/SqrtGrad"
input: "gradients/truediv_74_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_74_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_74_grad/mul"
input: "gradients/truediv_74_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_74_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_74_grad/Sum_1"
input: "gradients/truediv_74_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_74_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_74_grad/Reshape"
input: "^gradients/truediv_74_grad/Reshape_1"
, name: "gradients/truediv_74_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_74_grad/Reshape"
input: "^gradients/truediv_74_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_74_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_74_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_74_grad/Reshape_1"
input: "^gradients/truediv_74_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_74_grad/Reshape_1"
    }
  }
}
, name: "gradients/mul_7_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/mul_7_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/mul_7_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/mul_7_grad/Shape"
input: "gradients/mul_7_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/mul_7_grad/Mul"
op: "Mul"
input: "gradients/mul_8_grad/tuple/control_dependency"
input: "Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_7_grad/Sum"
op: "Sum"
input: "gradients/mul_7_grad/Mul"
input: "gradients/mul_7_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/mul_7_grad/Reshape"
op: "Reshape"
input: "gradients/mul_7_grad/Sum"
input: "gradients/mul_7_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/mul_7_grad/Mul_1"
op: "Mul"
input: "mul_7/x"
input: "gradients/mul_8_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_7_grad/Sum_1"
op: "Sum"
input: "gradients/mul_7_grad/Mul_1"
input: "gradients/mul_7_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/mul_7_grad/Reshape_1"
op: "Reshape"
input: "gradients/mul_7_grad/Sum_1"
input: "gradients/mul_7_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/mul_7_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_7_grad/Reshape"
input: "^gradients/mul_7_grad/Reshape_1"
, name: "gradients/mul_7_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_7_grad/Reshape"
input: "^gradients/mul_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_7_grad/Reshape"
    }
  }
}
, name: "gradients/mul_7_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_7_grad/Reshape_1"
input: "^gradients/mul_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_7_grad/Reshape_1"
    }
  }
}
, name: "gradients/mul_9_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/mul_9_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/mul_9_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/mul_9_grad/Shape"
input: "gradients/mul_9_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/mul_9_grad/Mul"
op: "Mul"
input: "gradients/mul_10_grad/tuple/control_dependency"
input: "Sum_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_9_grad/Sum"
op: "Sum"
input: "gradients/mul_9_grad/Mul"
input: "gradients/mul_9_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/mul_9_grad/Reshape"
op: "Reshape"
input: "gradients/mul_9_grad/Sum"
input: "gradients/mul_9_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/mul_9_grad/Mul_1"
op: "Mul"
input: "mul_9/x"
input: "gradients/mul_10_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_9_grad/Sum_1"
op: "Sum"
input: "gradients/mul_9_grad/Mul_1"
input: "gradients/mul_9_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/mul_9_grad/Reshape_1"
op: "Reshape"
input: "gradients/mul_9_grad/Sum_1"
input: "gradients/mul_9_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/mul_9_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_9_grad/Reshape"
input: "^gradients/mul_9_grad/Reshape_1"
, name: "gradients/mul_9_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_9_grad/Reshape"
input: "^gradients/mul_9_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_9_grad/Reshape"
    }
  }
}
, name: "gradients/mul_9_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_9_grad/Reshape_1"
input: "^gradients/mul_9_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_9_grad/Reshape_1"
    }
  }
}
, name: "gradients/Sum_11_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_11_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_11_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_11_grad/add"
op: "Add"
input: "Sum_11/reduction_indices"
input: "gradients/Sum_11_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_11_grad/Shape"
    }
  }
}
, name: "gradients/Sum_11_grad/mod"
op: "FloorMod"
input: "gradients/Sum_11_grad/add"
input: "gradients/Sum_11_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_11_grad/Shape"
    }
  }
}
, name: "gradients/Sum_11_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_11_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_11_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_11_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_11_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_11_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_11_grad/range"
op: "Range"
input: "gradients/Sum_11_grad/range/start"
input: "gradients/Sum_11_grad/Size"
input: "gradients/Sum_11_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_11_grad/Shape"
    }
  }
}
, name: "gradients/Sum_11_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_11_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_11_grad/Fill"
op: "Fill"
input: "gradients/Sum_11_grad/Shape_1"
input: "gradients/Sum_11_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_11_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_11_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_11_grad/range"
input: "gradients/Sum_11_grad/mod"
input: "gradients/Sum_11_grad/Shape"
input: "gradients/Sum_11_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_11_grad/Shape"
    }
  }
}
, name: "gradients/Sum_11_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_11_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_11_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_11_grad/DynamicStitch"
input: "gradients/Sum_11_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_11_grad/Shape"
    }
  }
}
, name: "gradients/Sum_11_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_11_grad/Shape"
input: "gradients/Sum_11_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_11_grad/Shape"
    }
  }
}
, name: "gradients/Sum_11_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_17_grad/tuple/control_dependency"
input: "gradients/Sum_11_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_11_grad/Tile"
op: "Tile"
input: "gradients/Sum_11_grad/Reshape"
input: "gradients/Sum_11_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_18_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_18_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_18_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_18_grad/add"
op: "Add"
input: "Sum_18/reduction_indices"
input: "gradients/Sum_18_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_18_grad/Shape"
    }
  }
}
, name: "gradients/Sum_18_grad/mod"
op: "FloorMod"
input: "gradients/Sum_18_grad/add"
input: "gradients/Sum_18_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_18_grad/Shape"
    }
  }
}
, name: "gradients/Sum_18_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_18_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_18_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_18_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_18_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_18_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_18_grad/range"
op: "Range"
input: "gradients/Sum_18_grad/range/start"
input: "gradients/Sum_18_grad/Size"
input: "gradients/Sum_18_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_18_grad/Shape"
    }
  }
}
, name: "gradients/Sum_18_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_18_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_18_grad/Fill"
op: "Fill"
input: "gradients/Sum_18_grad/Shape_1"
input: "gradients/Sum_18_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_18_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_18_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_18_grad/range"
input: "gradients/Sum_18_grad/mod"
input: "gradients/Sum_18_grad/Shape"
input: "gradients/Sum_18_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_18_grad/Shape"
    }
  }
}
, name: "gradients/Sum_18_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_18_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_18_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_18_grad/DynamicStitch"
input: "gradients/Sum_18_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_18_grad/Shape"
    }
  }
}
, name: "gradients/Sum_18_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_18_grad/Shape"
input: "gradients/Sum_18_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_18_grad/Shape"
    }
  }
}
, name: "gradients/Sum_18_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_20_grad/tuple/control_dependency"
input: "gradients/Sum_18_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_18_grad/Tile"
op: "Tile"
input: "gradients/Sum_18_grad/Reshape"
input: "gradients/Sum_18_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_25_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_25_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_25_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_25_grad/add"
op: "Add"
input: "Sum_25/reduction_indices"
input: "gradients/Sum_25_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_25_grad/Shape"
    }
  }
}
, name: "gradients/Sum_25_grad/mod"
op: "FloorMod"
input: "gradients/Sum_25_grad/add"
input: "gradients/Sum_25_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_25_grad/Shape"
    }
  }
}
, name: "gradients/Sum_25_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_25_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_25_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_25_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_25_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_25_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_25_grad/range"
op: "Range"
input: "gradients/Sum_25_grad/range/start"
input: "gradients/Sum_25_grad/Size"
input: "gradients/Sum_25_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_25_grad/Shape"
    }
  }
}
, name: "gradients/Sum_25_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_25_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_25_grad/Fill"
op: "Fill"
input: "gradients/Sum_25_grad/Shape_1"
input: "gradients/Sum_25_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_25_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_25_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_25_grad/range"
input: "gradients/Sum_25_grad/mod"
input: "gradients/Sum_25_grad/Shape"
input: "gradients/Sum_25_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_25_grad/Shape"
    }
  }
}
, name: "gradients/Sum_25_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_25_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_25_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_25_grad/DynamicStitch"
input: "gradients/Sum_25_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_25_grad/Shape"
    }
  }
}
, name: "gradients/Sum_25_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_25_grad/Shape"
input: "gradients/Sum_25_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_25_grad/Shape"
    }
  }
}
, name: "gradients/Sum_25_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_23_grad/tuple/control_dependency"
input: "gradients/Sum_25_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_25_grad/Tile"
op: "Tile"
input: "gradients/Sum_25_grad/Reshape"
input: "gradients/Sum_25_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_32_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_32_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_32_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_32_grad/add"
op: "Add"
input: "Sum_32/reduction_indices"
input: "gradients/Sum_32_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_32_grad/Shape"
    }
  }
}
, name: "gradients/Sum_32_grad/mod"
op: "FloorMod"
input: "gradients/Sum_32_grad/add"
input: "gradients/Sum_32_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_32_grad/Shape"
    }
  }
}
, name: "gradients/Sum_32_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_32_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_32_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_32_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_32_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_32_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_32_grad/range"
op: "Range"
input: "gradients/Sum_32_grad/range/start"
input: "gradients/Sum_32_grad/Size"
input: "gradients/Sum_32_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_32_grad/Shape"
    }
  }
}
, name: "gradients/Sum_32_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_32_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_32_grad/Fill"
op: "Fill"
input: "gradients/Sum_32_grad/Shape_1"
input: "gradients/Sum_32_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_32_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_32_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_32_grad/range"
input: "gradients/Sum_32_grad/mod"
input: "gradients/Sum_32_grad/Shape"
input: "gradients/Sum_32_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_32_grad/Shape"
    }
  }
}
, name: "gradients/Sum_32_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_32_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_32_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_32_grad/DynamicStitch"
input: "gradients/Sum_32_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_32_grad/Shape"
    }
  }
}
, name: "gradients/Sum_32_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_32_grad/Shape"
input: "gradients/Sum_32_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_32_grad/Shape"
    }
  }
}
, name: "gradients/Sum_32_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_26_grad/tuple/control_dependency"
input: "gradients/Sum_32_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_32_grad/Tile"
op: "Tile"
input: "gradients/Sum_32_grad/Reshape"
input: "gradients/Sum_32_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_39_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_39_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_39_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_39_grad/add"
op: "Add"
input: "Sum_39/reduction_indices"
input: "gradients/Sum_39_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_39_grad/Shape"
    }
  }
}
, name: "gradients/Sum_39_grad/mod"
op: "FloorMod"
input: "gradients/Sum_39_grad/add"
input: "gradients/Sum_39_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_39_grad/Shape"
    }
  }
}
, name: "gradients/Sum_39_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_39_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_39_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_39_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_39_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_39_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_39_grad/range"
op: "Range"
input: "gradients/Sum_39_grad/range/start"
input: "gradients/Sum_39_grad/Size"
input: "gradients/Sum_39_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_39_grad/Shape"
    }
  }
}
, name: "gradients/Sum_39_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_39_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_39_grad/Fill"
op: "Fill"
input: "gradients/Sum_39_grad/Shape_1"
input: "gradients/Sum_39_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_39_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_39_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_39_grad/range"
input: "gradients/Sum_39_grad/mod"
input: "gradients/Sum_39_grad/Shape"
input: "gradients/Sum_39_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_39_grad/Shape"
    }
  }
}
, name: "gradients/Sum_39_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_39_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_39_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_39_grad/DynamicStitch"
input: "gradients/Sum_39_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_39_grad/Shape"
    }
  }
}
, name: "gradients/Sum_39_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_39_grad/Shape"
input: "gradients/Sum_39_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_39_grad/Shape"
    }
  }
}
, name: "gradients/Sum_39_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_29_grad/tuple/control_dependency"
input: "gradients/Sum_39_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_39_grad/Tile"
op: "Tile"
input: "gradients/Sum_39_grad/Reshape"
input: "gradients/Sum_39_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_46_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_46_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_46_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_46_grad/add"
op: "Add"
input: "Sum_46/reduction_indices"
input: "gradients/Sum_46_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_46_grad/Shape"
    }
  }
}
, name: "gradients/Sum_46_grad/mod"
op: "FloorMod"
input: "gradients/Sum_46_grad/add"
input: "gradients/Sum_46_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_46_grad/Shape"
    }
  }
}
, name: "gradients/Sum_46_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_46_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_46_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_46_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_46_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_46_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_46_grad/range"
op: "Range"
input: "gradients/Sum_46_grad/range/start"
input: "gradients/Sum_46_grad/Size"
input: "gradients/Sum_46_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_46_grad/Shape"
    }
  }
}
, name: "gradients/Sum_46_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_46_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_46_grad/Fill"
op: "Fill"
input: "gradients/Sum_46_grad/Shape_1"
input: "gradients/Sum_46_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_46_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_46_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_46_grad/range"
input: "gradients/Sum_46_grad/mod"
input: "gradients/Sum_46_grad/Shape"
input: "gradients/Sum_46_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_46_grad/Shape"
    }
  }
}
, name: "gradients/Sum_46_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_46_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_46_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_46_grad/DynamicStitch"
input: "gradients/Sum_46_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_46_grad/Shape"
    }
  }
}
, name: "gradients/Sum_46_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_46_grad/Shape"
input: "gradients/Sum_46_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_46_grad/Shape"
    }
  }
}
, name: "gradients/Sum_46_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_32_grad/tuple/control_dependency"
input: "gradients/Sum_46_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_46_grad/Tile"
op: "Tile"
input: "gradients/Sum_46_grad/Reshape"
input: "gradients/Sum_46_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_53_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_53_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_53_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_53_grad/add"
op: "Add"
input: "Sum_53/reduction_indices"
input: "gradients/Sum_53_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_53_grad/Shape"
    }
  }
}
, name: "gradients/Sum_53_grad/mod"
op: "FloorMod"
input: "gradients/Sum_53_grad/add"
input: "gradients/Sum_53_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_53_grad/Shape"
    }
  }
}
, name: "gradients/Sum_53_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_53_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_53_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_53_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_53_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_53_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_53_grad/range"
op: "Range"
input: "gradients/Sum_53_grad/range/start"
input: "gradients/Sum_53_grad/Size"
input: "gradients/Sum_53_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_53_grad/Shape"
    }
  }
}
, name: "gradients/Sum_53_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_53_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_53_grad/Fill"
op: "Fill"
input: "gradients/Sum_53_grad/Shape_1"
input: "gradients/Sum_53_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_53_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_53_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_53_grad/range"
input: "gradients/Sum_53_grad/mod"
input: "gradients/Sum_53_grad/Shape"
input: "gradients/Sum_53_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_53_grad/Shape"
    }
  }
}
, name: "gradients/Sum_53_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_53_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_53_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_53_grad/DynamicStitch"
input: "gradients/Sum_53_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_53_grad/Shape"
    }
  }
}
, name: "gradients/Sum_53_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_53_grad/Shape"
input: "gradients/Sum_53_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_53_grad/Shape"
    }
  }
}
, name: "gradients/Sum_53_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_35_grad/tuple/control_dependency"
input: "gradients/Sum_53_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_53_grad/Tile"
op: "Tile"
input: "gradients/Sum_53_grad/Reshape"
input: "gradients/Sum_53_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_60_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_60_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_60_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_60_grad/add"
op: "Add"
input: "Sum_60/reduction_indices"
input: "gradients/Sum_60_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_60_grad/Shape"
    }
  }
}
, name: "gradients/Sum_60_grad/mod"
op: "FloorMod"
input: "gradients/Sum_60_grad/add"
input: "gradients/Sum_60_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_60_grad/Shape"
    }
  }
}
, name: "gradients/Sum_60_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_60_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_60_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_60_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_60_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_60_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_60_grad/range"
op: "Range"
input: "gradients/Sum_60_grad/range/start"
input: "gradients/Sum_60_grad/Size"
input: "gradients/Sum_60_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_60_grad/Shape"
    }
  }
}
, name: "gradients/Sum_60_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_60_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_60_grad/Fill"
op: "Fill"
input: "gradients/Sum_60_grad/Shape_1"
input: "gradients/Sum_60_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_60_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_60_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_60_grad/range"
input: "gradients/Sum_60_grad/mod"
input: "gradients/Sum_60_grad/Shape"
input: "gradients/Sum_60_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_60_grad/Shape"
    }
  }
}
, name: "gradients/Sum_60_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_60_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_60_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_60_grad/DynamicStitch"
input: "gradients/Sum_60_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_60_grad/Shape"
    }
  }
}
, name: "gradients/Sum_60_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_60_grad/Shape"
input: "gradients/Sum_60_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_60_grad/Shape"
    }
  }
}
, name: "gradients/Sum_60_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_38_grad/tuple/control_dependency"
input: "gradients/Sum_60_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_60_grad/Tile"
op: "Tile"
input: "gradients/Sum_60_grad/Reshape"
input: "gradients/Sum_60_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_67_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_67_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_67_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_67_grad/add"
op: "Add"
input: "Sum_67/reduction_indices"
input: "gradients/Sum_67_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_67_grad/Shape"
    }
  }
}
, name: "gradients/Sum_67_grad/mod"
op: "FloorMod"
input: "gradients/Sum_67_grad/add"
input: "gradients/Sum_67_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_67_grad/Shape"
    }
  }
}
, name: "gradients/Sum_67_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_67_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_67_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_67_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_67_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_67_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_67_grad/range"
op: "Range"
input: "gradients/Sum_67_grad/range/start"
input: "gradients/Sum_67_grad/Size"
input: "gradients/Sum_67_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_67_grad/Shape"
    }
  }
}
, name: "gradients/Sum_67_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_67_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_67_grad/Fill"
op: "Fill"
input: "gradients/Sum_67_grad/Shape_1"
input: "gradients/Sum_67_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_67_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_67_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_67_grad/range"
input: "gradients/Sum_67_grad/mod"
input: "gradients/Sum_67_grad/Shape"
input: "gradients/Sum_67_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_67_grad/Shape"
    }
  }
}
, name: "gradients/Sum_67_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_67_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_67_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_67_grad/DynamicStitch"
input: "gradients/Sum_67_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_67_grad/Shape"
    }
  }
}
, name: "gradients/Sum_67_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_67_grad/Shape"
input: "gradients/Sum_67_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_67_grad/Shape"
    }
  }
}
, name: "gradients/Sum_67_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_41_grad/tuple/control_dependency"
input: "gradients/Sum_67_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_67_grad/Tile"
op: "Tile"
input: "gradients/Sum_67_grad/Reshape"
input: "gradients/Sum_67_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_74_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_74_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_74_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_74_grad/add"
op: "Add"
input: "Sum_74/reduction_indices"
input: "gradients/Sum_74_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_74_grad/Shape"
    }
  }
}
, name: "gradients/Sum_74_grad/mod"
op: "FloorMod"
input: "gradients/Sum_74_grad/add"
input: "gradients/Sum_74_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_74_grad/Shape"
    }
  }
}
, name: "gradients/Sum_74_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_74_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_74_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_74_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_74_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_74_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_74_grad/range"
op: "Range"
input: "gradients/Sum_74_grad/range/start"
input: "gradients/Sum_74_grad/Size"
input: "gradients/Sum_74_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_74_grad/Shape"
    }
  }
}
, name: "gradients/Sum_74_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_74_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_74_grad/Fill"
op: "Fill"
input: "gradients/Sum_74_grad/Shape_1"
input: "gradients/Sum_74_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_74_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_74_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_74_grad/range"
input: "gradients/Sum_74_grad/mod"
input: "gradients/Sum_74_grad/Shape"
input: "gradients/Sum_74_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_74_grad/Shape"
    }
  }
}
, name: "gradients/Sum_74_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_74_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_74_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_74_grad/DynamicStitch"
input: "gradients/Sum_74_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_74_grad/Shape"
    }
  }
}
, name: "gradients/Sum_74_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_74_grad/Shape"
input: "gradients/Sum_74_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_74_grad/Shape"
    }
  }
}
, name: "gradients/Sum_74_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_44_grad/tuple/control_dependency"
input: "gradients/Sum_74_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_74_grad/Tile"
op: "Tile"
input: "gradients/Sum_74_grad/Reshape"
input: "gradients/Sum_74_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_81_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_81_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_81_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_81_grad/add"
op: "Add"
input: "Sum_81/reduction_indices"
input: "gradients/Sum_81_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_81_grad/Shape"
    }
  }
}
, name: "gradients/Sum_81_grad/mod"
op: "FloorMod"
input: "gradients/Sum_81_grad/add"
input: "gradients/Sum_81_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_81_grad/Shape"
    }
  }
}
, name: "gradients/Sum_81_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_81_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_81_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_81_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_81_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_81_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_81_grad/range"
op: "Range"
input: "gradients/Sum_81_grad/range/start"
input: "gradients/Sum_81_grad/Size"
input: "gradients/Sum_81_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_81_grad/Shape"
    }
  }
}
, name: "gradients/Sum_81_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_81_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_81_grad/Fill"
op: "Fill"
input: "gradients/Sum_81_grad/Shape_1"
input: "gradients/Sum_81_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_81_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_81_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_81_grad/range"
input: "gradients/Sum_81_grad/mod"
input: "gradients/Sum_81_grad/Shape"
input: "gradients/Sum_81_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_81_grad/Shape"
    }
  }
}
, name: "gradients/Sum_81_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_81_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_81_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_81_grad/DynamicStitch"
input: "gradients/Sum_81_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_81_grad/Shape"
    }
  }
}
, name: "gradients/Sum_81_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_81_grad/Shape"
input: "gradients/Sum_81_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_81_grad/Shape"
    }
  }
}
, name: "gradients/Sum_81_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_47_grad/tuple/control_dependency"
input: "gradients/Sum_81_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_81_grad/Tile"
op: "Tile"
input: "gradients/Sum_81_grad/Reshape"
input: "gradients/Sum_81_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_88_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_88_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_88_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_88_grad/add"
op: "Add"
input: "Sum_88/reduction_indices"
input: "gradients/Sum_88_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_88_grad/Shape"
    }
  }
}
, name: "gradients/Sum_88_grad/mod"
op: "FloorMod"
input: "gradients/Sum_88_grad/add"
input: "gradients/Sum_88_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_88_grad/Shape"
    }
  }
}
, name: "gradients/Sum_88_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_88_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_88_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_88_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_88_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_88_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_88_grad/range"
op: "Range"
input: "gradients/Sum_88_grad/range/start"
input: "gradients/Sum_88_grad/Size"
input: "gradients/Sum_88_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_88_grad/Shape"
    }
  }
}
, name: "gradients/Sum_88_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_88_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_88_grad/Fill"
op: "Fill"
input: "gradients/Sum_88_grad/Shape_1"
input: "gradients/Sum_88_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_88_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_88_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_88_grad/range"
input: "gradients/Sum_88_grad/mod"
input: "gradients/Sum_88_grad/Shape"
input: "gradients/Sum_88_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_88_grad/Shape"
    }
  }
}
, name: "gradients/Sum_88_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_88_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_88_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_88_grad/DynamicStitch"
input: "gradients/Sum_88_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_88_grad/Shape"
    }
  }
}
, name: "gradients/Sum_88_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_88_grad/Shape"
input: "gradients/Sum_88_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_88_grad/Shape"
    }
  }
}
, name: "gradients/Sum_88_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_50_grad/tuple/control_dependency"
input: "gradients/Sum_88_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_88_grad/Tile"
op: "Tile"
input: "gradients/Sum_88_grad/Reshape"
input: "gradients/Sum_88_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_95_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_95_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_95_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_95_grad/add"
op: "Add"
input: "Sum_95/reduction_indices"
input: "gradients/Sum_95_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_95_grad/Shape"
    }
  }
}
, name: "gradients/Sum_95_grad/mod"
op: "FloorMod"
input: "gradients/Sum_95_grad/add"
input: "gradients/Sum_95_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_95_grad/Shape"
    }
  }
}
, name: "gradients/Sum_95_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_95_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_95_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_95_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_95_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_95_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_95_grad/range"
op: "Range"
input: "gradients/Sum_95_grad/range/start"
input: "gradients/Sum_95_grad/Size"
input: "gradients/Sum_95_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_95_grad/Shape"
    }
  }
}
, name: "gradients/Sum_95_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_95_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_95_grad/Fill"
op: "Fill"
input: "gradients/Sum_95_grad/Shape_1"
input: "gradients/Sum_95_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_95_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_95_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_95_grad/range"
input: "gradients/Sum_95_grad/mod"
input: "gradients/Sum_95_grad/Shape"
input: "gradients/Sum_95_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_95_grad/Shape"
    }
  }
}
, name: "gradients/Sum_95_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_95_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_95_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_95_grad/DynamicStitch"
input: "gradients/Sum_95_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_95_grad/Shape"
    }
  }
}
, name: "gradients/Sum_95_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_95_grad/Shape"
input: "gradients/Sum_95_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_95_grad/Shape"
    }
  }
}
, name: "gradients/Sum_95_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_53_grad/tuple/control_dependency"
input: "gradients/Sum_95_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_95_grad/Tile"
op: "Tile"
input: "gradients/Sum_95_grad/Reshape"
input: "gradients/Sum_95_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_102_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_102_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_102_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_102_grad/add"
op: "Add"
input: "Sum_102/reduction_indices"
input: "gradients/Sum_102_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_102_grad/Shape"
    }
  }
}
, name: "gradients/Sum_102_grad/mod"
op: "FloorMod"
input: "gradients/Sum_102_grad/add"
input: "gradients/Sum_102_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_102_grad/Shape"
    }
  }
}
, name: "gradients/Sum_102_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_102_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_102_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_102_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_102_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_102_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_102_grad/range"
op: "Range"
input: "gradients/Sum_102_grad/range/start"
input: "gradients/Sum_102_grad/Size"
input: "gradients/Sum_102_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_102_grad/Shape"
    }
  }
}
, name: "gradients/Sum_102_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_102_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_102_grad/Fill"
op: "Fill"
input: "gradients/Sum_102_grad/Shape_1"
input: "gradients/Sum_102_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_102_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_102_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_102_grad/range"
input: "gradients/Sum_102_grad/mod"
input: "gradients/Sum_102_grad/Shape"
input: "gradients/Sum_102_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_102_grad/Shape"
    }
  }
}
, name: "gradients/Sum_102_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_102_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_102_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_102_grad/DynamicStitch"
input: "gradients/Sum_102_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_102_grad/Shape"
    }
  }
}
, name: "gradients/Sum_102_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_102_grad/Shape"
input: "gradients/Sum_102_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_102_grad/Shape"
    }
  }
}
, name: "gradients/Sum_102_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_56_grad/tuple/control_dependency"
input: "gradients/Sum_102_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_102_grad/Tile"
op: "Tile"
input: "gradients/Sum_102_grad/Reshape"
input: "gradients/Sum_102_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_109_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_109_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_109_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_109_grad/add"
op: "Add"
input: "Sum_109/reduction_indices"
input: "gradients/Sum_109_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_109_grad/Shape"
    }
  }
}
, name: "gradients/Sum_109_grad/mod"
op: "FloorMod"
input: "gradients/Sum_109_grad/add"
input: "gradients/Sum_109_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_109_grad/Shape"
    }
  }
}
, name: "gradients/Sum_109_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_109_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_109_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_109_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_109_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_109_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_109_grad/range"
op: "Range"
input: "gradients/Sum_109_grad/range/start"
input: "gradients/Sum_109_grad/Size"
input: "gradients/Sum_109_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_109_grad/Shape"
    }
  }
}
, name: "gradients/Sum_109_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_109_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_109_grad/Fill"
op: "Fill"
input: "gradients/Sum_109_grad/Shape_1"
input: "gradients/Sum_109_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_109_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_109_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_109_grad/range"
input: "gradients/Sum_109_grad/mod"
input: "gradients/Sum_109_grad/Shape"
input: "gradients/Sum_109_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_109_grad/Shape"
    }
  }
}
, name: "gradients/Sum_109_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_109_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_109_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_109_grad/DynamicStitch"
input: "gradients/Sum_109_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_109_grad/Shape"
    }
  }
}
, name: "gradients/Sum_109_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_109_grad/Shape"
input: "gradients/Sum_109_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_109_grad/Shape"
    }
  }
}
, name: "gradients/Sum_109_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_59_grad/tuple/control_dependency"
input: "gradients/Sum_109_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_109_grad/Tile"
op: "Tile"
input: "gradients/Sum_109_grad/Reshape"
input: "gradients/Sum_109_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_116_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_116_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_116_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_116_grad/add"
op: "Add"
input: "Sum_116/reduction_indices"
input: "gradients/Sum_116_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_116_grad/Shape"
    }
  }
}
, name: "gradients/Sum_116_grad/mod"
op: "FloorMod"
input: "gradients/Sum_116_grad/add"
input: "gradients/Sum_116_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_116_grad/Shape"
    }
  }
}
, name: "gradients/Sum_116_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_116_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_116_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_116_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_116_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_116_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_116_grad/range"
op: "Range"
input: "gradients/Sum_116_grad/range/start"
input: "gradients/Sum_116_grad/Size"
input: "gradients/Sum_116_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_116_grad/Shape"
    }
  }
}
, name: "gradients/Sum_116_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_116_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_116_grad/Fill"
op: "Fill"
input: "gradients/Sum_116_grad/Shape_1"
input: "gradients/Sum_116_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_116_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_116_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_116_grad/range"
input: "gradients/Sum_116_grad/mod"
input: "gradients/Sum_116_grad/Shape"
input: "gradients/Sum_116_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_116_grad/Shape"
    }
  }
}
, name: "gradients/Sum_116_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_116_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_116_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_116_grad/DynamicStitch"
input: "gradients/Sum_116_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_116_grad/Shape"
    }
  }
}
, name: "gradients/Sum_116_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_116_grad/Shape"
input: "gradients/Sum_116_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_116_grad/Shape"
    }
  }
}
, name: "gradients/Sum_116_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_62_grad/tuple/control_dependency"
input: "gradients/Sum_116_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_116_grad/Tile"
op: "Tile"
input: "gradients/Sum_116_grad/Reshape"
input: "gradients/Sum_116_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_123_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_123_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_123_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_123_grad/add"
op: "Add"
input: "Sum_123/reduction_indices"
input: "gradients/Sum_123_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_123_grad/Shape"
    }
  }
}
, name: "gradients/Sum_123_grad/mod"
op: "FloorMod"
input: "gradients/Sum_123_grad/add"
input: "gradients/Sum_123_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_123_grad/Shape"
    }
  }
}
, name: "gradients/Sum_123_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_123_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_123_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_123_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_123_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_123_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_123_grad/range"
op: "Range"
input: "gradients/Sum_123_grad/range/start"
input: "gradients/Sum_123_grad/Size"
input: "gradients/Sum_123_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_123_grad/Shape"
    }
  }
}
, name: "gradients/Sum_123_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_123_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_123_grad/Fill"
op: "Fill"
input: "gradients/Sum_123_grad/Shape_1"
input: "gradients/Sum_123_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_123_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_123_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_123_grad/range"
input: "gradients/Sum_123_grad/mod"
input: "gradients/Sum_123_grad/Shape"
input: "gradients/Sum_123_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_123_grad/Shape"
    }
  }
}
, name: "gradients/Sum_123_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_123_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_123_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_123_grad/DynamicStitch"
input: "gradients/Sum_123_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_123_grad/Shape"
    }
  }
}
, name: "gradients/Sum_123_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_123_grad/Shape"
input: "gradients/Sum_123_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_123_grad/Shape"
    }
  }
}
, name: "gradients/Sum_123_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_65_grad/tuple/control_dependency"
input: "gradients/Sum_123_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_123_grad/Tile"
op: "Tile"
input: "gradients/Sum_123_grad/Reshape"
input: "gradients/Sum_123_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_130_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_130_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_130_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_130_grad/add"
op: "Add"
input: "Sum_130/reduction_indices"
input: "gradients/Sum_130_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_130_grad/Shape"
    }
  }
}
, name: "gradients/Sum_130_grad/mod"
op: "FloorMod"
input: "gradients/Sum_130_grad/add"
input: "gradients/Sum_130_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_130_grad/Shape"
    }
  }
}
, name: "gradients/Sum_130_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_130_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_130_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_130_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_130_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_130_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_130_grad/range"
op: "Range"
input: "gradients/Sum_130_grad/range/start"
input: "gradients/Sum_130_grad/Size"
input: "gradients/Sum_130_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_130_grad/Shape"
    }
  }
}
, name: "gradients/Sum_130_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_130_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_130_grad/Fill"
op: "Fill"
input: "gradients/Sum_130_grad/Shape_1"
input: "gradients/Sum_130_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_130_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_130_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_130_grad/range"
input: "gradients/Sum_130_grad/mod"
input: "gradients/Sum_130_grad/Shape"
input: "gradients/Sum_130_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_130_grad/Shape"
    }
  }
}
, name: "gradients/Sum_130_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_130_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_130_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_130_grad/DynamicStitch"
input: "gradients/Sum_130_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_130_grad/Shape"
    }
  }
}
, name: "gradients/Sum_130_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_130_grad/Shape"
input: "gradients/Sum_130_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_130_grad/Shape"
    }
  }
}
, name: "gradients/Sum_130_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_68_grad/tuple/control_dependency"
input: "gradients/Sum_130_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_130_grad/Tile"
op: "Tile"
input: "gradients/Sum_130_grad/Reshape"
input: "gradients/Sum_130_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_137_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_137_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_137_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_137_grad/add"
op: "Add"
input: "Sum_137/reduction_indices"
input: "gradients/Sum_137_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_137_grad/Shape"
    }
  }
}
, name: "gradients/Sum_137_grad/mod"
op: "FloorMod"
input: "gradients/Sum_137_grad/add"
input: "gradients/Sum_137_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_137_grad/Shape"
    }
  }
}
, name: "gradients/Sum_137_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_137_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_137_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_137_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_137_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_137_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_137_grad/range"
op: "Range"
input: "gradients/Sum_137_grad/range/start"
input: "gradients/Sum_137_grad/Size"
input: "gradients/Sum_137_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_137_grad/Shape"
    }
  }
}
, name: "gradients/Sum_137_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_137_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_137_grad/Fill"
op: "Fill"
input: "gradients/Sum_137_grad/Shape_1"
input: "gradients/Sum_137_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_137_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_137_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_137_grad/range"
input: "gradients/Sum_137_grad/mod"
input: "gradients/Sum_137_grad/Shape"
input: "gradients/Sum_137_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_137_grad/Shape"
    }
  }
}
, name: "gradients/Sum_137_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_137_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_137_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_137_grad/DynamicStitch"
input: "gradients/Sum_137_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_137_grad/Shape"
    }
  }
}
, name: "gradients/Sum_137_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_137_grad/Shape"
input: "gradients/Sum_137_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_137_grad/Shape"
    }
  }
}
, name: "gradients/Sum_137_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_71_grad/tuple/control_dependency"
input: "gradients/Sum_137_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_137_grad/Tile"
op: "Tile"
input: "gradients/Sum_137_grad/Reshape"
input: "gradients/Sum_137_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_144_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 9
    }
  }
}
, name: "gradients/Sum_144_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_144_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_144_grad/add"
op: "Add"
input: "Sum_144/reduction_indices"
input: "gradients/Sum_144_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_144_grad/Shape"
    }
  }
}
, name: "gradients/Sum_144_grad/mod"
op: "FloorMod"
input: "gradients/Sum_144_grad/add"
input: "gradients/Sum_144_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_144_grad/Shape"
    }
  }
}
, name: "gradients/Sum_144_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_144_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_144_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_144_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_144_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_144_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_144_grad/range"
op: "Range"
input: "gradients/Sum_144_grad/range/start"
input: "gradients/Sum_144_grad/Size"
input: "gradients/Sum_144_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_144_grad/Shape"
    }
  }
}
, name: "gradients/Sum_144_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_144_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_144_grad/Fill"
op: "Fill"
input: "gradients/Sum_144_grad/Shape_1"
input: "gradients/Sum_144_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_144_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_144_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_144_grad/range"
input: "gradients/Sum_144_grad/mod"
input: "gradients/Sum_144_grad/Shape"
input: "gradients/Sum_144_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_144_grad/Shape"
    }
  }
}
, name: "gradients/Sum_144_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_144_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_144_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_144_grad/DynamicStitch"
input: "gradients/Sum_144_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_144_grad/Shape"
    }
  }
}
, name: "gradients/Sum_144_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_144_grad/Shape"
input: "gradients/Sum_144_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_144_grad/Shape"
    }
  }
}
, name: "gradients/Sum_144_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_74_grad/tuple/control_dependency"
input: "gradients/Sum_144_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_144_grad/Tile"
op: "Tile"
input: "gradients/Sum_144_grad/Reshape"
input: "gradients/Sum_144_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Sum_1_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "gradients/Sum_1_grad/add"
op: "Add"
input: "Sum_1/reduction_indices"
input: "gradients/Sum_1_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Shape"
    }
  }
}
, name: "gradients/Sum_1_grad/mod"
op: "FloorMod"
input: "gradients/Sum_1_grad/add"
input: "gradients/Sum_1_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Shape"
    }
  }
}
, name: "gradients/Sum_1_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_1_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_1_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_1_grad/range"
op: "Range"
input: "gradients/Sum_1_grad/range/start"
input: "gradients/Sum_1_grad/Size"
input: "gradients/Sum_1_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Shape"
    }
  }
}
, name: "gradients/Sum_1_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_1_grad/Fill"
op: "Fill"
input: "gradients/Sum_1_grad/Shape_1"
input: "gradients/Sum_1_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_1_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_1_grad/range"
input: "gradients/Sum_1_grad/mod"
input: "gradients/Sum_1_grad/Shape"
input: "gradients/Sum_1_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Shape"
    }
  }
}
, name: "gradients/Sum_1_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_1_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_1_grad/DynamicStitch"
input: "gradients/Sum_1_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Shape"
    }
  }
}
, name: "gradients/Sum_1_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_1_grad/Shape"
input: "gradients/Sum_1_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Shape"
    }
  }
}
, name: "gradients/Sum_1_grad/Reshape"
op: "Reshape"
input: "gradients/mul_7_grad/tuple/control_dependency_1"
input: "gradients/Sum_1_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_1_grad/Tile"
op: "Tile"
input: "gradients/Sum_1_grad/Reshape"
input: "gradients/Sum_1_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_3_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Sum_3_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "gradients/Sum_3_grad/add"
op: "Add"
input: "Sum_3/reduction_indices"
input: "gradients/Sum_3_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Shape"
    }
  }
}
, name: "gradients/Sum_3_grad/mod"
op: "FloorMod"
input: "gradients/Sum_3_grad/add"
input: "gradients/Sum_3_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Shape"
    }
  }
}
, name: "gradients/Sum_3_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_3_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_3_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_3_grad/range"
op: "Range"
input: "gradients/Sum_3_grad/range/start"
input: "gradients/Sum_3_grad/Size"
input: "gradients/Sum_3_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Shape"
    }
  }
}
, name: "gradients/Sum_3_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_3_grad/Fill"
op: "Fill"
input: "gradients/Sum_3_grad/Shape_1"
input: "gradients/Sum_3_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_3_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_3_grad/range"
input: "gradients/Sum_3_grad/mod"
input: "gradients/Sum_3_grad/Shape"
input: "gradients/Sum_3_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Shape"
    }
  }
}
, name: "gradients/Sum_3_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_3_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_3_grad/DynamicStitch"
input: "gradients/Sum_3_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Shape"
    }
  }
}
, name: "gradients/Sum_3_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_3_grad/Shape"
input: "gradients/Sum_3_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Shape"
    }
  }
}
, name: "gradients/Sum_3_grad/Reshape"
op: "Reshape"
input: "gradients/mul_9_grad/tuple/control_dependency_1"
input: "gradients/Sum_3_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_3_grad/Tile"
op: "Tile"
input: "gradients/Sum_3_grad/Reshape"
input: "gradients/Sum_3_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_10_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_10_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_10_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_10_grad/add"
op: "Add"
input: "Sum_10/reduction_indices"
input: "gradients/Sum_10_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_10_grad/Shape"
    }
  }
}
, name: "gradients/Sum_10_grad/mod"
op: "FloorMod"
input: "gradients/Sum_10_grad/add"
input: "gradients/Sum_10_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_10_grad/Shape"
    }
  }
}
, name: "gradients/Sum_10_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_10_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_10_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_10_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_10_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_10_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_10_grad/range"
op: "Range"
input: "gradients/Sum_10_grad/range/start"
input: "gradients/Sum_10_grad/Size"
input: "gradients/Sum_10_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_10_grad/Shape"
    }
  }
}
, name: "gradients/Sum_10_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_10_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_10_grad/Fill"
op: "Fill"
input: "gradients/Sum_10_grad/Shape_1"
input: "gradients/Sum_10_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_10_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_10_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_10_grad/range"
input: "gradients/Sum_10_grad/mod"
input: "gradients/Sum_10_grad/Shape"
input: "gradients/Sum_10_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_10_grad/Shape"
    }
  }
}
, name: "gradients/Sum_10_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_10_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_10_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_10_grad/DynamicStitch"
input: "gradients/Sum_10_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_10_grad/Shape"
    }
  }
}
, name: "gradients/Sum_10_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_10_grad/Shape"
input: "gradients/Sum_10_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_10_grad/Shape"
    }
  }
}
, name: "gradients/Sum_10_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_11_grad/Tile"
input: "gradients/Sum_10_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_10_grad/Tile"
op: "Tile"
input: "gradients/Sum_10_grad/Reshape"
input: "gradients/Sum_10_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_17_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_17_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_17_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_17_grad/add"
op: "Add"
input: "Sum_17/reduction_indices"
input: "gradients/Sum_17_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_17_grad/Shape"
    }
  }
}
, name: "gradients/Sum_17_grad/mod"
op: "FloorMod"
input: "gradients/Sum_17_grad/add"
input: "gradients/Sum_17_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_17_grad/Shape"
    }
  }
}
, name: "gradients/Sum_17_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_17_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_17_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_17_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_17_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_17_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_17_grad/range"
op: "Range"
input: "gradients/Sum_17_grad/range/start"
input: "gradients/Sum_17_grad/Size"
input: "gradients/Sum_17_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_17_grad/Shape"
    }
  }
}
, name: "gradients/Sum_17_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_17_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_17_grad/Fill"
op: "Fill"
input: "gradients/Sum_17_grad/Shape_1"
input: "gradients/Sum_17_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_17_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_17_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_17_grad/range"
input: "gradients/Sum_17_grad/mod"
input: "gradients/Sum_17_grad/Shape"
input: "gradients/Sum_17_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_17_grad/Shape"
    }
  }
}
, name: "gradients/Sum_17_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_17_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_17_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_17_grad/DynamicStitch"
input: "gradients/Sum_17_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_17_grad/Shape"
    }
  }
}
, name: "gradients/Sum_17_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_17_grad/Shape"
input: "gradients/Sum_17_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_17_grad/Shape"
    }
  }
}
, name: "gradients/Sum_17_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_18_grad/Tile"
input: "gradients/Sum_17_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_17_grad/Tile"
op: "Tile"
input: "gradients/Sum_17_grad/Reshape"
input: "gradients/Sum_17_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_24_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_24_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_24_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_24_grad/add"
op: "Add"
input: "Sum_24/reduction_indices"
input: "gradients/Sum_24_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_24_grad/Shape"
    }
  }
}
, name: "gradients/Sum_24_grad/mod"
op: "FloorMod"
input: "gradients/Sum_24_grad/add"
input: "gradients/Sum_24_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_24_grad/Shape"
    }
  }
}
, name: "gradients/Sum_24_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_24_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_24_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_24_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_24_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_24_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_24_grad/range"
op: "Range"
input: "gradients/Sum_24_grad/range/start"
input: "gradients/Sum_24_grad/Size"
input: "gradients/Sum_24_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_24_grad/Shape"
    }
  }
}
, name: "gradients/Sum_24_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_24_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_24_grad/Fill"
op: "Fill"
input: "gradients/Sum_24_grad/Shape_1"
input: "gradients/Sum_24_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_24_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_24_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_24_grad/range"
input: "gradients/Sum_24_grad/mod"
input: "gradients/Sum_24_grad/Shape"
input: "gradients/Sum_24_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_24_grad/Shape"
    }
  }
}
, name: "gradients/Sum_24_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_24_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_24_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_24_grad/DynamicStitch"
input: "gradients/Sum_24_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_24_grad/Shape"
    }
  }
}
, name: "gradients/Sum_24_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_24_grad/Shape"
input: "gradients/Sum_24_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_24_grad/Shape"
    }
  }
}
, name: "gradients/Sum_24_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_25_grad/Tile"
input: "gradients/Sum_24_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_24_grad/Tile"
op: "Tile"
input: "gradients/Sum_24_grad/Reshape"
input: "gradients/Sum_24_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_31_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_31_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_31_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_31_grad/add"
op: "Add"
input: "Sum_31/reduction_indices"
input: "gradients/Sum_31_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_31_grad/Shape"
    }
  }
}
, name: "gradients/Sum_31_grad/mod"
op: "FloorMod"
input: "gradients/Sum_31_grad/add"
input: "gradients/Sum_31_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_31_grad/Shape"
    }
  }
}
, name: "gradients/Sum_31_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_31_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_31_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_31_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_31_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_31_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_31_grad/range"
op: "Range"
input: "gradients/Sum_31_grad/range/start"
input: "gradients/Sum_31_grad/Size"
input: "gradients/Sum_31_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_31_grad/Shape"
    }
  }
}
, name: "gradients/Sum_31_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_31_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_31_grad/Fill"
op: "Fill"
input: "gradients/Sum_31_grad/Shape_1"
input: "gradients/Sum_31_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_31_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_31_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_31_grad/range"
input: "gradients/Sum_31_grad/mod"
input: "gradients/Sum_31_grad/Shape"
input: "gradients/Sum_31_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_31_grad/Shape"
    }
  }
}
, name: "gradients/Sum_31_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_31_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_31_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_31_grad/DynamicStitch"
input: "gradients/Sum_31_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_31_grad/Shape"
    }
  }
}
, name: "gradients/Sum_31_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_31_grad/Shape"
input: "gradients/Sum_31_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_31_grad/Shape"
    }
  }
}
, name: "gradients/Sum_31_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_32_grad/Tile"
input: "gradients/Sum_31_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_31_grad/Tile"
op: "Tile"
input: "gradients/Sum_31_grad/Reshape"
input: "gradients/Sum_31_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_38_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_38_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_38_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_38_grad/add"
op: "Add"
input: "Sum_38/reduction_indices"
input: "gradients/Sum_38_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_38_grad/Shape"
    }
  }
}
, name: "gradients/Sum_38_grad/mod"
op: "FloorMod"
input: "gradients/Sum_38_grad/add"
input: "gradients/Sum_38_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_38_grad/Shape"
    }
  }
}
, name: "gradients/Sum_38_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_38_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_38_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_38_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_38_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_38_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_38_grad/range"
op: "Range"
input: "gradients/Sum_38_grad/range/start"
input: "gradients/Sum_38_grad/Size"
input: "gradients/Sum_38_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_38_grad/Shape"
    }
  }
}
, name: "gradients/Sum_38_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_38_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_38_grad/Fill"
op: "Fill"
input: "gradients/Sum_38_grad/Shape_1"
input: "gradients/Sum_38_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_38_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_38_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_38_grad/range"
input: "gradients/Sum_38_grad/mod"
input: "gradients/Sum_38_grad/Shape"
input: "gradients/Sum_38_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_38_grad/Shape"
    }
  }
}
, name: "gradients/Sum_38_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_38_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_38_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_38_grad/DynamicStitch"
input: "gradients/Sum_38_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_38_grad/Shape"
    }
  }
}
, name: "gradients/Sum_38_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_38_grad/Shape"
input: "gradients/Sum_38_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_38_grad/Shape"
    }
  }
}
, name: "gradients/Sum_38_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_39_grad/Tile"
input: "gradients/Sum_38_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_38_grad/Tile"
op: "Tile"
input: "gradients/Sum_38_grad/Reshape"
input: "gradients/Sum_38_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_45_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_45_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_45_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_45_grad/add"
op: "Add"
input: "Sum_45/reduction_indices"
input: "gradients/Sum_45_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_45_grad/Shape"
    }
  }
}
, name: "gradients/Sum_45_grad/mod"
op: "FloorMod"
input: "gradients/Sum_45_grad/add"
input: "gradients/Sum_45_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_45_grad/Shape"
    }
  }
}
, name: "gradients/Sum_45_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_45_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_45_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_45_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_45_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_45_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_45_grad/range"
op: "Range"
input: "gradients/Sum_45_grad/range/start"
input: "gradients/Sum_45_grad/Size"
input: "gradients/Sum_45_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_45_grad/Shape"
    }
  }
}
, name: "gradients/Sum_45_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_45_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_45_grad/Fill"
op: "Fill"
input: "gradients/Sum_45_grad/Shape_1"
input: "gradients/Sum_45_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_45_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_45_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_45_grad/range"
input: "gradients/Sum_45_grad/mod"
input: "gradients/Sum_45_grad/Shape"
input: "gradients/Sum_45_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_45_grad/Shape"
    }
  }
}
, name: "gradients/Sum_45_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_45_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_45_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_45_grad/DynamicStitch"
input: "gradients/Sum_45_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_45_grad/Shape"
    }
  }
}
, name: "gradients/Sum_45_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_45_grad/Shape"
input: "gradients/Sum_45_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_45_grad/Shape"
    }
  }
}
, name: "gradients/Sum_45_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_46_grad/Tile"
input: "gradients/Sum_45_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_45_grad/Tile"
op: "Tile"
input: "gradients/Sum_45_grad/Reshape"
input: "gradients/Sum_45_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_52_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_52_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_52_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_52_grad/add"
op: "Add"
input: "Sum_52/reduction_indices"
input: "gradients/Sum_52_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_52_grad/Shape"
    }
  }
}
, name: "gradients/Sum_52_grad/mod"
op: "FloorMod"
input: "gradients/Sum_52_grad/add"
input: "gradients/Sum_52_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_52_grad/Shape"
    }
  }
}
, name: "gradients/Sum_52_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_52_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_52_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_52_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_52_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_52_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_52_grad/range"
op: "Range"
input: "gradients/Sum_52_grad/range/start"
input: "gradients/Sum_52_grad/Size"
input: "gradients/Sum_52_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_52_grad/Shape"
    }
  }
}
, name: "gradients/Sum_52_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_52_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_52_grad/Fill"
op: "Fill"
input: "gradients/Sum_52_grad/Shape_1"
input: "gradients/Sum_52_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_52_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_52_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_52_grad/range"
input: "gradients/Sum_52_grad/mod"
input: "gradients/Sum_52_grad/Shape"
input: "gradients/Sum_52_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_52_grad/Shape"
    }
  }
}
, name: "gradients/Sum_52_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_52_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_52_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_52_grad/DynamicStitch"
input: "gradients/Sum_52_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_52_grad/Shape"
    }
  }
}
, name: "gradients/Sum_52_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_52_grad/Shape"
input: "gradients/Sum_52_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_52_grad/Shape"
    }
  }
}
, name: "gradients/Sum_52_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_53_grad/Tile"
input: "gradients/Sum_52_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_52_grad/Tile"
op: "Tile"
input: "gradients/Sum_52_grad/Reshape"
input: "gradients/Sum_52_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_59_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_59_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_59_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_59_grad/add"
op: "Add"
input: "Sum_59/reduction_indices"
input: "gradients/Sum_59_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_59_grad/Shape"
    }
  }
}
, name: "gradients/Sum_59_grad/mod"
op: "FloorMod"
input: "gradients/Sum_59_grad/add"
input: "gradients/Sum_59_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_59_grad/Shape"
    }
  }
}
, name: "gradients/Sum_59_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_59_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_59_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_59_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_59_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_59_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_59_grad/range"
op: "Range"
input: "gradients/Sum_59_grad/range/start"
input: "gradients/Sum_59_grad/Size"
input: "gradients/Sum_59_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_59_grad/Shape"
    }
  }
}
, name: "gradients/Sum_59_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_59_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_59_grad/Fill"
op: "Fill"
input: "gradients/Sum_59_grad/Shape_1"
input: "gradients/Sum_59_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_59_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_59_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_59_grad/range"
input: "gradients/Sum_59_grad/mod"
input: "gradients/Sum_59_grad/Shape"
input: "gradients/Sum_59_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_59_grad/Shape"
    }
  }
}
, name: "gradients/Sum_59_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_59_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_59_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_59_grad/DynamicStitch"
input: "gradients/Sum_59_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_59_grad/Shape"
    }
  }
}
, name: "gradients/Sum_59_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_59_grad/Shape"
input: "gradients/Sum_59_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_59_grad/Shape"
    }
  }
}
, name: "gradients/Sum_59_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_60_grad/Tile"
input: "gradients/Sum_59_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_59_grad/Tile"
op: "Tile"
input: "gradients/Sum_59_grad/Reshape"
input: "gradients/Sum_59_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_66_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_66_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_66_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_66_grad/add"
op: "Add"
input: "Sum_66/reduction_indices"
input: "gradients/Sum_66_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_66_grad/Shape"
    }
  }
}
, name: "gradients/Sum_66_grad/mod"
op: "FloorMod"
input: "gradients/Sum_66_grad/add"
input: "gradients/Sum_66_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_66_grad/Shape"
    }
  }
}
, name: "gradients/Sum_66_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_66_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_66_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_66_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_66_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_66_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_66_grad/range"
op: "Range"
input: "gradients/Sum_66_grad/range/start"
input: "gradients/Sum_66_grad/Size"
input: "gradients/Sum_66_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_66_grad/Shape"
    }
  }
}
, name: "gradients/Sum_66_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_66_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_66_grad/Fill"
op: "Fill"
input: "gradients/Sum_66_grad/Shape_1"
input: "gradients/Sum_66_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_66_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_66_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_66_grad/range"
input: "gradients/Sum_66_grad/mod"
input: "gradients/Sum_66_grad/Shape"
input: "gradients/Sum_66_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_66_grad/Shape"
    }
  }
}
, name: "gradients/Sum_66_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_66_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_66_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_66_grad/DynamicStitch"
input: "gradients/Sum_66_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_66_grad/Shape"
    }
  }
}
, name: "gradients/Sum_66_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_66_grad/Shape"
input: "gradients/Sum_66_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_66_grad/Shape"
    }
  }
}
, name: "gradients/Sum_66_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_67_grad/Tile"
input: "gradients/Sum_66_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_66_grad/Tile"
op: "Tile"
input: "gradients/Sum_66_grad/Reshape"
input: "gradients/Sum_66_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_73_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_73_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_73_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_73_grad/add"
op: "Add"
input: "Sum_73/reduction_indices"
input: "gradients/Sum_73_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_73_grad/Shape"
    }
  }
}
, name: "gradients/Sum_73_grad/mod"
op: "FloorMod"
input: "gradients/Sum_73_grad/add"
input: "gradients/Sum_73_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_73_grad/Shape"
    }
  }
}
, name: "gradients/Sum_73_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_73_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_73_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_73_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_73_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_73_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_73_grad/range"
op: "Range"
input: "gradients/Sum_73_grad/range/start"
input: "gradients/Sum_73_grad/Size"
input: "gradients/Sum_73_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_73_grad/Shape"
    }
  }
}
, name: "gradients/Sum_73_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_73_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_73_grad/Fill"
op: "Fill"
input: "gradients/Sum_73_grad/Shape_1"
input: "gradients/Sum_73_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_73_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_73_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_73_grad/range"
input: "gradients/Sum_73_grad/mod"
input: "gradients/Sum_73_grad/Shape"
input: "gradients/Sum_73_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_73_grad/Shape"
    }
  }
}
, name: "gradients/Sum_73_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_73_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_73_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_73_grad/DynamicStitch"
input: "gradients/Sum_73_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_73_grad/Shape"
    }
  }
}
, name: "gradients/Sum_73_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_73_grad/Shape"
input: "gradients/Sum_73_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_73_grad/Shape"
    }
  }
}
, name: "gradients/Sum_73_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_74_grad/Tile"
input: "gradients/Sum_73_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_73_grad/Tile"
op: "Tile"
input: "gradients/Sum_73_grad/Reshape"
input: "gradients/Sum_73_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_80_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_80_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_80_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_80_grad/add"
op: "Add"
input: "Sum_80/reduction_indices"
input: "gradients/Sum_80_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_80_grad/Shape"
    }
  }
}
, name: "gradients/Sum_80_grad/mod"
op: "FloorMod"
input: "gradients/Sum_80_grad/add"
input: "gradients/Sum_80_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_80_grad/Shape"
    }
  }
}
, name: "gradients/Sum_80_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_80_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_80_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_80_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_80_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_80_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_80_grad/range"
op: "Range"
input: "gradients/Sum_80_grad/range/start"
input: "gradients/Sum_80_grad/Size"
input: "gradients/Sum_80_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_80_grad/Shape"
    }
  }
}
, name: "gradients/Sum_80_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_80_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_80_grad/Fill"
op: "Fill"
input: "gradients/Sum_80_grad/Shape_1"
input: "gradients/Sum_80_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_80_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_80_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_80_grad/range"
input: "gradients/Sum_80_grad/mod"
input: "gradients/Sum_80_grad/Shape"
input: "gradients/Sum_80_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_80_grad/Shape"
    }
  }
}
, name: "gradients/Sum_80_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_80_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_80_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_80_grad/DynamicStitch"
input: "gradients/Sum_80_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_80_grad/Shape"
    }
  }
}
, name: "gradients/Sum_80_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_80_grad/Shape"
input: "gradients/Sum_80_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_80_grad/Shape"
    }
  }
}
, name: "gradients/Sum_80_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_81_grad/Tile"
input: "gradients/Sum_80_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_80_grad/Tile"
op: "Tile"
input: "gradients/Sum_80_grad/Reshape"
input: "gradients/Sum_80_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_87_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_87_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_87_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_87_grad/add"
op: "Add"
input: "Sum_87/reduction_indices"
input: "gradients/Sum_87_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_87_grad/Shape"
    }
  }
}
, name: "gradients/Sum_87_grad/mod"
op: "FloorMod"
input: "gradients/Sum_87_grad/add"
input: "gradients/Sum_87_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_87_grad/Shape"
    }
  }
}
, name: "gradients/Sum_87_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_87_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_87_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_87_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_87_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_87_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_87_grad/range"
op: "Range"
input: "gradients/Sum_87_grad/range/start"
input: "gradients/Sum_87_grad/Size"
input: "gradients/Sum_87_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_87_grad/Shape"
    }
  }
}
, name: "gradients/Sum_87_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_87_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_87_grad/Fill"
op: "Fill"
input: "gradients/Sum_87_grad/Shape_1"
input: "gradients/Sum_87_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_87_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_87_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_87_grad/range"
input: "gradients/Sum_87_grad/mod"
input: "gradients/Sum_87_grad/Shape"
input: "gradients/Sum_87_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_87_grad/Shape"
    }
  }
}
, name: "gradients/Sum_87_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_87_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_87_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_87_grad/DynamicStitch"
input: "gradients/Sum_87_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_87_grad/Shape"
    }
  }
}
, name: "gradients/Sum_87_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_87_grad/Shape"
input: "gradients/Sum_87_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_87_grad/Shape"
    }
  }
}
, name: "gradients/Sum_87_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_88_grad/Tile"
input: "gradients/Sum_87_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_87_grad/Tile"
op: "Tile"
input: "gradients/Sum_87_grad/Reshape"
input: "gradients/Sum_87_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_94_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_94_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_94_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_94_grad/add"
op: "Add"
input: "Sum_94/reduction_indices"
input: "gradients/Sum_94_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_94_grad/Shape"
    }
  }
}
, name: "gradients/Sum_94_grad/mod"
op: "FloorMod"
input: "gradients/Sum_94_grad/add"
input: "gradients/Sum_94_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_94_grad/Shape"
    }
  }
}
, name: "gradients/Sum_94_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_94_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_94_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_94_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_94_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_94_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_94_grad/range"
op: "Range"
input: "gradients/Sum_94_grad/range/start"
input: "gradients/Sum_94_grad/Size"
input: "gradients/Sum_94_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_94_grad/Shape"
    }
  }
}
, name: "gradients/Sum_94_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_94_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_94_grad/Fill"
op: "Fill"
input: "gradients/Sum_94_grad/Shape_1"
input: "gradients/Sum_94_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_94_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_94_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_94_grad/range"
input: "gradients/Sum_94_grad/mod"
input: "gradients/Sum_94_grad/Shape"
input: "gradients/Sum_94_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_94_grad/Shape"
    }
  }
}
, name: "gradients/Sum_94_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_94_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_94_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_94_grad/DynamicStitch"
input: "gradients/Sum_94_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_94_grad/Shape"
    }
  }
}
, name: "gradients/Sum_94_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_94_grad/Shape"
input: "gradients/Sum_94_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_94_grad/Shape"
    }
  }
}
, name: "gradients/Sum_94_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_95_grad/Tile"
input: "gradients/Sum_94_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_94_grad/Tile"
op: "Tile"
input: "gradients/Sum_94_grad/Reshape"
input: "gradients/Sum_94_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_101_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_101_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_101_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_101_grad/add"
op: "Add"
input: "Sum_101/reduction_indices"
input: "gradients/Sum_101_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_101_grad/Shape"
    }
  }
}
, name: "gradients/Sum_101_grad/mod"
op: "FloorMod"
input: "gradients/Sum_101_grad/add"
input: "gradients/Sum_101_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_101_grad/Shape"
    }
  }
}
, name: "gradients/Sum_101_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_101_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_101_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_101_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_101_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_101_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_101_grad/range"
op: "Range"
input: "gradients/Sum_101_grad/range/start"
input: "gradients/Sum_101_grad/Size"
input: "gradients/Sum_101_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_101_grad/Shape"
    }
  }
}
, name: "gradients/Sum_101_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_101_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_101_grad/Fill"
op: "Fill"
input: "gradients/Sum_101_grad/Shape_1"
input: "gradients/Sum_101_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_101_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_101_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_101_grad/range"
input: "gradients/Sum_101_grad/mod"
input: "gradients/Sum_101_grad/Shape"
input: "gradients/Sum_101_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_101_grad/Shape"
    }
  }
}
, name: "gradients/Sum_101_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_101_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_101_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_101_grad/DynamicStitch"
input: "gradients/Sum_101_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_101_grad/Shape"
    }
  }
}
, name: "gradients/Sum_101_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_101_grad/Shape"
input: "gradients/Sum_101_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_101_grad/Shape"
    }
  }
}
, name: "gradients/Sum_101_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_102_grad/Tile"
input: "gradients/Sum_101_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_101_grad/Tile"
op: "Tile"
input: "gradients/Sum_101_grad/Reshape"
input: "gradients/Sum_101_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_108_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_108_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_108_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_108_grad/add"
op: "Add"
input: "Sum_108/reduction_indices"
input: "gradients/Sum_108_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_108_grad/Shape"
    }
  }
}
, name: "gradients/Sum_108_grad/mod"
op: "FloorMod"
input: "gradients/Sum_108_grad/add"
input: "gradients/Sum_108_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_108_grad/Shape"
    }
  }
}
, name: "gradients/Sum_108_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_108_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_108_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_108_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_108_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_108_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_108_grad/range"
op: "Range"
input: "gradients/Sum_108_grad/range/start"
input: "gradients/Sum_108_grad/Size"
input: "gradients/Sum_108_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_108_grad/Shape"
    }
  }
}
, name: "gradients/Sum_108_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_108_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_108_grad/Fill"
op: "Fill"
input: "gradients/Sum_108_grad/Shape_1"
input: "gradients/Sum_108_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_108_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_108_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_108_grad/range"
input: "gradients/Sum_108_grad/mod"
input: "gradients/Sum_108_grad/Shape"
input: "gradients/Sum_108_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_108_grad/Shape"
    }
  }
}
, name: "gradients/Sum_108_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_108_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_108_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_108_grad/DynamicStitch"
input: "gradients/Sum_108_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_108_grad/Shape"
    }
  }
}
, name: "gradients/Sum_108_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_108_grad/Shape"
input: "gradients/Sum_108_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_108_grad/Shape"
    }
  }
}
, name: "gradients/Sum_108_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_109_grad/Tile"
input: "gradients/Sum_108_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_108_grad/Tile"
op: "Tile"
input: "gradients/Sum_108_grad/Reshape"
input: "gradients/Sum_108_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_115_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_115_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_115_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_115_grad/add"
op: "Add"
input: "Sum_115/reduction_indices"
input: "gradients/Sum_115_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_115_grad/Shape"
    }
  }
}
, name: "gradients/Sum_115_grad/mod"
op: "FloorMod"
input: "gradients/Sum_115_grad/add"
input: "gradients/Sum_115_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_115_grad/Shape"
    }
  }
}
, name: "gradients/Sum_115_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_115_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_115_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_115_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_115_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_115_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_115_grad/range"
op: "Range"
input: "gradients/Sum_115_grad/range/start"
input: "gradients/Sum_115_grad/Size"
input: "gradients/Sum_115_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_115_grad/Shape"
    }
  }
}
, name: "gradients/Sum_115_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_115_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_115_grad/Fill"
op: "Fill"
input: "gradients/Sum_115_grad/Shape_1"
input: "gradients/Sum_115_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_115_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_115_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_115_grad/range"
input: "gradients/Sum_115_grad/mod"
input: "gradients/Sum_115_grad/Shape"
input: "gradients/Sum_115_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_115_grad/Shape"
    }
  }
}
, name: "gradients/Sum_115_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_115_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_115_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_115_grad/DynamicStitch"
input: "gradients/Sum_115_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_115_grad/Shape"
    }
  }
}
, name: "gradients/Sum_115_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_115_grad/Shape"
input: "gradients/Sum_115_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_115_grad/Shape"
    }
  }
}
, name: "gradients/Sum_115_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_116_grad/Tile"
input: "gradients/Sum_115_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_115_grad/Tile"
op: "Tile"
input: "gradients/Sum_115_grad/Reshape"
input: "gradients/Sum_115_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_122_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_122_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_122_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_122_grad/add"
op: "Add"
input: "Sum_122/reduction_indices"
input: "gradients/Sum_122_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_122_grad/Shape"
    }
  }
}
, name: "gradients/Sum_122_grad/mod"
op: "FloorMod"
input: "gradients/Sum_122_grad/add"
input: "gradients/Sum_122_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_122_grad/Shape"
    }
  }
}
, name: "gradients/Sum_122_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_122_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_122_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_122_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_122_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_122_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_122_grad/range"
op: "Range"
input: "gradients/Sum_122_grad/range/start"
input: "gradients/Sum_122_grad/Size"
input: "gradients/Sum_122_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_122_grad/Shape"
    }
  }
}
, name: "gradients/Sum_122_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_122_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_122_grad/Fill"
op: "Fill"
input: "gradients/Sum_122_grad/Shape_1"
input: "gradients/Sum_122_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_122_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_122_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_122_grad/range"
input: "gradients/Sum_122_grad/mod"
input: "gradients/Sum_122_grad/Shape"
input: "gradients/Sum_122_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_122_grad/Shape"
    }
  }
}
, name: "gradients/Sum_122_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_122_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_122_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_122_grad/DynamicStitch"
input: "gradients/Sum_122_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_122_grad/Shape"
    }
  }
}
, name: "gradients/Sum_122_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_122_grad/Shape"
input: "gradients/Sum_122_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_122_grad/Shape"
    }
  }
}
, name: "gradients/Sum_122_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_123_grad/Tile"
input: "gradients/Sum_122_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_122_grad/Tile"
op: "Tile"
input: "gradients/Sum_122_grad/Reshape"
input: "gradients/Sum_122_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_129_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_129_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_129_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_129_grad/add"
op: "Add"
input: "Sum_129/reduction_indices"
input: "gradients/Sum_129_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_129_grad/Shape"
    }
  }
}
, name: "gradients/Sum_129_grad/mod"
op: "FloorMod"
input: "gradients/Sum_129_grad/add"
input: "gradients/Sum_129_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_129_grad/Shape"
    }
  }
}
, name: "gradients/Sum_129_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_129_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_129_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_129_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_129_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_129_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_129_grad/range"
op: "Range"
input: "gradients/Sum_129_grad/range/start"
input: "gradients/Sum_129_grad/Size"
input: "gradients/Sum_129_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_129_grad/Shape"
    }
  }
}
, name: "gradients/Sum_129_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_129_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_129_grad/Fill"
op: "Fill"
input: "gradients/Sum_129_grad/Shape_1"
input: "gradients/Sum_129_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_129_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_129_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_129_grad/range"
input: "gradients/Sum_129_grad/mod"
input: "gradients/Sum_129_grad/Shape"
input: "gradients/Sum_129_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_129_grad/Shape"
    }
  }
}
, name: "gradients/Sum_129_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_129_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_129_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_129_grad/DynamicStitch"
input: "gradients/Sum_129_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_129_grad/Shape"
    }
  }
}
, name: "gradients/Sum_129_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_129_grad/Shape"
input: "gradients/Sum_129_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_129_grad/Shape"
    }
  }
}
, name: "gradients/Sum_129_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_130_grad/Tile"
input: "gradients/Sum_129_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_129_grad/Tile"
op: "Tile"
input: "gradients/Sum_129_grad/Reshape"
input: "gradients/Sum_129_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_136_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_136_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_136_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_136_grad/add"
op: "Add"
input: "Sum_136/reduction_indices"
input: "gradients/Sum_136_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_136_grad/Shape"
    }
  }
}
, name: "gradients/Sum_136_grad/mod"
op: "FloorMod"
input: "gradients/Sum_136_grad/add"
input: "gradients/Sum_136_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_136_grad/Shape"
    }
  }
}
, name: "gradients/Sum_136_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_136_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_136_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_136_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_136_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_136_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_136_grad/range"
op: "Range"
input: "gradients/Sum_136_grad/range/start"
input: "gradients/Sum_136_grad/Size"
input: "gradients/Sum_136_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_136_grad/Shape"
    }
  }
}
, name: "gradients/Sum_136_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_136_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_136_grad/Fill"
op: "Fill"
input: "gradients/Sum_136_grad/Shape_1"
input: "gradients/Sum_136_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_136_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_136_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_136_grad/range"
input: "gradients/Sum_136_grad/mod"
input: "gradients/Sum_136_grad/Shape"
input: "gradients/Sum_136_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_136_grad/Shape"
    }
  }
}
, name: "gradients/Sum_136_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_136_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_136_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_136_grad/DynamicStitch"
input: "gradients/Sum_136_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_136_grad/Shape"
    }
  }
}
, name: "gradients/Sum_136_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_136_grad/Shape"
input: "gradients/Sum_136_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_136_grad/Shape"
    }
  }
}
, name: "gradients/Sum_136_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_137_grad/Tile"
input: "gradients/Sum_136_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_136_grad/Tile"
op: "Tile"
input: "gradients/Sum_136_grad/Reshape"
input: "gradients/Sum_136_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_143_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_143_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_143_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_143_grad/add"
op: "Add"
input: "Sum_143/reduction_indices"
input: "gradients/Sum_143_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_143_grad/Shape"
    }
  }
}
, name: "gradients/Sum_143_grad/mod"
op: "FloorMod"
input: "gradients/Sum_143_grad/add"
input: "gradients/Sum_143_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_143_grad/Shape"
    }
  }
}
, name: "gradients/Sum_143_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_143_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_143_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_143_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_143_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_143_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_143_grad/range"
op: "Range"
input: "gradients/Sum_143_grad/range/start"
input: "gradients/Sum_143_grad/Size"
input: "gradients/Sum_143_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_143_grad/Shape"
    }
  }
}
, name: "gradients/Sum_143_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_143_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_143_grad/Fill"
op: "Fill"
input: "gradients/Sum_143_grad/Shape_1"
input: "gradients/Sum_143_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_143_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_143_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_143_grad/range"
input: "gradients/Sum_143_grad/mod"
input: "gradients/Sum_143_grad/Shape"
input: "gradients/Sum_143_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_143_grad/Shape"
    }
  }
}
, name: "gradients/Sum_143_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_143_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_143_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_143_grad/DynamicStitch"
input: "gradients/Sum_143_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_143_grad/Shape"
    }
  }
}
, name: "gradients/Sum_143_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_143_grad/Shape"
input: "gradients/Sum_143_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_143_grad/Shape"
    }
  }
}
, name: "gradients/Sum_143_grad/Reshape"
op: "Reshape"
input: "gradients/Sum_144_grad/Tile"
input: "gradients/Sum_143_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_143_grad/Tile"
op: "Tile"
input: "gradients/Sum_143_grad/Reshape"
input: "gradients/Sum_143_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_12_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Sum_1_grad/Tile"
, name: "gradients/add_12_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Sum_1_grad/Tile"
input: "^gradients/add_12_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Tile"
    }
  }
}
, name: "gradients/add_12_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Sum_1_grad/Tile"
input: "^gradients/add_12_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_1_grad/Tile"
    }
  }
}
, name: "gradients/sub_2_grad/Neg"
op: "Neg"
input: "gradients/Sum_3_grad/Tile"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Sum_3_grad/Tile"
input: "^gradients/sub_2_grad/Neg"
, name: "gradients/sub_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Sum_3_grad/Tile"
input: "^gradients/sub_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Tile"
    }
  }
}
, name: "gradients/sub_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_2_grad/Neg"
input: "^gradients/sub_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_2_grad/Neg"
    }
  }
}
, name: "gradients/mul_12_grad/Mul"
op: "Mul"
input: "gradients/Sum_10_grad/Tile"
input: "sub_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_12_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_10_grad/Tile"
input: "sub_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_12_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_12_grad/Mul"
input: "^gradients/mul_12_grad/Mul_1"
, name: "gradients/mul_12_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_12_grad/Mul"
input: "^gradients/mul_12_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_12_grad/Mul"
    }
  }
}
, name: "gradients/mul_12_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_12_grad/Mul_1"
input: "^gradients/mul_12_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_12_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_14_grad/Mul"
op: "Mul"
input: "gradients/Sum_17_grad/Tile"
input: "sub_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_14_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_17_grad/Tile"
input: "sub_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_14_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_14_grad/Mul"
input: "^gradients/mul_14_grad/Mul_1"
, name: "gradients/mul_14_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_14_grad/Mul"
input: "^gradients/mul_14_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_14_grad/Mul"
    }
  }
}
, name: "gradients/mul_14_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_14_grad/Mul_1"
input: "^gradients/mul_14_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_14_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_16_grad/Mul"
op: "Mul"
input: "gradients/Sum_24_grad/Tile"
input: "sub_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_16_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_24_grad/Tile"
input: "sub_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_16_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_16_grad/Mul"
input: "^gradients/mul_16_grad/Mul_1"
, name: "gradients/mul_16_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_16_grad/Mul"
input: "^gradients/mul_16_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_16_grad/Mul"
    }
  }
}
, name: "gradients/mul_16_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_16_grad/Mul_1"
input: "^gradients/mul_16_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_16_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_18_grad/Mul"
op: "Mul"
input: "gradients/Sum_31_grad/Tile"
input: "sub_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_18_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_31_grad/Tile"
input: "sub_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_18_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_18_grad/Mul"
input: "^gradients/mul_18_grad/Mul_1"
, name: "gradients/mul_18_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_18_grad/Mul"
input: "^gradients/mul_18_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_18_grad/Mul"
    }
  }
}
, name: "gradients/mul_18_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_18_grad/Mul_1"
input: "^gradients/mul_18_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_18_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_20_grad/Mul"
op: "Mul"
input: "gradients/Sum_38_grad/Tile"
input: "sub_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_20_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_38_grad/Tile"
input: "sub_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_20_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_20_grad/Mul"
input: "^gradients/mul_20_grad/Mul_1"
, name: "gradients/mul_20_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_20_grad/Mul"
input: "^gradients/mul_20_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_20_grad/Mul"
    }
  }
}
, name: "gradients/mul_20_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_20_grad/Mul_1"
input: "^gradients/mul_20_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_20_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_22_grad/Mul"
op: "Mul"
input: "gradients/Sum_45_grad/Tile"
input: "sub_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_22_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_45_grad/Tile"
input: "sub_25"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_22_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_22_grad/Mul"
input: "^gradients/mul_22_grad/Mul_1"
, name: "gradients/mul_22_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_22_grad/Mul"
input: "^gradients/mul_22_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_22_grad/Mul"
    }
  }
}
, name: "gradients/mul_22_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_22_grad/Mul_1"
input: "^gradients/mul_22_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_22_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_24_grad/Mul"
op: "Mul"
input: "gradients/Sum_52_grad/Tile"
input: "sub_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_24_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_52_grad/Tile"
input: "sub_29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_24_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_24_grad/Mul"
input: "^gradients/mul_24_grad/Mul_1"
, name: "gradients/mul_24_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_24_grad/Mul"
input: "^gradients/mul_24_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_24_grad/Mul"
    }
  }
}
, name: "gradients/mul_24_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_24_grad/Mul_1"
input: "^gradients/mul_24_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_24_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_26_grad/Mul"
op: "Mul"
input: "gradients/Sum_59_grad/Tile"
input: "sub_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_26_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_59_grad/Tile"
input: "sub_33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_26_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_26_grad/Mul"
input: "^gradients/mul_26_grad/Mul_1"
, name: "gradients/mul_26_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_26_grad/Mul"
input: "^gradients/mul_26_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_26_grad/Mul"
    }
  }
}
, name: "gradients/mul_26_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_26_grad/Mul_1"
input: "^gradients/mul_26_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_26_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_28_grad/Mul"
op: "Mul"
input: "gradients/Sum_66_grad/Tile"
input: "sub_38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_28_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_66_grad/Tile"
input: "sub_37"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_28_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_28_grad/Mul"
input: "^gradients/mul_28_grad/Mul_1"
, name: "gradients/mul_28_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_28_grad/Mul"
input: "^gradients/mul_28_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_28_grad/Mul"
    }
  }
}
, name: "gradients/mul_28_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_28_grad/Mul_1"
input: "^gradients/mul_28_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_28_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_30_grad/Mul"
op: "Mul"
input: "gradients/Sum_73_grad/Tile"
input: "sub_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_30_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_73_grad/Tile"
input: "sub_41"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_30_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_30_grad/Mul"
input: "^gradients/mul_30_grad/Mul_1"
, name: "gradients/mul_30_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_30_grad/Mul"
input: "^gradients/mul_30_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_30_grad/Mul"
    }
  }
}
, name: "gradients/mul_30_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_30_grad/Mul_1"
input: "^gradients/mul_30_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_30_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_32_grad/Mul"
op: "Mul"
input: "gradients/Sum_80_grad/Tile"
input: "sub_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_32_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_80_grad/Tile"
input: "sub_45"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_32_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_32_grad/Mul"
input: "^gradients/mul_32_grad/Mul_1"
, name: "gradients/mul_32_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_32_grad/Mul"
input: "^gradients/mul_32_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_32_grad/Mul"
    }
  }
}
, name: "gradients/mul_32_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_32_grad/Mul_1"
input: "^gradients/mul_32_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_32_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_34_grad/Mul"
op: "Mul"
input: "gradients/Sum_87_grad/Tile"
input: "sub_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_34_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_87_grad/Tile"
input: "sub_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_34_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_34_grad/Mul"
input: "^gradients/mul_34_grad/Mul_1"
, name: "gradients/mul_34_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_34_grad/Mul"
input: "^gradients/mul_34_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_34_grad/Mul"
    }
  }
}
, name: "gradients/mul_34_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_34_grad/Mul_1"
input: "^gradients/mul_34_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_34_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_36_grad/Mul"
op: "Mul"
input: "gradients/Sum_94_grad/Tile"
input: "sub_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_36_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_94_grad/Tile"
input: "sub_53"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_36_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_36_grad/Mul"
input: "^gradients/mul_36_grad/Mul_1"
, name: "gradients/mul_36_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_36_grad/Mul"
input: "^gradients/mul_36_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_36_grad/Mul"
    }
  }
}
, name: "gradients/mul_36_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_36_grad/Mul_1"
input: "^gradients/mul_36_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_36_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_38_grad/Mul"
op: "Mul"
input: "gradients/Sum_101_grad/Tile"
input: "sub_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_38_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_101_grad/Tile"
input: "sub_57"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_38_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_38_grad/Mul"
input: "^gradients/mul_38_grad/Mul_1"
, name: "gradients/mul_38_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_38_grad/Mul"
input: "^gradients/mul_38_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_38_grad/Mul"
    }
  }
}
, name: "gradients/mul_38_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_38_grad/Mul_1"
input: "^gradients/mul_38_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_38_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_40_grad/Mul"
op: "Mul"
input: "gradients/Sum_108_grad/Tile"
input: "sub_62"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_40_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_108_grad/Tile"
input: "sub_61"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_40_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_40_grad/Mul"
input: "^gradients/mul_40_grad/Mul_1"
, name: "gradients/mul_40_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_40_grad/Mul"
input: "^gradients/mul_40_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_40_grad/Mul"
    }
  }
}
, name: "gradients/mul_40_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_40_grad/Mul_1"
input: "^gradients/mul_40_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_40_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_42_grad/Mul"
op: "Mul"
input: "gradients/Sum_115_grad/Tile"
input: "sub_66"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_42_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_115_grad/Tile"
input: "sub_65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_42_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_42_grad/Mul"
input: "^gradients/mul_42_grad/Mul_1"
, name: "gradients/mul_42_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_42_grad/Mul"
input: "^gradients/mul_42_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_42_grad/Mul"
    }
  }
}
, name: "gradients/mul_42_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_42_grad/Mul_1"
input: "^gradients/mul_42_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_42_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_44_grad/Mul"
op: "Mul"
input: "gradients/Sum_122_grad/Tile"
input: "sub_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_44_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_122_grad/Tile"
input: "sub_69"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_44_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_44_grad/Mul"
input: "^gradients/mul_44_grad/Mul_1"
, name: "gradients/mul_44_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_44_grad/Mul"
input: "^gradients/mul_44_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_44_grad/Mul"
    }
  }
}
, name: "gradients/mul_44_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_44_grad/Mul_1"
input: "^gradients/mul_44_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_44_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_46_grad/Mul"
op: "Mul"
input: "gradients/Sum_129_grad/Tile"
input: "sub_74"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_46_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_129_grad/Tile"
input: "sub_73"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_46_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_46_grad/Mul"
input: "^gradients/mul_46_grad/Mul_1"
, name: "gradients/mul_46_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_46_grad/Mul"
input: "^gradients/mul_46_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_46_grad/Mul"
    }
  }
}
, name: "gradients/mul_46_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_46_grad/Mul_1"
input: "^gradients/mul_46_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_46_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_48_grad/Mul"
op: "Mul"
input: "gradients/Sum_136_grad/Tile"
input: "sub_78"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_48_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_136_grad/Tile"
input: "sub_77"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_48_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_48_grad/Mul"
input: "^gradients/mul_48_grad/Mul_1"
, name: "gradients/mul_48_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_48_grad/Mul"
input: "^gradients/mul_48_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_48_grad/Mul"
    }
  }
}
, name: "gradients/mul_48_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_48_grad/Mul_1"
input: "^gradients/mul_48_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_48_grad/Mul_1"
    }
  }
}
, name: "gradients/mul_50_grad/Mul"
op: "Mul"
input: "gradients/Sum_143_grad/Tile"
input: "sub_82"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_50_grad/Mul_1"
op: "Mul"
input: "gradients/Sum_143_grad/Tile"
input: "sub_81"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_50_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_50_grad/Mul"
input: "^gradients/mul_50_grad/Mul_1"
, name: "gradients/mul_50_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_50_grad/Mul"
input: "^gradients/mul_50_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_50_grad/Mul"
    }
  }
}
, name: "gradients/mul_50_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_50_grad/Mul_1"
input: "^gradients/mul_50_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_50_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/sub_1_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/sub_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_1_grad/Shape"
input: "gradients/sub_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_1_grad/Sum"
op: "Sum"
input: "gradients/add_12_grad/tuple/control_dependency"
input: "gradients/sub_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_1_grad/Reshape"
op: "Reshape"
input: "gradients/sub_1_grad/Sum"
input: "gradients/sub_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_1_grad/Sum_1"
op: "Sum"
input: "gradients/add_12_grad/tuple/control_dependency"
input: "gradients/sub_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_1_grad/Neg"
op: "Neg"
input: "gradients/sub_1_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_1_grad/Neg"
input: "gradients/sub_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_1_grad/Reshape"
input: "^gradients/sub_1_grad/Reshape_1"
, name: "gradients/sub_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_1_grad/Reshape"
input: "^gradients/sub_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_1_grad/Reshape"
    }
  }
}
, name: "gradients/sub_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_1_grad/Reshape_1"
input: "^gradients/sub_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_1_grad/Reshape_1"
    }
  }
}
, name: "gradients/Log_grad/Reciprocal"
op: "Reciprocal"
input: "add_10"
input: "^gradients/add_12_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Log_grad/mul"
op: "Mul"
input: "gradients/add_12_grad/tuple/control_dependency_1"
input: "gradients/Log_grad/Reciprocal"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/add_13_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_2_grad/tuple/control_dependency"
, name: "gradients/add_13_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_2_grad/tuple/control_dependency"
input: "^gradients/add_13_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Tile"
    }
  }
}
, name: "gradients/add_13_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_2_grad/tuple/control_dependency"
input: "^gradients/add_13_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_3_grad/Tile"
    }
  }
}
, name: "gradients/add_14_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_14_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/add_14_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_14_grad/Shape"
input: "gradients/add_14_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_14_grad/Sum"
op: "Sum"
input: "gradients/sub_2_grad/tuple/control_dependency_1"
input: "gradients/add_14_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_14_grad/Reshape"
op: "Reshape"
input: "gradients/add_14_grad/Sum"
input: "gradients/add_14_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_14_grad/Sum_1"
op: "Sum"
input: "gradients/sub_2_grad/tuple/control_dependency_1"
input: "gradients/add_14_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_14_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_14_grad/Sum_1"
input: "gradients/add_14_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_14_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_14_grad/Reshape"
input: "^gradients/add_14_grad/Reshape_1"
, name: "gradients/add_14_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_14_grad/Reshape"
input: "^gradients/add_14_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_14_grad/Reshape"
    }
  }
}
, name: "gradients/add_14_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_14_grad/Reshape_1"
input: "^gradients/add_14_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_14_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_5_grad/Neg"
op: "Neg"
input: "gradients/mul_12_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_5_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_12_grad/tuple/control_dependency"
input: "^gradients/sub_5_grad/Neg"
, name: "gradients/sub_5_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_12_grad/tuple/control_dependency"
input: "^gradients/sub_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_12_grad/Mul"
    }
  }
}
, name: "gradients/sub_5_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_5_grad/Neg"
input: "^gradients/sub_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_5_grad/Neg"
    }
  }
}
, name: "gradients/sub_6_grad/Neg"
op: "Neg"
input: "gradients/mul_12_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_6_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_12_grad/tuple/control_dependency_1"
input: "^gradients/sub_6_grad/Neg"
, name: "gradients/sub_6_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_12_grad/tuple/control_dependency_1"
input: "^gradients/sub_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_12_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_6_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_6_grad/Neg"
input: "^gradients/sub_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_6_grad/Neg"
    }
  }
}
, name: "gradients/sub_9_grad/Neg"
op: "Neg"
input: "gradients/mul_14_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_9_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_14_grad/tuple/control_dependency"
input: "^gradients/sub_9_grad/Neg"
, name: "gradients/sub_9_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_14_grad/tuple/control_dependency"
input: "^gradients/sub_9_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_14_grad/Mul"
    }
  }
}
, name: "gradients/sub_9_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_9_grad/Neg"
input: "^gradients/sub_9_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_9_grad/Neg"
    }
  }
}
, name: "gradients/sub_10_grad/Neg"
op: "Neg"
input: "gradients/mul_14_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_10_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_14_grad/tuple/control_dependency_1"
input: "^gradients/sub_10_grad/Neg"
, name: "gradients/sub_10_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_14_grad/tuple/control_dependency_1"
input: "^gradients/sub_10_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_14_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_10_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_10_grad/Neg"
input: "^gradients/sub_10_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_10_grad/Neg"
    }
  }
}
, name: "gradients/sub_13_grad/Neg"
op: "Neg"
input: "gradients/mul_16_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_13_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_16_grad/tuple/control_dependency"
input: "^gradients/sub_13_grad/Neg"
, name: "gradients/sub_13_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_16_grad/tuple/control_dependency"
input: "^gradients/sub_13_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_16_grad/Mul"
    }
  }
}
, name: "gradients/sub_13_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_13_grad/Neg"
input: "^gradients/sub_13_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_13_grad/Neg"
    }
  }
}
, name: "gradients/sub_14_grad/Neg"
op: "Neg"
input: "gradients/mul_16_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_14_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_16_grad/tuple/control_dependency_1"
input: "^gradients/sub_14_grad/Neg"
, name: "gradients/sub_14_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_16_grad/tuple/control_dependency_1"
input: "^gradients/sub_14_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_16_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_14_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_14_grad/Neg"
input: "^gradients/sub_14_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_14_grad/Neg"
    }
  }
}
, name: "gradients/sub_17_grad/Neg"
op: "Neg"
input: "gradients/mul_18_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_17_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_18_grad/tuple/control_dependency"
input: "^gradients/sub_17_grad/Neg"
, name: "gradients/sub_17_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_18_grad/tuple/control_dependency"
input: "^gradients/sub_17_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_18_grad/Mul"
    }
  }
}
, name: "gradients/sub_17_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_17_grad/Neg"
input: "^gradients/sub_17_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_17_grad/Neg"
    }
  }
}
, name: "gradients/sub_18_grad/Neg"
op: "Neg"
input: "gradients/mul_18_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_18_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_18_grad/tuple/control_dependency_1"
input: "^gradients/sub_18_grad/Neg"
, name: "gradients/sub_18_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_18_grad/tuple/control_dependency_1"
input: "^gradients/sub_18_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_18_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_18_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_18_grad/Neg"
input: "^gradients/sub_18_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_18_grad/Neg"
    }
  }
}
, name: "gradients/sub_21_grad/Neg"
op: "Neg"
input: "gradients/mul_20_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_21_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_20_grad/tuple/control_dependency"
input: "^gradients/sub_21_grad/Neg"
, name: "gradients/sub_21_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_20_grad/tuple/control_dependency"
input: "^gradients/sub_21_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_20_grad/Mul"
    }
  }
}
, name: "gradients/sub_21_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_21_grad/Neg"
input: "^gradients/sub_21_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_21_grad/Neg"
    }
  }
}
, name: "gradients/sub_22_grad/Neg"
op: "Neg"
input: "gradients/mul_20_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_22_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_20_grad/tuple/control_dependency_1"
input: "^gradients/sub_22_grad/Neg"
, name: "gradients/sub_22_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_20_grad/tuple/control_dependency_1"
input: "^gradients/sub_22_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_20_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_22_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_22_grad/Neg"
input: "^gradients/sub_22_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_22_grad/Neg"
    }
  }
}
, name: "gradients/sub_25_grad/Neg"
op: "Neg"
input: "gradients/mul_22_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_25_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_22_grad/tuple/control_dependency"
input: "^gradients/sub_25_grad/Neg"
, name: "gradients/sub_25_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_22_grad/tuple/control_dependency"
input: "^gradients/sub_25_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_22_grad/Mul"
    }
  }
}
, name: "gradients/sub_25_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_25_grad/Neg"
input: "^gradients/sub_25_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_25_grad/Neg"
    }
  }
}
, name: "gradients/sub_26_grad/Neg"
op: "Neg"
input: "gradients/mul_22_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_26_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_22_grad/tuple/control_dependency_1"
input: "^gradients/sub_26_grad/Neg"
, name: "gradients/sub_26_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_22_grad/tuple/control_dependency_1"
input: "^gradients/sub_26_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_22_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_26_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_26_grad/Neg"
input: "^gradients/sub_26_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_26_grad/Neg"
    }
  }
}
, name: "gradients/sub_29_grad/Neg"
op: "Neg"
input: "gradients/mul_24_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_29_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_24_grad/tuple/control_dependency"
input: "^gradients/sub_29_grad/Neg"
, name: "gradients/sub_29_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_24_grad/tuple/control_dependency"
input: "^gradients/sub_29_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_24_grad/Mul"
    }
  }
}
, name: "gradients/sub_29_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_29_grad/Neg"
input: "^gradients/sub_29_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_29_grad/Neg"
    }
  }
}
, name: "gradients/sub_30_grad/Neg"
op: "Neg"
input: "gradients/mul_24_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_30_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_24_grad/tuple/control_dependency_1"
input: "^gradients/sub_30_grad/Neg"
, name: "gradients/sub_30_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_24_grad/tuple/control_dependency_1"
input: "^gradients/sub_30_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_24_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_30_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_30_grad/Neg"
input: "^gradients/sub_30_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_30_grad/Neg"
    }
  }
}
, name: "gradients/sub_33_grad/Neg"
op: "Neg"
input: "gradients/mul_26_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_33_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_26_grad/tuple/control_dependency"
input: "^gradients/sub_33_grad/Neg"
, name: "gradients/sub_33_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_26_grad/tuple/control_dependency"
input: "^gradients/sub_33_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_26_grad/Mul"
    }
  }
}
, name: "gradients/sub_33_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_33_grad/Neg"
input: "^gradients/sub_33_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_33_grad/Neg"
    }
  }
}
, name: "gradients/sub_34_grad/Neg"
op: "Neg"
input: "gradients/mul_26_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_34_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_26_grad/tuple/control_dependency_1"
input: "^gradients/sub_34_grad/Neg"
, name: "gradients/sub_34_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_26_grad/tuple/control_dependency_1"
input: "^gradients/sub_34_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_26_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_34_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_34_grad/Neg"
input: "^gradients/sub_34_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_34_grad/Neg"
    }
  }
}
, name: "gradients/sub_37_grad/Neg"
op: "Neg"
input: "gradients/mul_28_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_37_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_28_grad/tuple/control_dependency"
input: "^gradients/sub_37_grad/Neg"
, name: "gradients/sub_37_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_28_grad/tuple/control_dependency"
input: "^gradients/sub_37_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_28_grad/Mul"
    }
  }
}
, name: "gradients/sub_37_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_37_grad/Neg"
input: "^gradients/sub_37_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_37_grad/Neg"
    }
  }
}
, name: "gradients/sub_38_grad/Neg"
op: "Neg"
input: "gradients/mul_28_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_38_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_28_grad/tuple/control_dependency_1"
input: "^gradients/sub_38_grad/Neg"
, name: "gradients/sub_38_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_28_grad/tuple/control_dependency_1"
input: "^gradients/sub_38_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_28_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_38_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_38_grad/Neg"
input: "^gradients/sub_38_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_38_grad/Neg"
    }
  }
}
, name: "gradients/sub_41_grad/Neg"
op: "Neg"
input: "gradients/mul_30_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_41_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_30_grad/tuple/control_dependency"
input: "^gradients/sub_41_grad/Neg"
, name: "gradients/sub_41_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_30_grad/tuple/control_dependency"
input: "^gradients/sub_41_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_30_grad/Mul"
    }
  }
}
, name: "gradients/sub_41_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_41_grad/Neg"
input: "^gradients/sub_41_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_41_grad/Neg"
    }
  }
}
, name: "gradients/sub_42_grad/Neg"
op: "Neg"
input: "gradients/mul_30_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_42_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_30_grad/tuple/control_dependency_1"
input: "^gradients/sub_42_grad/Neg"
, name: "gradients/sub_42_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_30_grad/tuple/control_dependency_1"
input: "^gradients/sub_42_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_30_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_42_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_42_grad/Neg"
input: "^gradients/sub_42_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_42_grad/Neg"
    }
  }
}
, name: "gradients/sub_45_grad/Neg"
op: "Neg"
input: "gradients/mul_32_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_45_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_32_grad/tuple/control_dependency"
input: "^gradients/sub_45_grad/Neg"
, name: "gradients/sub_45_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_32_grad/tuple/control_dependency"
input: "^gradients/sub_45_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_32_grad/Mul"
    }
  }
}
, name: "gradients/sub_45_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_45_grad/Neg"
input: "^gradients/sub_45_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_45_grad/Neg"
    }
  }
}
, name: "gradients/sub_46_grad/Neg"
op: "Neg"
input: "gradients/mul_32_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_46_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_32_grad/tuple/control_dependency_1"
input: "^gradients/sub_46_grad/Neg"
, name: "gradients/sub_46_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_32_grad/tuple/control_dependency_1"
input: "^gradients/sub_46_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_32_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_46_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_46_grad/Neg"
input: "^gradients/sub_46_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_46_grad/Neg"
    }
  }
}
, name: "gradients/sub_49_grad/Neg"
op: "Neg"
input: "gradients/mul_34_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_49_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_34_grad/tuple/control_dependency"
input: "^gradients/sub_49_grad/Neg"
, name: "gradients/sub_49_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_34_grad/tuple/control_dependency"
input: "^gradients/sub_49_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_34_grad/Mul"
    }
  }
}
, name: "gradients/sub_49_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_49_grad/Neg"
input: "^gradients/sub_49_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_49_grad/Neg"
    }
  }
}
, name: "gradients/sub_50_grad/Neg"
op: "Neg"
input: "gradients/mul_34_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_50_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_34_grad/tuple/control_dependency_1"
input: "^gradients/sub_50_grad/Neg"
, name: "gradients/sub_50_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_34_grad/tuple/control_dependency_1"
input: "^gradients/sub_50_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_34_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_50_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_50_grad/Neg"
input: "^gradients/sub_50_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_50_grad/Neg"
    }
  }
}
, name: "gradients/sub_53_grad/Neg"
op: "Neg"
input: "gradients/mul_36_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_53_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_36_grad/tuple/control_dependency"
input: "^gradients/sub_53_grad/Neg"
, name: "gradients/sub_53_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_36_grad/tuple/control_dependency"
input: "^gradients/sub_53_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_36_grad/Mul"
    }
  }
}
, name: "gradients/sub_53_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_53_grad/Neg"
input: "^gradients/sub_53_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_53_grad/Neg"
    }
  }
}
, name: "gradients/sub_54_grad/Neg"
op: "Neg"
input: "gradients/mul_36_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_54_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_36_grad/tuple/control_dependency_1"
input: "^gradients/sub_54_grad/Neg"
, name: "gradients/sub_54_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_36_grad/tuple/control_dependency_1"
input: "^gradients/sub_54_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_36_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_54_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_54_grad/Neg"
input: "^gradients/sub_54_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_54_grad/Neg"
    }
  }
}
, name: "gradients/sub_57_grad/Neg"
op: "Neg"
input: "gradients/mul_38_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_57_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_38_grad/tuple/control_dependency"
input: "^gradients/sub_57_grad/Neg"
, name: "gradients/sub_57_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_38_grad/tuple/control_dependency"
input: "^gradients/sub_57_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_38_grad/Mul"
    }
  }
}
, name: "gradients/sub_57_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_57_grad/Neg"
input: "^gradients/sub_57_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_57_grad/Neg"
    }
  }
}
, name: "gradients/sub_58_grad/Neg"
op: "Neg"
input: "gradients/mul_38_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_58_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_38_grad/tuple/control_dependency_1"
input: "^gradients/sub_58_grad/Neg"
, name: "gradients/sub_58_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_38_grad/tuple/control_dependency_1"
input: "^gradients/sub_58_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_38_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_58_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_58_grad/Neg"
input: "^gradients/sub_58_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_58_grad/Neg"
    }
  }
}
, name: "gradients/sub_61_grad/Neg"
op: "Neg"
input: "gradients/mul_40_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_61_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_40_grad/tuple/control_dependency"
input: "^gradients/sub_61_grad/Neg"
, name: "gradients/sub_61_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_40_grad/tuple/control_dependency"
input: "^gradients/sub_61_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_40_grad/Mul"
    }
  }
}
, name: "gradients/sub_61_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_61_grad/Neg"
input: "^gradients/sub_61_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_61_grad/Neg"
    }
  }
}
, name: "gradients/sub_62_grad/Neg"
op: "Neg"
input: "gradients/mul_40_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_62_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_40_grad/tuple/control_dependency_1"
input: "^gradients/sub_62_grad/Neg"
, name: "gradients/sub_62_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_40_grad/tuple/control_dependency_1"
input: "^gradients/sub_62_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_40_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_62_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_62_grad/Neg"
input: "^gradients/sub_62_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_62_grad/Neg"
    }
  }
}
, name: "gradients/sub_65_grad/Neg"
op: "Neg"
input: "gradients/mul_42_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_65_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_42_grad/tuple/control_dependency"
input: "^gradients/sub_65_grad/Neg"
, name: "gradients/sub_65_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_42_grad/tuple/control_dependency"
input: "^gradients/sub_65_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_42_grad/Mul"
    }
  }
}
, name: "gradients/sub_65_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_65_grad/Neg"
input: "^gradients/sub_65_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_65_grad/Neg"
    }
  }
}
, name: "gradients/sub_66_grad/Neg"
op: "Neg"
input: "gradients/mul_42_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_66_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_42_grad/tuple/control_dependency_1"
input: "^gradients/sub_66_grad/Neg"
, name: "gradients/sub_66_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_42_grad/tuple/control_dependency_1"
input: "^gradients/sub_66_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_42_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_66_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_66_grad/Neg"
input: "^gradients/sub_66_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_66_grad/Neg"
    }
  }
}
, name: "gradients/sub_69_grad/Neg"
op: "Neg"
input: "gradients/mul_44_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_69_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_44_grad/tuple/control_dependency"
input: "^gradients/sub_69_grad/Neg"
, name: "gradients/sub_69_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_44_grad/tuple/control_dependency"
input: "^gradients/sub_69_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_44_grad/Mul"
    }
  }
}
, name: "gradients/sub_69_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_69_grad/Neg"
input: "^gradients/sub_69_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_69_grad/Neg"
    }
  }
}
, name: "gradients/sub_70_grad/Neg"
op: "Neg"
input: "gradients/mul_44_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_70_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_44_grad/tuple/control_dependency_1"
input: "^gradients/sub_70_grad/Neg"
, name: "gradients/sub_70_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_44_grad/tuple/control_dependency_1"
input: "^gradients/sub_70_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_44_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_70_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_70_grad/Neg"
input: "^gradients/sub_70_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_70_grad/Neg"
    }
  }
}
, name: "gradients/sub_73_grad/Neg"
op: "Neg"
input: "gradients/mul_46_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_73_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_46_grad/tuple/control_dependency"
input: "^gradients/sub_73_grad/Neg"
, name: "gradients/sub_73_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_46_grad/tuple/control_dependency"
input: "^gradients/sub_73_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_46_grad/Mul"
    }
  }
}
, name: "gradients/sub_73_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_73_grad/Neg"
input: "^gradients/sub_73_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_73_grad/Neg"
    }
  }
}
, name: "gradients/sub_74_grad/Neg"
op: "Neg"
input: "gradients/mul_46_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_74_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_46_grad/tuple/control_dependency_1"
input: "^gradients/sub_74_grad/Neg"
, name: "gradients/sub_74_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_46_grad/tuple/control_dependency_1"
input: "^gradients/sub_74_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_46_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_74_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_74_grad/Neg"
input: "^gradients/sub_74_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_74_grad/Neg"
    }
  }
}
, name: "gradients/sub_77_grad/Neg"
op: "Neg"
input: "gradients/mul_48_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_77_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_48_grad/tuple/control_dependency"
input: "^gradients/sub_77_grad/Neg"
, name: "gradients/sub_77_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_48_grad/tuple/control_dependency"
input: "^gradients/sub_77_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_48_grad/Mul"
    }
  }
}
, name: "gradients/sub_77_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_77_grad/Neg"
input: "^gradients/sub_77_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_77_grad/Neg"
    }
  }
}
, name: "gradients/sub_78_grad/Neg"
op: "Neg"
input: "gradients/mul_48_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_78_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_48_grad/tuple/control_dependency_1"
input: "^gradients/sub_78_grad/Neg"
, name: "gradients/sub_78_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_48_grad/tuple/control_dependency_1"
input: "^gradients/sub_78_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_48_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_78_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_78_grad/Neg"
input: "^gradients/sub_78_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_78_grad/Neg"
    }
  }
}
, name: "gradients/sub_81_grad/Neg"
op: "Neg"
input: "gradients/mul_50_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_81_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_50_grad/tuple/control_dependency"
input: "^gradients/sub_81_grad/Neg"
, name: "gradients/sub_81_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_50_grad/tuple/control_dependency"
input: "^gradients/sub_81_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_50_grad/Mul"
    }
  }
}
, name: "gradients/sub_81_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_81_grad/Neg"
input: "^gradients/sub_81_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_81_grad/Neg"
    }
  }
}
, name: "gradients/sub_82_grad/Neg"
op: "Neg"
input: "gradients/mul_50_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_82_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_50_grad/tuple/control_dependency_1"
input: "^gradients/sub_82_grad/Neg"
, name: "gradients/sub_82_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_50_grad/tuple/control_dependency_1"
input: "^gradients/sub_82_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_50_grad/Mul_1"
    }
  }
}
, name: "gradients/sub_82_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_82_grad/Neg"
input: "^gradients/sub_82_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_82_grad/Neg"
    }
  }
}
, name: "gradients/add_11_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_1_grad/tuple/control_dependency"
, name: "gradients/add_11_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_1_grad/tuple/control_dependency"
input: "^gradients/add_11_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_1_grad/Reshape"
    }
  }
}
, name: "gradients/add_11_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_1_grad/tuple/control_dependency"
input: "^gradients/add_11_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_1_grad/Reshape"
    }
  }
}
, name: "gradients/add_10_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/add_10_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_10_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_10_grad/Shape"
input: "gradients/add_10_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_10_grad/Sum"
op: "Sum"
input: "gradients/Log_grad/mul"
input: "gradients/add_10_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_10_grad/Reshape"
op: "Reshape"
input: "gradients/add_10_grad/Sum"
input: "gradients/add_10_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_10_grad/Sum_1"
op: "Sum"
input: "gradients/Log_grad/mul"
input: "gradients/add_10_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_10_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_10_grad/Sum_1"
input: "gradients/add_10_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_10_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_10_grad/Reshape"
input: "^gradients/add_10_grad/Reshape_1"
, name: "gradients/add_10_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_10_grad/Reshape"
input: "^gradients/add_10_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_10_grad/Reshape"
    }
  }
}
, name: "gradients/add_10_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_10_grad/Reshape_1"
input: "^gradients/add_10_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_10_grad/Reshape_1"
    }
  }
}
, name: "gradients/Exp_4_grad/mul"
op: "Mul"
input: "gradients/add_13_grad/tuple/control_dependency"
input: "Exp_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Square_1_grad/Const"
op: "Const"
input: "^gradients/add_13_grad/tuple/control_dependency_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
, name: "gradients/Square_1_grad/Mul"
op: "Mul"
input: "split"
input: "gradients/Square_1_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Square_1_grad/Mul_1"
op: "Mul"
input: "gradients/add_13_grad/tuple/control_dependency_1"
input: "gradients/Square_1_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN"
op: "AddN"
input: "gradients/sub_5_grad/tuple/control_dependency"
input: "gradients/sub_6_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_12_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_21_grad/MatMul"
op: "MatMul"
input: "gradients/AddN"
input: "MatMul_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_21_grad/MatMul_1"
op: "MatMul"
input: "add_17"
input: "gradients/AddN"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_21_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_21_grad/MatMul"
input: "^gradients/MatMul_21_grad/MatMul_1"
, name: "gradients/MatMul_21_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_21_grad/MatMul"
input: "^gradients/MatMul_21_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_21_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_21_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_21_grad/MatMul_1"
input: "^gradients/MatMul_21_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_21_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_1"
op: "AddN"
input: "gradients/sub_9_grad/tuple/control_dependency"
input: "gradients/sub_10_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_14_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_28_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_1"
input: "MatMul_27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_28_grad/MatMul_1"
op: "MatMul"
input: "add_21"
input: "gradients/AddN_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_28_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_28_grad/MatMul"
input: "^gradients/MatMul_28_grad/MatMul_1"
, name: "gradients/MatMul_28_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_28_grad/MatMul"
input: "^gradients/MatMul_28_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_28_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_28_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_28_grad/MatMul_1"
input: "^gradients/MatMul_28_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_28_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_2"
op: "AddN"
input: "gradients/sub_13_grad/tuple/control_dependency"
input: "gradients/sub_14_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_16_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_35_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_2"
input: "MatMul_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_35_grad/MatMul_1"
op: "MatMul"
input: "add_25"
input: "gradients/AddN_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_35_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_35_grad/MatMul"
input: "^gradients/MatMul_35_grad/MatMul_1"
, name: "gradients/MatMul_35_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_35_grad/MatMul"
input: "^gradients/MatMul_35_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_35_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_35_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_35_grad/MatMul_1"
input: "^gradients/MatMul_35_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_35_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_3"
op: "AddN"
input: "gradients/sub_17_grad/tuple/control_dependency"
input: "gradients/sub_18_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_18_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_42_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_3"
input: "MatMul_41"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_42_grad/MatMul_1"
op: "MatMul"
input: "add_29"
input: "gradients/AddN_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_42_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_42_grad/MatMul"
input: "^gradients/MatMul_42_grad/MatMul_1"
, name: "gradients/MatMul_42_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_42_grad/MatMul"
input: "^gradients/MatMul_42_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_42_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_42_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_42_grad/MatMul_1"
input: "^gradients/MatMul_42_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_42_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_4"
op: "AddN"
input: "gradients/sub_21_grad/tuple/control_dependency"
input: "gradients/sub_22_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_20_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_49_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_4"
input: "MatMul_48"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_49_grad/MatMul_1"
op: "MatMul"
input: "add_33"
input: "gradients/AddN_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_49_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_49_grad/MatMul"
input: "^gradients/MatMul_49_grad/MatMul_1"
, name: "gradients/MatMul_49_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_49_grad/MatMul"
input: "^gradients/MatMul_49_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_49_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_49_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_49_grad/MatMul_1"
input: "^gradients/MatMul_49_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_49_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_5"
op: "AddN"
input: "gradients/sub_25_grad/tuple/control_dependency"
input: "gradients/sub_26_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_22_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_56_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_5"
input: "MatMul_55"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_56_grad/MatMul_1"
op: "MatMul"
input: "add_37"
input: "gradients/AddN_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_56_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_56_grad/MatMul"
input: "^gradients/MatMul_56_grad/MatMul_1"
, name: "gradients/MatMul_56_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_56_grad/MatMul"
input: "^gradients/MatMul_56_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_56_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_56_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_56_grad/MatMul_1"
input: "^gradients/MatMul_56_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_56_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_6"
op: "AddN"
input: "gradients/sub_29_grad/tuple/control_dependency"
input: "gradients/sub_30_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_24_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_63_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_6"
input: "MatMul_62"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_63_grad/MatMul_1"
op: "MatMul"
input: "add_41"
input: "gradients/AddN_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_63_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_63_grad/MatMul"
input: "^gradients/MatMul_63_grad/MatMul_1"
, name: "gradients/MatMul_63_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_63_grad/MatMul"
input: "^gradients/MatMul_63_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_63_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_63_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_63_grad/MatMul_1"
input: "^gradients/MatMul_63_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_63_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_7"
op: "AddN"
input: "gradients/sub_33_grad/tuple/control_dependency"
input: "gradients/sub_34_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_26_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_70_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_7"
input: "MatMul_69"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_70_grad/MatMul_1"
op: "MatMul"
input: "add_45"
input: "gradients/AddN_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_70_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_70_grad/MatMul"
input: "^gradients/MatMul_70_grad/MatMul_1"
, name: "gradients/MatMul_70_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_70_grad/MatMul"
input: "^gradients/MatMul_70_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_70_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_70_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_70_grad/MatMul_1"
input: "^gradients/MatMul_70_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_70_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_8"
op: "AddN"
input: "gradients/sub_37_grad/tuple/control_dependency"
input: "gradients/sub_38_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_28_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_77_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_8"
input: "MatMul_76"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_77_grad/MatMul_1"
op: "MatMul"
input: "add_49"
input: "gradients/AddN_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_77_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_77_grad/MatMul"
input: "^gradients/MatMul_77_grad/MatMul_1"
, name: "gradients/MatMul_77_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_77_grad/MatMul"
input: "^gradients/MatMul_77_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_77_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_77_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_77_grad/MatMul_1"
input: "^gradients/MatMul_77_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_77_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_9"
op: "AddN"
input: "gradients/sub_41_grad/tuple/control_dependency"
input: "gradients/sub_42_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_30_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_84_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_9"
input: "MatMul_83"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_84_grad/MatMul_1"
op: "MatMul"
input: "add_53"
input: "gradients/AddN_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_84_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_84_grad/MatMul"
input: "^gradients/MatMul_84_grad/MatMul_1"
, name: "gradients/MatMul_84_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_84_grad/MatMul"
input: "^gradients/MatMul_84_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_84_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_84_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_84_grad/MatMul_1"
input: "^gradients/MatMul_84_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_84_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_10"
op: "AddN"
input: "gradients/sub_45_grad/tuple/control_dependency"
input: "gradients/sub_46_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_32_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_91_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_10"
input: "MatMul_90"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_91_grad/MatMul_1"
op: "MatMul"
input: "add_57"
input: "gradients/AddN_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_91_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_91_grad/MatMul"
input: "^gradients/MatMul_91_grad/MatMul_1"
, name: "gradients/MatMul_91_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_91_grad/MatMul"
input: "^gradients/MatMul_91_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_91_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_91_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_91_grad/MatMul_1"
input: "^gradients/MatMul_91_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_91_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_11"
op: "AddN"
input: "gradients/sub_49_grad/tuple/control_dependency"
input: "gradients/sub_50_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_34_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_98_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_11"
input: "MatMul_97"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_98_grad/MatMul_1"
op: "MatMul"
input: "add_61"
input: "gradients/AddN_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_98_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_98_grad/MatMul"
input: "^gradients/MatMul_98_grad/MatMul_1"
, name: "gradients/MatMul_98_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_98_grad/MatMul"
input: "^gradients/MatMul_98_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_98_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_98_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_98_grad/MatMul_1"
input: "^gradients/MatMul_98_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_98_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_12"
op: "AddN"
input: "gradients/sub_53_grad/tuple/control_dependency"
input: "gradients/sub_54_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_36_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_105_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_12"
input: "MatMul_104"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_105_grad/MatMul_1"
op: "MatMul"
input: "add_65"
input: "gradients/AddN_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_105_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_105_grad/MatMul"
input: "^gradients/MatMul_105_grad/MatMul_1"
, name: "gradients/MatMul_105_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_105_grad/MatMul"
input: "^gradients/MatMul_105_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_105_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_105_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_105_grad/MatMul_1"
input: "^gradients/MatMul_105_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_105_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_13"
op: "AddN"
input: "gradients/sub_57_grad/tuple/control_dependency"
input: "gradients/sub_58_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_38_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_112_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_13"
input: "MatMul_111"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_112_grad/MatMul_1"
op: "MatMul"
input: "add_69"
input: "gradients/AddN_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_112_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_112_grad/MatMul"
input: "^gradients/MatMul_112_grad/MatMul_1"
, name: "gradients/MatMul_112_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_112_grad/MatMul"
input: "^gradients/MatMul_112_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_112_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_112_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_112_grad/MatMul_1"
input: "^gradients/MatMul_112_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_112_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_14"
op: "AddN"
input: "gradients/sub_61_grad/tuple/control_dependency"
input: "gradients/sub_62_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_40_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_119_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_14"
input: "MatMul_118"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_119_grad/MatMul_1"
op: "MatMul"
input: "add_73"
input: "gradients/AddN_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_119_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_119_grad/MatMul"
input: "^gradients/MatMul_119_grad/MatMul_1"
, name: "gradients/MatMul_119_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_119_grad/MatMul"
input: "^gradients/MatMul_119_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_119_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_119_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_119_grad/MatMul_1"
input: "^gradients/MatMul_119_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_119_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_15"
op: "AddN"
input: "gradients/sub_65_grad/tuple/control_dependency"
input: "gradients/sub_66_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_42_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_126_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_15"
input: "MatMul_125"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_126_grad/MatMul_1"
op: "MatMul"
input: "add_77"
input: "gradients/AddN_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_126_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_126_grad/MatMul"
input: "^gradients/MatMul_126_grad/MatMul_1"
, name: "gradients/MatMul_126_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_126_grad/MatMul"
input: "^gradients/MatMul_126_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_126_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_126_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_126_grad/MatMul_1"
input: "^gradients/MatMul_126_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_126_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_16"
op: "AddN"
input: "gradients/sub_69_grad/tuple/control_dependency"
input: "gradients/sub_70_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_44_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_133_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_16"
input: "MatMul_132"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_133_grad/MatMul_1"
op: "MatMul"
input: "add_81"
input: "gradients/AddN_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_133_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_133_grad/MatMul"
input: "^gradients/MatMul_133_grad/MatMul_1"
, name: "gradients/MatMul_133_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_133_grad/MatMul"
input: "^gradients/MatMul_133_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_133_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_133_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_133_grad/MatMul_1"
input: "^gradients/MatMul_133_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_133_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_17"
op: "AddN"
input: "gradients/sub_73_grad/tuple/control_dependency"
input: "gradients/sub_74_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_46_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_140_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_17"
input: "MatMul_139"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_140_grad/MatMul_1"
op: "MatMul"
input: "add_85"
input: "gradients/AddN_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_140_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_140_grad/MatMul"
input: "^gradients/MatMul_140_grad/MatMul_1"
, name: "gradients/MatMul_140_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_140_grad/MatMul"
input: "^gradients/MatMul_140_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_140_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_140_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_140_grad/MatMul_1"
input: "^gradients/MatMul_140_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_140_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_18"
op: "AddN"
input: "gradients/sub_77_grad/tuple/control_dependency"
input: "gradients/sub_78_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_48_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_147_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_18"
input: "MatMul_146"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_147_grad/MatMul_1"
op: "MatMul"
input: "add_89"
input: "gradients/AddN_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_147_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_147_grad/MatMul"
input: "^gradients/MatMul_147_grad/MatMul_1"
, name: "gradients/MatMul_147_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_147_grad/MatMul"
input: "^gradients/MatMul_147_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_147_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_147_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_147_grad/MatMul_1"
input: "^gradients/MatMul_147_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_147_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_19"
op: "AddN"
input: "gradients/sub_81_grad/tuple/control_dependency"
input: "gradients/sub_82_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_50_grad/Mul"
    }
  }
}
, name: "gradients/MatMul_154_grad/MatMul"
op: "MatMul"
input: "gradients/AddN_19"
input: "MatMul_153"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_154_grad/MatMul_1"
op: "MatMul"
input: "add_93"
input: "gradients/AddN_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_154_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_154_grad/MatMul"
input: "^gradients/MatMul_154_grad/MatMul_1"
, name: "gradients/MatMul_154_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_154_grad/MatMul"
input: "^gradients/MatMul_154_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_154_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_154_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_154_grad/MatMul_1"
input: "^gradients/MatMul_154_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_154_grad/MatMul_1"
    }
  }
}
, name: "gradients/div_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/div_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/div_grad/Shape"
input: "gradients/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/div_grad/RealDiv"
op: "RealDiv"
input: "gradients/add_11_grad/tuple/control_dependency"
input: "add_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_grad/Sum"
op: "Sum"
input: "gradients/div_grad/RealDiv"
input: "gradients/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/div_grad/Reshape"
op: "Reshape"
input: "gradients/div_grad/Sum"
input: "gradients/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/div_grad/Neg"
op: "Neg"
input: "add_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/div_grad/Neg"
input: "add_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/div_grad/RealDiv_1"
input: "add_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_grad/mul"
op: "Mul"
input: "gradients/add_11_grad/tuple/control_dependency"
input: "gradients/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_grad/Sum_1"
op: "Sum"
input: "gradients/div_grad/mul"
input: "gradients/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/div_grad/Reshape_1"
op: "Reshape"
input: "gradients/div_grad/Sum_1"
input: "gradients/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/div_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/div_grad/Reshape"
input: "^gradients/div_grad/Reshape_1"
, name: "gradients/div_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/div_grad/Reshape"
input: "^gradients/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/div_grad/Reshape"
    }
  }
}
, name: "gradients/div_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/div_grad/Reshape_1"
input: "^gradients/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/div_grad/Reshape_1"
    }
  }
}
, name: "gradients/div_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/div_1_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/div_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/div_1_grad/Shape"
input: "gradients/div_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/div_1_grad/RealDiv"
op: "RealDiv"
input: "gradients/add_11_grad/tuple/control_dependency_1"
input: "add_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_1_grad/Sum"
op: "Sum"
input: "gradients/div_1_grad/RealDiv"
input: "gradients/div_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/div_1_grad/Reshape"
op: "Reshape"
input: "gradients/div_1_grad/Sum"
input: "gradients/div_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/div_1_grad/Neg"
op: "Neg"
input: "Square"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_1_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/div_1_grad/Neg"
input: "add_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_1_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/div_1_grad/RealDiv_1"
input: "add_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_1_grad/mul"
op: "Mul"
input: "gradients/add_11_grad/tuple/control_dependency_1"
input: "gradients/div_1_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_1_grad/Sum_1"
op: "Sum"
input: "gradients/div_1_grad/mul"
input: "gradients/div_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/div_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/div_1_grad/Sum_1"
input: "gradients/div_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/div_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/div_1_grad/Reshape"
input: "^gradients/div_1_grad/Reshape_1"
, name: "gradients/div_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/div_1_grad/Reshape"
input: "^gradients/div_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/div_1_grad/Reshape"
    }
  }
}
, name: "gradients/div_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/div_1_grad/Reshape_1"
input: "^gradients/div_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/div_1_grad/Reshape_1"
    }
  }
}
, name: "gradients/div_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/div_2_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/div_2_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/div_2_grad/Shape"
input: "gradients/div_2_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/div_2_grad/RealDiv"
op: "RealDiv"
input: "gradients/add_10_grad/tuple/control_dependency"
input: "add_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_2_grad/Sum"
op: "Sum"
input: "gradients/div_2_grad/RealDiv"
input: "gradients/div_2_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/div_2_grad/Reshape"
op: "Reshape"
input: "gradients/div_2_grad/Sum"
input: "gradients/div_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/div_2_grad/Neg"
op: "Neg"
input: "add_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_2_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/div_2_grad/Neg"
input: "add_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_2_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/div_2_grad/RealDiv_1"
input: "add_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_2_grad/mul"
op: "Mul"
input: "gradients/add_10_grad/tuple/control_dependency"
input: "gradients/div_2_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/div_2_grad/Sum_1"
op: "Sum"
input: "gradients/div_2_grad/mul"
input: "gradients/div_2_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/div_2_grad/Reshape_1"
op: "Reshape"
input: "gradients/div_2_grad/Sum_1"
input: "gradients/div_2_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/div_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/div_2_grad/Reshape"
input: "^gradients/div_2_grad/Reshape_1"
, name: "gradients/div_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/div_2_grad/Reshape"
input: "^gradients/div_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/div_2_grad/Reshape"
    }
  }
}
, name: "gradients/div_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/div_2_grad/Reshape_1"
input: "^gradients/div_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/div_2_grad/Reshape_1"
    }
  }
}
, name: "gradients/MatMul_20_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_21_grad/tuple/control_dependency_1"
input: "adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_20_grad/MatMul_1"
op: "MatMul"
input: "cond/Merge_1"
input: "gradients/MatMul_21_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_20_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_20_grad/MatMul"
input: "^gradients/MatMul_20_grad/MatMul_1"
, name: "gradients/MatMul_20_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_20_grad/MatMul"
input: "^gradients/MatMul_20_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_20_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_20_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_20_grad/MatMul_1"
input: "^gradients/MatMul_20_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_20_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_27_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_28_grad/tuple/control_dependency_1"
input: "adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_27_grad/MatMul_1"
op: "MatMul"
input: "cond_1/Merge_1"
input: "gradients/MatMul_28_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_27_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_27_grad/MatMul"
input: "^gradients/MatMul_27_grad/MatMul_1"
, name: "gradients/MatMul_27_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_27_grad/MatMul"
input: "^gradients/MatMul_27_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_27_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_27_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_27_grad/MatMul_1"
input: "^gradients/MatMul_27_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_27_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_34_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_35_grad/tuple/control_dependency_1"
input: "adjoint_2/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_34_grad/MatMul_1"
op: "MatMul"
input: "cond_2/Merge_1"
input: "gradients/MatMul_35_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_34_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_34_grad/MatMul"
input: "^gradients/MatMul_34_grad/MatMul_1"
, name: "gradients/MatMul_34_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_34_grad/MatMul"
input: "^gradients/MatMul_34_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_34_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_34_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_34_grad/MatMul_1"
input: "^gradients/MatMul_34_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_34_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_41_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_42_grad/tuple/control_dependency_1"
input: "adjoint_3/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_41_grad/MatMul_1"
op: "MatMul"
input: "cond_3/Merge_1"
input: "gradients/MatMul_42_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_41_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_41_grad/MatMul"
input: "^gradients/MatMul_41_grad/MatMul_1"
, name: "gradients/MatMul_41_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_41_grad/MatMul"
input: "^gradients/MatMul_41_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_41_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_41_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_41_grad/MatMul_1"
input: "^gradients/MatMul_41_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_41_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_48_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_49_grad/tuple/control_dependency_1"
input: "adjoint_4/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_48_grad/MatMul_1"
op: "MatMul"
input: "cond_4/Merge_1"
input: "gradients/MatMul_49_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_48_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_48_grad/MatMul"
input: "^gradients/MatMul_48_grad/MatMul_1"
, name: "gradients/MatMul_48_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_48_grad/MatMul"
input: "^gradients/MatMul_48_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_48_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_48_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_48_grad/MatMul_1"
input: "^gradients/MatMul_48_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_48_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_55_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_56_grad/tuple/control_dependency_1"
input: "adjoint_5/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_55_grad/MatMul_1"
op: "MatMul"
input: "cond_5/Merge_1"
input: "gradients/MatMul_56_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_55_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_55_grad/MatMul"
input: "^gradients/MatMul_55_grad/MatMul_1"
, name: "gradients/MatMul_55_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_55_grad/MatMul"
input: "^gradients/MatMul_55_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_55_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_55_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_55_grad/MatMul_1"
input: "^gradients/MatMul_55_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_55_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_62_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_63_grad/tuple/control_dependency_1"
input: "adjoint_6/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_62_grad/MatMul_1"
op: "MatMul"
input: "cond_6/Merge_1"
input: "gradients/MatMul_63_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_62_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_62_grad/MatMul"
input: "^gradients/MatMul_62_grad/MatMul_1"
, name: "gradients/MatMul_62_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_62_grad/MatMul"
input: "^gradients/MatMul_62_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_62_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_62_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_62_grad/MatMul_1"
input: "^gradients/MatMul_62_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_62_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_69_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_70_grad/tuple/control_dependency_1"
input: "adjoint_7/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_69_grad/MatMul_1"
op: "MatMul"
input: "cond_7/Merge_1"
input: "gradients/MatMul_70_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_69_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_69_grad/MatMul"
input: "^gradients/MatMul_69_grad/MatMul_1"
, name: "gradients/MatMul_69_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_69_grad/MatMul"
input: "^gradients/MatMul_69_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_69_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_69_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_69_grad/MatMul_1"
input: "^gradients/MatMul_69_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_69_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_76_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_77_grad/tuple/control_dependency_1"
input: "adjoint_8/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_76_grad/MatMul_1"
op: "MatMul"
input: "cond_8/Merge_1"
input: "gradients/MatMul_77_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_76_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_76_grad/MatMul"
input: "^gradients/MatMul_76_grad/MatMul_1"
, name: "gradients/MatMul_76_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_76_grad/MatMul"
input: "^gradients/MatMul_76_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_76_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_76_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_76_grad/MatMul_1"
input: "^gradients/MatMul_76_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_76_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_83_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_84_grad/tuple/control_dependency_1"
input: "adjoint_9/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_83_grad/MatMul_1"
op: "MatMul"
input: "cond_9/Merge_1"
input: "gradients/MatMul_84_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_83_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_83_grad/MatMul"
input: "^gradients/MatMul_83_grad/MatMul_1"
, name: "gradients/MatMul_83_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_83_grad/MatMul"
input: "^gradients/MatMul_83_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_83_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_83_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_83_grad/MatMul_1"
input: "^gradients/MatMul_83_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_83_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_90_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_91_grad/tuple/control_dependency_1"
input: "adjoint_10/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_90_grad/MatMul_1"
op: "MatMul"
input: "cond_10/Merge_1"
input: "gradients/MatMul_91_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_90_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_90_grad/MatMul"
input: "^gradients/MatMul_90_grad/MatMul_1"
, name: "gradients/MatMul_90_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_90_grad/MatMul"
input: "^gradients/MatMul_90_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_90_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_90_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_90_grad/MatMul_1"
input: "^gradients/MatMul_90_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_90_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_97_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_98_grad/tuple/control_dependency_1"
input: "adjoint_11/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_97_grad/MatMul_1"
op: "MatMul"
input: "cond_11/Merge_1"
input: "gradients/MatMul_98_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_97_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_97_grad/MatMul"
input: "^gradients/MatMul_97_grad/MatMul_1"
, name: "gradients/MatMul_97_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_97_grad/MatMul"
input: "^gradients/MatMul_97_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_97_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_97_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_97_grad/MatMul_1"
input: "^gradients/MatMul_97_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_97_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_104_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_105_grad/tuple/control_dependency_1"
input: "adjoint_12/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_104_grad/MatMul_1"
op: "MatMul"
input: "cond_12/Merge_1"
input: "gradients/MatMul_105_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_104_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_104_grad/MatMul"
input: "^gradients/MatMul_104_grad/MatMul_1"
, name: "gradients/MatMul_104_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_104_grad/MatMul"
input: "^gradients/MatMul_104_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_104_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_104_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_104_grad/MatMul_1"
input: "^gradients/MatMul_104_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_104_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_111_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_112_grad/tuple/control_dependency_1"
input: "adjoint_13/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_111_grad/MatMul_1"
op: "MatMul"
input: "cond_13/Merge_1"
input: "gradients/MatMul_112_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_111_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_111_grad/MatMul"
input: "^gradients/MatMul_111_grad/MatMul_1"
, name: "gradients/MatMul_111_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_111_grad/MatMul"
input: "^gradients/MatMul_111_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_111_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_111_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_111_grad/MatMul_1"
input: "^gradients/MatMul_111_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_111_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_118_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_119_grad/tuple/control_dependency_1"
input: "adjoint_14/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_118_grad/MatMul_1"
op: "MatMul"
input: "cond_14/Merge_1"
input: "gradients/MatMul_119_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_118_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_118_grad/MatMul"
input: "^gradients/MatMul_118_grad/MatMul_1"
, name: "gradients/MatMul_118_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_118_grad/MatMul"
input: "^gradients/MatMul_118_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_118_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_118_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_118_grad/MatMul_1"
input: "^gradients/MatMul_118_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_118_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_125_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_126_grad/tuple/control_dependency_1"
input: "adjoint_15/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_125_grad/MatMul_1"
op: "MatMul"
input: "cond_15/Merge_1"
input: "gradients/MatMul_126_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_125_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_125_grad/MatMul"
input: "^gradients/MatMul_125_grad/MatMul_1"
, name: "gradients/MatMul_125_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_125_grad/MatMul"
input: "^gradients/MatMul_125_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_125_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_125_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_125_grad/MatMul_1"
input: "^gradients/MatMul_125_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_125_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_132_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_133_grad/tuple/control_dependency_1"
input: "adjoint_16/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_132_grad/MatMul_1"
op: "MatMul"
input: "cond_16/Merge_1"
input: "gradients/MatMul_133_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_132_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_132_grad/MatMul"
input: "^gradients/MatMul_132_grad/MatMul_1"
, name: "gradients/MatMul_132_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_132_grad/MatMul"
input: "^gradients/MatMul_132_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_132_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_132_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_132_grad/MatMul_1"
input: "^gradients/MatMul_132_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_132_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_139_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_140_grad/tuple/control_dependency_1"
input: "adjoint_17/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_139_grad/MatMul_1"
op: "MatMul"
input: "cond_17/Merge_1"
input: "gradients/MatMul_140_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_139_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_139_grad/MatMul"
input: "^gradients/MatMul_139_grad/MatMul_1"
, name: "gradients/MatMul_139_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_139_grad/MatMul"
input: "^gradients/MatMul_139_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_139_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_139_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_139_grad/MatMul_1"
input: "^gradients/MatMul_139_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_139_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_146_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_147_grad/tuple/control_dependency_1"
input: "adjoint_18/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_146_grad/MatMul_1"
op: "MatMul"
input: "cond_18/Merge_1"
input: "gradients/MatMul_147_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_146_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_146_grad/MatMul"
input: "^gradients/MatMul_146_grad/MatMul_1"
, name: "gradients/MatMul_146_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_146_grad/MatMul"
input: "^gradients/MatMul_146_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_146_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_146_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_146_grad/MatMul_1"
input: "^gradients/MatMul_146_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_146_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_153_grad/MatMul"
op: "MatMul"
input: "gradients/MatMul_154_grad/tuple/control_dependency_1"
input: "adjoint_19/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_153_grad/MatMul_1"
op: "MatMul"
input: "cond_19/Merge_1"
input: "gradients/MatMul_154_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_153_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_153_grad/MatMul"
input: "^gradients/MatMul_153_grad/MatMul_1"
, name: "gradients/MatMul_153_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_153_grad/MatMul"
input: "^gradients/MatMul_153_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_153_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_153_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_153_grad/MatMul_1"
input: "^gradients/MatMul_153_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_153_grad/MatMul_1"
    }
  }
}
, name: "gradients/add_5_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/add_5_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_5_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_5_grad/Shape"
input: "gradients/add_5_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_5_grad/Sum"
op: "Sum"
input: "gradients/div_grad/tuple/control_dependency"
input: "gradients/add_5_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_5_grad/Reshape"
op: "Reshape"
input: "gradients/add_5_grad/Sum"
input: "gradients/add_5_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_5_grad/Sum_1"
op: "Sum"
input: "gradients/div_grad/tuple/control_dependency"
input: "gradients/add_5_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_5_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_5_grad/Sum_1"
input: "gradients/add_5_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_5_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_5_grad/Reshape"
input: "^gradients/add_5_grad/Reshape_1"
, name: "gradients/add_5_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_5_grad/Reshape"
input: "^gradients/add_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_5_grad/Reshape"
    }
  }
}
, name: "gradients/add_5_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_5_grad/Reshape_1"
input: "^gradients/add_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_5_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_6_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/add_6_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_6_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_6_grad/Shape"
input: "gradients/add_6_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_6_grad/Sum"
op: "Sum"
input: "gradients/div_grad/tuple/control_dependency_1"
input: "gradients/add_6_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_6_grad/Reshape"
op: "Reshape"
input: "gradients/add_6_grad/Sum"
input: "gradients/add_6_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_6_grad/Sum_1"
op: "Sum"
input: "gradients/div_grad/tuple/control_dependency_1"
input: "gradients/add_6_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_6_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_6_grad/Sum_1"
input: "gradients/add_6_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_6_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_6_grad/Reshape"
input: "^gradients/add_6_grad/Reshape_1"
, name: "gradients/add_6_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_6_grad/Reshape"
input: "^gradients/add_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_6_grad/Reshape"
    }
  }
}
, name: "gradients/add_6_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_6_grad/Reshape_1"
input: "^gradients/add_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_6_grad/Reshape_1"
    }
  }
}
, name: "gradients/Square_grad/Const"
op: "Const"
input: "^gradients/div_1_grad/tuple/control_dependency"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 2.0
    }
  }
}
, name: "gradients/Square_grad/Mul"
op: "Mul"
input: "Sub"
input: "gradients/Square_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Square_grad/Mul_1"
op: "Mul"
input: "gradients/div_1_grad/tuple/control_dependency"
input: "gradients/Square_grad/Mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/add_7_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/add_7_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_7_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_7_grad/Shape"
input: "gradients/add_7_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_7_grad/Sum"
op: "Sum"
input: "gradients/div_1_grad/tuple/control_dependency_1"
input: "gradients/add_7_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_7_grad/Reshape"
op: "Reshape"
input: "gradients/add_7_grad/Sum"
input: "gradients/add_7_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_7_grad/Sum_1"
op: "Sum"
input: "gradients/div_1_grad/tuple/control_dependency_1"
input: "gradients/add_7_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_7_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_7_grad/Sum_1"
input: "gradients/add_7_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_7_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_7_grad/Reshape"
input: "^gradients/add_7_grad/Reshape_1"
, name: "gradients/add_7_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_7_grad/Reshape"
input: "^gradients/add_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_7_grad/Reshape"
    }
  }
}
, name: "gradients/add_7_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_7_grad/Reshape_1"
input: "^gradients/add_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_7_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_8_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/add_8_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_8_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_8_grad/Shape"
input: "gradients/add_8_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_8_grad/Sum"
op: "Sum"
input: "gradients/div_2_grad/tuple/control_dependency"
input: "gradients/add_8_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_8_grad/Reshape"
op: "Reshape"
input: "gradients/add_8_grad/Sum"
input: "gradients/add_8_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_8_grad/Sum_1"
op: "Sum"
input: "gradients/div_2_grad/tuple/control_dependency"
input: "gradients/add_8_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_8_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_8_grad/Sum_1"
input: "gradients/add_8_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_8_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_8_grad/Reshape"
input: "^gradients/add_8_grad/Reshape_1"
, name: "gradients/add_8_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_8_grad/Reshape"
input: "^gradients/add_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_8_grad/Reshape"
    }
  }
}
, name: "gradients/add_8_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_8_grad/Reshape_1"
input: "^gradients/add_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_8_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_9_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/add_9_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_9_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_9_grad/Shape"
input: "gradients/add_9_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_9_grad/Sum"
op: "Sum"
input: "gradients/div_2_grad/tuple/control_dependency_1"
input: "gradients/add_9_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_9_grad/Reshape"
op: "Reshape"
input: "gradients/add_9_grad/Sum"
input: "gradients/add_9_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_9_grad/Sum_1"
op: "Sum"
input: "gradients/div_2_grad/tuple/control_dependency_1"
input: "gradients/add_9_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_9_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_9_grad/Sum_1"
input: "gradients/add_9_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_9_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_9_grad/Reshape"
input: "^gradients/add_9_grad/Reshape_1"
, name: "gradients/add_9_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_9_grad/Reshape"
input: "^gradients/add_9_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_9_grad/Reshape"
    }
  }
}
, name: "gradients/add_9_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_9_grad/Reshape_1"
input: "^gradients/add_9_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_9_grad/Reshape_1"
    }
  }
}
, name: "gradients/cond/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_20_grad/tuple/control_dependency"
input: "cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_20_grad/MatMul"
    }
  }
}
, name: "gradients/cond/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond/Merge_1_grad/cond_grad"
, name: "gradients/cond/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond/Merge_1_grad/cond_grad"
input: "^gradients/cond/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_20_grad/MatMul"
    }
  }
}
, name: "gradients/cond/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond/Merge_1_grad/cond_grad:1"
input: "^gradients/cond/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_20_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_20_grad/tuple/control_dependency_1"
input: "gradients/adjoint/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_1/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_27_grad/tuple/control_dependency"
input: "cond_1/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_27_grad/MatMul"
    }
  }
}
, name: "gradients/cond_1/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_1/Merge_1_grad/cond_grad"
, name: "gradients/cond_1/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_1/Merge_1_grad/cond_grad"
input: "^gradients/cond_1/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_27_grad/MatMul"
    }
  }
}
, name: "gradients/cond_1/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_1/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_1/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_27_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_1/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_27_grad/tuple/control_dependency_1"
input: "gradients/adjoint_1/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_2/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_34_grad/tuple/control_dependency"
input: "cond_2/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_34_grad/MatMul"
    }
  }
}
, name: "gradients/cond_2/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_2/Merge_1_grad/cond_grad"
, name: "gradients/cond_2/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_2/Merge_1_grad/cond_grad"
input: "^gradients/cond_2/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_34_grad/MatMul"
    }
  }
}
, name: "gradients/cond_2/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_2/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_2/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_34_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_2/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_2/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_34_grad/tuple/control_dependency_1"
input: "gradients/adjoint_2/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_3/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_41_grad/tuple/control_dependency"
input: "cond_3/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_41_grad/MatMul"
    }
  }
}
, name: "gradients/cond_3/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_3/Merge_1_grad/cond_grad"
, name: "gradients/cond_3/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_3/Merge_1_grad/cond_grad"
input: "^gradients/cond_3/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_41_grad/MatMul"
    }
  }
}
, name: "gradients/cond_3/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_3/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_3/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_41_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_3/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_3/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_41_grad/tuple/control_dependency_1"
input: "gradients/adjoint_3/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_4/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_48_grad/tuple/control_dependency"
input: "cond_4/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_48_grad/MatMul"
    }
  }
}
, name: "gradients/cond_4/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_4/Merge_1_grad/cond_grad"
, name: "gradients/cond_4/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_4/Merge_1_grad/cond_grad"
input: "^gradients/cond_4/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_48_grad/MatMul"
    }
  }
}
, name: "gradients/cond_4/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_4/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_4/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_48_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_4/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_4/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_48_grad/tuple/control_dependency_1"
input: "gradients/adjoint_4/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_5/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_55_grad/tuple/control_dependency"
input: "cond_5/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_55_grad/MatMul"
    }
  }
}
, name: "gradients/cond_5/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_5/Merge_1_grad/cond_grad"
, name: "gradients/cond_5/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_5/Merge_1_grad/cond_grad"
input: "^gradients/cond_5/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_55_grad/MatMul"
    }
  }
}
, name: "gradients/cond_5/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_5/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_5/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_55_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_5/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_5/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_55_grad/tuple/control_dependency_1"
input: "gradients/adjoint_5/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_6/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_62_grad/tuple/control_dependency"
input: "cond_6/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_62_grad/MatMul"
    }
  }
}
, name: "gradients/cond_6/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_6/Merge_1_grad/cond_grad"
, name: "gradients/cond_6/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_6/Merge_1_grad/cond_grad"
input: "^gradients/cond_6/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_62_grad/MatMul"
    }
  }
}
, name: "gradients/cond_6/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_6/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_6/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_62_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_6/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_6/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_62_grad/tuple/control_dependency_1"
input: "gradients/adjoint_6/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_7/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_69_grad/tuple/control_dependency"
input: "cond_7/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_69_grad/MatMul"
    }
  }
}
, name: "gradients/cond_7/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_7/Merge_1_grad/cond_grad"
, name: "gradients/cond_7/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_7/Merge_1_grad/cond_grad"
input: "^gradients/cond_7/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_69_grad/MatMul"
    }
  }
}
, name: "gradients/cond_7/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_7/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_7/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_69_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_7/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_7/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_69_grad/tuple/control_dependency_1"
input: "gradients/adjoint_7/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_8/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_76_grad/tuple/control_dependency"
input: "cond_8/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_76_grad/MatMul"
    }
  }
}
, name: "gradients/cond_8/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_8/Merge_1_grad/cond_grad"
, name: "gradients/cond_8/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_8/Merge_1_grad/cond_grad"
input: "^gradients/cond_8/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_76_grad/MatMul"
    }
  }
}
, name: "gradients/cond_8/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_8/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_8/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_76_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_8/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_8/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_76_grad/tuple/control_dependency_1"
input: "gradients/adjoint_8/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_9/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_83_grad/tuple/control_dependency"
input: "cond_9/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_83_grad/MatMul"
    }
  }
}
, name: "gradients/cond_9/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_9/Merge_1_grad/cond_grad"
, name: "gradients/cond_9/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_9/Merge_1_grad/cond_grad"
input: "^gradients/cond_9/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_83_grad/MatMul"
    }
  }
}
, name: "gradients/cond_9/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_9/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_9/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_83_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_9/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_9/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_83_grad/tuple/control_dependency_1"
input: "gradients/adjoint_9/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_10/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_90_grad/tuple/control_dependency"
input: "cond_10/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_90_grad/MatMul"
    }
  }
}
, name: "gradients/cond_10/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_10/Merge_1_grad/cond_grad"
, name: "gradients/cond_10/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_10/Merge_1_grad/cond_grad"
input: "^gradients/cond_10/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_90_grad/MatMul"
    }
  }
}
, name: "gradients/cond_10/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_10/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_10/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_90_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_10/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_10/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_90_grad/tuple/control_dependency_1"
input: "gradients/adjoint_10/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_11/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_97_grad/tuple/control_dependency"
input: "cond_11/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_97_grad/MatMul"
    }
  }
}
, name: "gradients/cond_11/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_11/Merge_1_grad/cond_grad"
, name: "gradients/cond_11/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_11/Merge_1_grad/cond_grad"
input: "^gradients/cond_11/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_97_grad/MatMul"
    }
  }
}
, name: "gradients/cond_11/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_11/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_11/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_97_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_11/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_11/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_97_grad/tuple/control_dependency_1"
input: "gradients/adjoint_11/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_12/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_104_grad/tuple/control_dependency"
input: "cond_12/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_104_grad/MatMul"
    }
  }
}
, name: "gradients/cond_12/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_12/Merge_1_grad/cond_grad"
, name: "gradients/cond_12/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_12/Merge_1_grad/cond_grad"
input: "^gradients/cond_12/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_104_grad/MatMul"
    }
  }
}
, name: "gradients/cond_12/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_12/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_12/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_104_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_12/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_12/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_104_grad/tuple/control_dependency_1"
input: "gradients/adjoint_12/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_13/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_111_grad/tuple/control_dependency"
input: "cond_13/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_111_grad/MatMul"
    }
  }
}
, name: "gradients/cond_13/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_13/Merge_1_grad/cond_grad"
, name: "gradients/cond_13/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_13/Merge_1_grad/cond_grad"
input: "^gradients/cond_13/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_111_grad/MatMul"
    }
  }
}
, name: "gradients/cond_13/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_13/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_13/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_111_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_13/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_13/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_111_grad/tuple/control_dependency_1"
input: "gradients/adjoint_13/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_14/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_118_grad/tuple/control_dependency"
input: "cond_14/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_118_grad/MatMul"
    }
  }
}
, name: "gradients/cond_14/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_14/Merge_1_grad/cond_grad"
, name: "gradients/cond_14/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_14/Merge_1_grad/cond_grad"
input: "^gradients/cond_14/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_118_grad/MatMul"
    }
  }
}
, name: "gradients/cond_14/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_14/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_14/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_118_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_14/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_14/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_118_grad/tuple/control_dependency_1"
input: "gradients/adjoint_14/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_15/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_125_grad/tuple/control_dependency"
input: "cond_15/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_125_grad/MatMul"
    }
  }
}
, name: "gradients/cond_15/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_15/Merge_1_grad/cond_grad"
, name: "gradients/cond_15/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_15/Merge_1_grad/cond_grad"
input: "^gradients/cond_15/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_125_grad/MatMul"
    }
  }
}
, name: "gradients/cond_15/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_15/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_15/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_125_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_15/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_15/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_125_grad/tuple/control_dependency_1"
input: "gradients/adjoint_15/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_16/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_132_grad/tuple/control_dependency"
input: "cond_16/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_132_grad/MatMul"
    }
  }
}
, name: "gradients/cond_16/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_16/Merge_1_grad/cond_grad"
, name: "gradients/cond_16/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_16/Merge_1_grad/cond_grad"
input: "^gradients/cond_16/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_132_grad/MatMul"
    }
  }
}
, name: "gradients/cond_16/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_16/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_16/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_132_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_16/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_16/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_132_grad/tuple/control_dependency_1"
input: "gradients/adjoint_16/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_17/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_139_grad/tuple/control_dependency"
input: "cond_17/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_139_grad/MatMul"
    }
  }
}
, name: "gradients/cond_17/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_17/Merge_1_grad/cond_grad"
, name: "gradients/cond_17/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_17/Merge_1_grad/cond_grad"
input: "^gradients/cond_17/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_139_grad/MatMul"
    }
  }
}
, name: "gradients/cond_17/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_17/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_17/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_139_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_17/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_17/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_139_grad/tuple/control_dependency_1"
input: "gradients/adjoint_17/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_18/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_146_grad/tuple/control_dependency"
input: "cond_18/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_146_grad/MatMul"
    }
  }
}
, name: "gradients/cond_18/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_18/Merge_1_grad/cond_grad"
, name: "gradients/cond_18/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_18/Merge_1_grad/cond_grad"
input: "^gradients/cond_18/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_146_grad/MatMul"
    }
  }
}
, name: "gradients/cond_18/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_18/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_18/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_146_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_18/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_18/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_146_grad/tuple/control_dependency_1"
input: "gradients/adjoint_18/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_19/Merge_1_grad/cond_grad"
op: "Switch"
input: "gradients/MatMul_153_grad/tuple/control_dependency"
input: "cond_19/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_153_grad/MatMul"
    }
  }
}
, name: "gradients/cond_19/Merge_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_19/Merge_1_grad/cond_grad"
, name: "gradients/cond_19/Merge_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_19/Merge_1_grad/cond_grad"
input: "^gradients/cond_19/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_153_grad/MatMul"
    }
  }
}
, name: "gradients/cond_19/Merge_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_19/Merge_1_grad/cond_grad:1"
input: "^gradients/cond_19/Merge_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_153_grad/MatMul"
    }
  }
}
, name: "gradients/adjoint_19/matrix_transpose/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "adjoint_19/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
op: "Transpose"
input: "gradients/MatMul_153_grad/tuple/control_dependency_1"
input: "gradients/adjoint_19/matrix_transpose/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sub_grad/Neg"
op: "Neg"
input: "gradients/Square_grad/Mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Sub_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Square_grad/Mul_1"
input: "^gradients/Sub_grad/Neg"
, name: "gradients/Sub_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Square_grad/Mul_1"
input: "^gradients/Sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Square_grad/Mul_1"
    }
  }
}
, name: "gradients/Sub_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Sub_grad/Neg"
input: "^gradients/Sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sub_grad/Neg"
    }
  }
}
, name: "gradients/AddN_20"
op: "AddN"
input: "gradients/add_6_grad/tuple/control_dependency"
input: "gradients/add_7_grad/tuple/control_dependency"
input: "gradients/add_8_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_6_grad/Reshape"
    }
  }
}
, name: "gradients/Exp_3_grad/mul"
op: "Mul"
input: "gradients/AddN_20"
input: "Exp_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_21"
op: "AddN"
input: "gradients/add_5_grad/tuple/control_dependency"
input: "gradients/add_9_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_5_grad/Reshape"
    }
  }
}
, name: "gradients/Exp_2_grad/mul"
op: "Mul"
input: "gradients/AddN_21"
input: "Exp_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_18"
op: "Switch"
input: "Svd:1"
input: "cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity"
op: "Identity"
input: "gradients/Switch_18:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_1"
op: "Shape"
input: "gradients/Switch_18:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros/Const"
op: "Const"
input: "^gradients/Identity"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros"
op: "Fill"
input: "gradients/Shape_1"
input: "gradients/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond/Merge_1_grad/tuple/control_dependency_1"
input: "cond/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond/Merge_1_grad/tuple/control_dependency_1"
input: "cond/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond/mul_1_grad/Mul"
input: "^gradients/cond/mul_1_grad/Mul_1"
, name: "gradients/cond/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond/mul_1_grad/Mul"
input: "^gradients/cond/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond/mul_1_grad/Mul_1"
input: "^gradients/cond/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_19"
op: "Switch"
input: "Svd_1:1"
input: "cond_1/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_1"
op: "Identity"
input: "gradients/Switch_19:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_2"
op: "Shape"
input: "gradients/Switch_19:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_1/Const"
op: "Const"
input: "^gradients/Identity_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_1"
op: "Fill"
input: "gradients/Shape_2"
input: "gradients/zeros_1/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_1/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_1/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_1/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_1/Merge_1_grad/tuple/control_dependency_1"
input: "cond_1/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_1/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_1/Merge_1_grad/tuple/control_dependency_1"
input: "cond_1/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_1/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_1/mul_1_grad/Mul"
input: "^gradients/cond_1/mul_1_grad/Mul_1"
, name: "gradients/cond_1/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_1/mul_1_grad/Mul"
input: "^gradients/cond_1/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_1/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_1/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_1/mul_1_grad/Mul_1"
input: "^gradients/cond_1/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_1/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_20"
op: "Switch"
input: "Svd_2:1"
input: "cond_2/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_2"
op: "Identity"
input: "gradients/Switch_20:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_3"
op: "Shape"
input: "gradients/Switch_20:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_2/Const"
op: "Const"
input: "^gradients/Identity_2"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_2"
op: "Fill"
input: "gradients/Shape_3"
input: "gradients/zeros_2/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_2/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_2/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_2"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_2/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_2/Merge_1_grad/tuple/control_dependency_1"
input: "cond_2/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_2/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_2/Merge_1_grad/tuple/control_dependency_1"
input: "cond_2/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_2/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_2/mul_1_grad/Mul"
input: "^gradients/cond_2/mul_1_grad/Mul_1"
, name: "gradients/cond_2/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_2/mul_1_grad/Mul"
input: "^gradients/cond_2/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_2/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_2/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_2/mul_1_grad/Mul_1"
input: "^gradients/cond_2/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_2/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_21"
op: "Switch"
input: "Svd_3:1"
input: "cond_3/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_3"
op: "Identity"
input: "gradients/Switch_21:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_4"
op: "Shape"
input: "gradients/Switch_21:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_3/Const"
op: "Const"
input: "^gradients/Identity_3"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_3"
op: "Fill"
input: "gradients/Shape_4"
input: "gradients/zeros_3/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_3/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_3/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_3"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_3/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_3/Merge_1_grad/tuple/control_dependency_1"
input: "cond_3/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_3/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_3/Merge_1_grad/tuple/control_dependency_1"
input: "cond_3/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_3/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_3/mul_1_grad/Mul"
input: "^gradients/cond_3/mul_1_grad/Mul_1"
, name: "gradients/cond_3/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_3/mul_1_grad/Mul"
input: "^gradients/cond_3/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_3/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_3/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_3/mul_1_grad/Mul_1"
input: "^gradients/cond_3/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_3/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_22"
op: "Switch"
input: "Svd_4:1"
input: "cond_4/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_4"
op: "Identity"
input: "gradients/Switch_22:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_5"
op: "Shape"
input: "gradients/Switch_22:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_4/Const"
op: "Const"
input: "^gradients/Identity_4"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_4"
op: "Fill"
input: "gradients/Shape_5"
input: "gradients/zeros_4/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_4/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_4/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_4"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_4/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_4/Merge_1_grad/tuple/control_dependency_1"
input: "cond_4/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_4/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_4/Merge_1_grad/tuple/control_dependency_1"
input: "cond_4/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_4/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_4/mul_1_grad/Mul"
input: "^gradients/cond_4/mul_1_grad/Mul_1"
, name: "gradients/cond_4/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_4/mul_1_grad/Mul"
input: "^gradients/cond_4/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_4/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_4/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_4/mul_1_grad/Mul_1"
input: "^gradients/cond_4/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_4/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_23"
op: "Switch"
input: "Svd_5:1"
input: "cond_5/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_5"
op: "Identity"
input: "gradients/Switch_23:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_6"
op: "Shape"
input: "gradients/Switch_23:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_5/Const"
op: "Const"
input: "^gradients/Identity_5"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_5"
op: "Fill"
input: "gradients/Shape_6"
input: "gradients/zeros_5/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_5/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_5/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_5"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_5/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_5/Merge_1_grad/tuple/control_dependency_1"
input: "cond_5/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_5/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_5/Merge_1_grad/tuple/control_dependency_1"
input: "cond_5/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_5/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_5/mul_1_grad/Mul"
input: "^gradients/cond_5/mul_1_grad/Mul_1"
, name: "gradients/cond_5/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_5/mul_1_grad/Mul"
input: "^gradients/cond_5/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_5/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_5/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_5/mul_1_grad/Mul_1"
input: "^gradients/cond_5/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_5/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_24"
op: "Switch"
input: "Svd_6:1"
input: "cond_6/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_6"
op: "Identity"
input: "gradients/Switch_24:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_7"
op: "Shape"
input: "gradients/Switch_24:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_6/Const"
op: "Const"
input: "^gradients/Identity_6"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_6"
op: "Fill"
input: "gradients/Shape_7"
input: "gradients/zeros_6/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_6/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_6/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_6"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_6/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_6/Merge_1_grad/tuple/control_dependency_1"
input: "cond_6/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_6/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_6/Merge_1_grad/tuple/control_dependency_1"
input: "cond_6/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_6/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_6/mul_1_grad/Mul"
input: "^gradients/cond_6/mul_1_grad/Mul_1"
, name: "gradients/cond_6/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_6/mul_1_grad/Mul"
input: "^gradients/cond_6/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_6/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_6/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_6/mul_1_grad/Mul_1"
input: "^gradients/cond_6/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_6/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_25"
op: "Switch"
input: "Svd_7:1"
input: "cond_7/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_7"
op: "Identity"
input: "gradients/Switch_25:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_8"
op: "Shape"
input: "gradients/Switch_25:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_7/Const"
op: "Const"
input: "^gradients/Identity_7"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_7"
op: "Fill"
input: "gradients/Shape_8"
input: "gradients/zeros_7/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_7/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_7/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_7"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_7/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_7/Merge_1_grad/tuple/control_dependency_1"
input: "cond_7/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_7/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_7/Merge_1_grad/tuple/control_dependency_1"
input: "cond_7/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_7/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_7/mul_1_grad/Mul"
input: "^gradients/cond_7/mul_1_grad/Mul_1"
, name: "gradients/cond_7/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_7/mul_1_grad/Mul"
input: "^gradients/cond_7/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_7/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_7/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_7/mul_1_grad/Mul_1"
input: "^gradients/cond_7/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_7/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_26"
op: "Switch"
input: "Svd_8:1"
input: "cond_8/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_8"
op: "Identity"
input: "gradients/Switch_26:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_9"
op: "Shape"
input: "gradients/Switch_26:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_8/Const"
op: "Const"
input: "^gradients/Identity_8"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_8"
op: "Fill"
input: "gradients/Shape_9"
input: "gradients/zeros_8/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_8/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_8/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_8"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_8/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_8/Merge_1_grad/tuple/control_dependency_1"
input: "cond_8/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_8/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_8/Merge_1_grad/tuple/control_dependency_1"
input: "cond_8/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_8/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_8/mul_1_grad/Mul"
input: "^gradients/cond_8/mul_1_grad/Mul_1"
, name: "gradients/cond_8/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_8/mul_1_grad/Mul"
input: "^gradients/cond_8/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_8/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_8/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_8/mul_1_grad/Mul_1"
input: "^gradients/cond_8/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_8/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_27"
op: "Switch"
input: "Svd_9:1"
input: "cond_9/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_9"
op: "Identity"
input: "gradients/Switch_27:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_10"
op: "Shape"
input: "gradients/Switch_27:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_9/Const"
op: "Const"
input: "^gradients/Identity_9"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_9"
op: "Fill"
input: "gradients/Shape_10"
input: "gradients/zeros_9/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_9/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_9/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_9"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_9/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_9/Merge_1_grad/tuple/control_dependency_1"
input: "cond_9/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_9/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_9/Merge_1_grad/tuple/control_dependency_1"
input: "cond_9/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_9/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_9/mul_1_grad/Mul"
input: "^gradients/cond_9/mul_1_grad/Mul_1"
, name: "gradients/cond_9/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_9/mul_1_grad/Mul"
input: "^gradients/cond_9/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_9/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_9/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_9/mul_1_grad/Mul_1"
input: "^gradients/cond_9/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_9/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_28"
op: "Switch"
input: "Svd_10:1"
input: "cond_10/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_10"
op: "Identity"
input: "gradients/Switch_28:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_11"
op: "Shape"
input: "gradients/Switch_28:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_10/Const"
op: "Const"
input: "^gradients/Identity_10"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_10"
op: "Fill"
input: "gradients/Shape_11"
input: "gradients/zeros_10/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_10/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_10/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_10"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_10/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_10/Merge_1_grad/tuple/control_dependency_1"
input: "cond_10/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_10/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_10/Merge_1_grad/tuple/control_dependency_1"
input: "cond_10/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_10/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_10/mul_1_grad/Mul"
input: "^gradients/cond_10/mul_1_grad/Mul_1"
, name: "gradients/cond_10/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_10/mul_1_grad/Mul"
input: "^gradients/cond_10/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_10/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_10/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_10/mul_1_grad/Mul_1"
input: "^gradients/cond_10/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_10/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_29"
op: "Switch"
input: "Svd_11:1"
input: "cond_11/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_11"
op: "Identity"
input: "gradients/Switch_29:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_12"
op: "Shape"
input: "gradients/Switch_29:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_11/Const"
op: "Const"
input: "^gradients/Identity_11"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_11"
op: "Fill"
input: "gradients/Shape_12"
input: "gradients/zeros_11/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_11/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_11/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_11"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_11/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_11/Merge_1_grad/tuple/control_dependency_1"
input: "cond_11/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_11/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_11/Merge_1_grad/tuple/control_dependency_1"
input: "cond_11/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_11/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_11/mul_1_grad/Mul"
input: "^gradients/cond_11/mul_1_grad/Mul_1"
, name: "gradients/cond_11/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_11/mul_1_grad/Mul"
input: "^gradients/cond_11/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_11/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_11/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_11/mul_1_grad/Mul_1"
input: "^gradients/cond_11/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_11/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_30"
op: "Switch"
input: "Svd_12:1"
input: "cond_12/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_12"
op: "Identity"
input: "gradients/Switch_30:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_13"
op: "Shape"
input: "gradients/Switch_30:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_12/Const"
op: "Const"
input: "^gradients/Identity_12"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_12"
op: "Fill"
input: "gradients/Shape_13"
input: "gradients/zeros_12/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_12/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_12/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_12"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_12/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_12/Merge_1_grad/tuple/control_dependency_1"
input: "cond_12/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_12/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_12/Merge_1_grad/tuple/control_dependency_1"
input: "cond_12/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_12/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_12/mul_1_grad/Mul"
input: "^gradients/cond_12/mul_1_grad/Mul_1"
, name: "gradients/cond_12/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_12/mul_1_grad/Mul"
input: "^gradients/cond_12/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_12/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_12/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_12/mul_1_grad/Mul_1"
input: "^gradients/cond_12/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_12/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_31"
op: "Switch"
input: "Svd_13:1"
input: "cond_13/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_13"
op: "Identity"
input: "gradients/Switch_31:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_14"
op: "Shape"
input: "gradients/Switch_31:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_13/Const"
op: "Const"
input: "^gradients/Identity_13"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_13"
op: "Fill"
input: "gradients/Shape_14"
input: "gradients/zeros_13/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_13/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_13/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_13"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_13/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_13/Merge_1_grad/tuple/control_dependency_1"
input: "cond_13/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_13/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_13/Merge_1_grad/tuple/control_dependency_1"
input: "cond_13/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_13/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_13/mul_1_grad/Mul"
input: "^gradients/cond_13/mul_1_grad/Mul_1"
, name: "gradients/cond_13/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_13/mul_1_grad/Mul"
input: "^gradients/cond_13/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_13/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_13/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_13/mul_1_grad/Mul_1"
input: "^gradients/cond_13/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_13/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_32"
op: "Switch"
input: "Svd_14:1"
input: "cond_14/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_14"
op: "Identity"
input: "gradients/Switch_32:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_15"
op: "Shape"
input: "gradients/Switch_32:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_14/Const"
op: "Const"
input: "^gradients/Identity_14"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_14"
op: "Fill"
input: "gradients/Shape_15"
input: "gradients/zeros_14/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_14/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_14/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_14"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_14/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_14/Merge_1_grad/tuple/control_dependency_1"
input: "cond_14/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_14/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_14/Merge_1_grad/tuple/control_dependency_1"
input: "cond_14/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_14/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_14/mul_1_grad/Mul"
input: "^gradients/cond_14/mul_1_grad/Mul_1"
, name: "gradients/cond_14/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_14/mul_1_grad/Mul"
input: "^gradients/cond_14/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_14/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_14/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_14/mul_1_grad/Mul_1"
input: "^gradients/cond_14/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_14/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_33"
op: "Switch"
input: "Svd_15:1"
input: "cond_15/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_15"
op: "Identity"
input: "gradients/Switch_33:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_16"
op: "Shape"
input: "gradients/Switch_33:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_15/Const"
op: "Const"
input: "^gradients/Identity_15"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_15"
op: "Fill"
input: "gradients/Shape_16"
input: "gradients/zeros_15/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_15/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_15/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_15"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_15/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_15/Merge_1_grad/tuple/control_dependency_1"
input: "cond_15/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_15/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_15/Merge_1_grad/tuple/control_dependency_1"
input: "cond_15/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_15/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_15/mul_1_grad/Mul"
input: "^gradients/cond_15/mul_1_grad/Mul_1"
, name: "gradients/cond_15/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_15/mul_1_grad/Mul"
input: "^gradients/cond_15/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_15/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_15/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_15/mul_1_grad/Mul_1"
input: "^gradients/cond_15/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_15/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_34"
op: "Switch"
input: "Svd_16:1"
input: "cond_16/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_16"
op: "Identity"
input: "gradients/Switch_34:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_17"
op: "Shape"
input: "gradients/Switch_34:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_16/Const"
op: "Const"
input: "^gradients/Identity_16"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_16"
op: "Fill"
input: "gradients/Shape_17"
input: "gradients/zeros_16/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_16/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_16/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_16"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_16/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_16/Merge_1_grad/tuple/control_dependency_1"
input: "cond_16/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_16/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_16/Merge_1_grad/tuple/control_dependency_1"
input: "cond_16/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_16/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_16/mul_1_grad/Mul"
input: "^gradients/cond_16/mul_1_grad/Mul_1"
, name: "gradients/cond_16/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_16/mul_1_grad/Mul"
input: "^gradients/cond_16/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_16/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_16/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_16/mul_1_grad/Mul_1"
input: "^gradients/cond_16/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_16/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_35"
op: "Switch"
input: "Svd_17:1"
input: "cond_17/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_17"
op: "Identity"
input: "gradients/Switch_35:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_18"
op: "Shape"
input: "gradients/Switch_35:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_17/Const"
op: "Const"
input: "^gradients/Identity_17"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_17"
op: "Fill"
input: "gradients/Shape_18"
input: "gradients/zeros_17/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_17/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_17/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_17"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_17/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_17/Merge_1_grad/tuple/control_dependency_1"
input: "cond_17/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_17/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_17/Merge_1_grad/tuple/control_dependency_1"
input: "cond_17/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_17/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_17/mul_1_grad/Mul"
input: "^gradients/cond_17/mul_1_grad/Mul_1"
, name: "gradients/cond_17/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_17/mul_1_grad/Mul"
input: "^gradients/cond_17/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_17/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_17/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_17/mul_1_grad/Mul_1"
input: "^gradients/cond_17/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_17/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_36"
op: "Switch"
input: "Svd_18:1"
input: "cond_18/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_18"
op: "Identity"
input: "gradients/Switch_36:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_19"
op: "Shape"
input: "gradients/Switch_36:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_18/Const"
op: "Const"
input: "^gradients/Identity_18"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_18"
op: "Fill"
input: "gradients/Shape_19"
input: "gradients/zeros_18/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_18/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_18/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_18"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_18/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_18/Merge_1_grad/tuple/control_dependency_1"
input: "cond_18/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_18/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_18/Merge_1_grad/tuple/control_dependency_1"
input: "cond_18/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_18/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_18/mul_1_grad/Mul"
input: "^gradients/cond_18/mul_1_grad/Mul_1"
, name: "gradients/cond_18/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_18/mul_1_grad/Mul"
input: "^gradients/cond_18/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_18/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_18/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_18/mul_1_grad/Mul_1"
input: "^gradients/cond_18/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_18/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_37"
op: "Switch"
input: "Svd_19:1"
input: "cond_19/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_19"
op: "Identity"
input: "gradients/Switch_37:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_20"
op: "Shape"
input: "gradients/Switch_37:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_19/Const"
op: "Const"
input: "^gradients/Identity_19"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_19"
op: "Fill"
input: "gradients/Shape_20"
input: "gradients/zeros_19/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_19/Switch_2_grad/cond_grad"
op: "Merge"
input: "gradients/cond_19/Merge_1_grad/tuple/control_dependency"
input: "gradients/zeros_19"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_19/mul_1_grad/Mul"
op: "Mul"
input: "gradients/cond_19/Merge_1_grad/tuple/control_dependency_1"
input: "cond_19/mul_1/Switch_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_19/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/cond_19/Merge_1_grad/tuple/control_dependency_1"
input: "cond_19/mul_1/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/cond_19/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/cond_19/mul_1_grad/Mul"
input: "^gradients/cond_19/mul_1_grad/Mul_1"
, name: "gradients/cond_19/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/cond_19/mul_1_grad/Mul"
input: "^gradients/cond_19/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_19/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/cond_19/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/cond_19/mul_1_grad/Mul_1"
input: "^gradients/cond_19/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_19/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_22"
op: "AddN"
input: "gradients/Square_1_grad/Mul_1"
input: "gradients/Sub_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Square_1_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_23"
op: "AddN"
input: "gradients/add_14_grad/tuple/control_dependency_1"
input: "gradients/Exp_4_grad/mul"
input: "gradients/Exp_3_grad/mul"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_14_grad/Reshape_1"
    }
  }
}
, name: "gradients/split_grad/concat"
op: "ConcatV2"
input: "gradients/AddN_22"
input: "gradients/AddN_23"
input: "split/split_dim"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Switch_38"
op: "Switch"
input: "Svd:1"
input: "cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_20"
op: "Identity"
input: "gradients/Switch_38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_21"
op: "Shape"
input: "gradients/Switch_38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_20/Const"
op: "Const"
input: "^gradients/Identity_20"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_20"
op: "Fill"
input: "gradients/Shape_21"
input: "gradients/zeros_20/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_20"
input: "gradients/cond/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_39"
op: "Switch"
input: "Svd_1:1"
input: "cond_1/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_21"
op: "Identity"
input: "gradients/Switch_39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_22"
op: "Shape"
input: "gradients/Switch_39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_21/Const"
op: "Const"
input: "^gradients/Identity_21"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_21"
op: "Fill"
input: "gradients/Shape_22"
input: "gradients/zeros_21/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_1/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_21"
input: "gradients/cond_1/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_40"
op: "Switch"
input: "Svd_2:1"
input: "cond_2/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_22"
op: "Identity"
input: "gradients/Switch_40"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_23"
op: "Shape"
input: "gradients/Switch_40"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_22/Const"
op: "Const"
input: "^gradients/Identity_22"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_22"
op: "Fill"
input: "gradients/Shape_23"
input: "gradients/zeros_22/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_2/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_22"
input: "gradients/cond_2/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_41"
op: "Switch"
input: "Svd_3:1"
input: "cond_3/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_23"
op: "Identity"
input: "gradients/Switch_41"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_24"
op: "Shape"
input: "gradients/Switch_41"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_23/Const"
op: "Const"
input: "^gradients/Identity_23"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_23"
op: "Fill"
input: "gradients/Shape_24"
input: "gradients/zeros_23/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_3/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_23"
input: "gradients/cond_3/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_42"
op: "Switch"
input: "Svd_4:1"
input: "cond_4/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_24"
op: "Identity"
input: "gradients/Switch_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_25"
op: "Shape"
input: "gradients/Switch_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_24/Const"
op: "Const"
input: "^gradients/Identity_24"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_24"
op: "Fill"
input: "gradients/Shape_25"
input: "gradients/zeros_24/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_4/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_24"
input: "gradients/cond_4/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_43"
op: "Switch"
input: "Svd_5:1"
input: "cond_5/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_25"
op: "Identity"
input: "gradients/Switch_43"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_26"
op: "Shape"
input: "gradients/Switch_43"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_25/Const"
op: "Const"
input: "^gradients/Identity_25"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_25"
op: "Fill"
input: "gradients/Shape_26"
input: "gradients/zeros_25/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_5/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_25"
input: "gradients/cond_5/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_44"
op: "Switch"
input: "Svd_6:1"
input: "cond_6/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_26"
op: "Identity"
input: "gradients/Switch_44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_27"
op: "Shape"
input: "gradients/Switch_44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_26/Const"
op: "Const"
input: "^gradients/Identity_26"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_26"
op: "Fill"
input: "gradients/Shape_27"
input: "gradients/zeros_26/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_6/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_26"
input: "gradients/cond_6/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_45"
op: "Switch"
input: "Svd_7:1"
input: "cond_7/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_27"
op: "Identity"
input: "gradients/Switch_45"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_28"
op: "Shape"
input: "gradients/Switch_45"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_27/Const"
op: "Const"
input: "^gradients/Identity_27"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_27"
op: "Fill"
input: "gradients/Shape_28"
input: "gradients/zeros_27/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_7/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_27"
input: "gradients/cond_7/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_46"
op: "Switch"
input: "Svd_8:1"
input: "cond_8/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_28"
op: "Identity"
input: "gradients/Switch_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_29"
op: "Shape"
input: "gradients/Switch_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_28/Const"
op: "Const"
input: "^gradients/Identity_28"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_28"
op: "Fill"
input: "gradients/Shape_29"
input: "gradients/zeros_28/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_8/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_28"
input: "gradients/cond_8/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_47"
op: "Switch"
input: "Svd_9:1"
input: "cond_9/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_29"
op: "Identity"
input: "gradients/Switch_47"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_30"
op: "Shape"
input: "gradients/Switch_47"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_29/Const"
op: "Const"
input: "^gradients/Identity_29"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_29"
op: "Fill"
input: "gradients/Shape_30"
input: "gradients/zeros_29/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_9/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_29"
input: "gradients/cond_9/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_48"
op: "Switch"
input: "Svd_10:1"
input: "cond_10/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_30"
op: "Identity"
input: "gradients/Switch_48"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_31"
op: "Shape"
input: "gradients/Switch_48"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_30/Const"
op: "Const"
input: "^gradients/Identity_30"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_30"
op: "Fill"
input: "gradients/Shape_31"
input: "gradients/zeros_30/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_10/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_30"
input: "gradients/cond_10/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_49"
op: "Switch"
input: "Svd_11:1"
input: "cond_11/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_31"
op: "Identity"
input: "gradients/Switch_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_32"
op: "Shape"
input: "gradients/Switch_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_31/Const"
op: "Const"
input: "^gradients/Identity_31"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_31"
op: "Fill"
input: "gradients/Shape_32"
input: "gradients/zeros_31/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_11/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_31"
input: "gradients/cond_11/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_50"
op: "Switch"
input: "Svd_12:1"
input: "cond_12/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_32"
op: "Identity"
input: "gradients/Switch_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_33"
op: "Shape"
input: "gradients/Switch_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_32/Const"
op: "Const"
input: "^gradients/Identity_32"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_32"
op: "Fill"
input: "gradients/Shape_33"
input: "gradients/zeros_32/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_12/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_32"
input: "gradients/cond_12/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_51"
op: "Switch"
input: "Svd_13:1"
input: "cond_13/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_33"
op: "Identity"
input: "gradients/Switch_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_34"
op: "Shape"
input: "gradients/Switch_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_33/Const"
op: "Const"
input: "^gradients/Identity_33"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_33"
op: "Fill"
input: "gradients/Shape_34"
input: "gradients/zeros_33/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_13/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_33"
input: "gradients/cond_13/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_52"
op: "Switch"
input: "Svd_14:1"
input: "cond_14/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_34"
op: "Identity"
input: "gradients/Switch_52"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_35"
op: "Shape"
input: "gradients/Switch_52"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_34/Const"
op: "Const"
input: "^gradients/Identity_34"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_34"
op: "Fill"
input: "gradients/Shape_35"
input: "gradients/zeros_34/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_14/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_34"
input: "gradients/cond_14/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_53"
op: "Switch"
input: "Svd_15:1"
input: "cond_15/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_35"
op: "Identity"
input: "gradients/Switch_53"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_36"
op: "Shape"
input: "gradients/Switch_53"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_35/Const"
op: "Const"
input: "^gradients/Identity_35"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_35"
op: "Fill"
input: "gradients/Shape_36"
input: "gradients/zeros_35/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_15/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_35"
input: "gradients/cond_15/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_54"
op: "Switch"
input: "Svd_16:1"
input: "cond_16/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_36"
op: "Identity"
input: "gradients/Switch_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_37"
op: "Shape"
input: "gradients/Switch_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_36/Const"
op: "Const"
input: "^gradients/Identity_36"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_36"
op: "Fill"
input: "gradients/Shape_37"
input: "gradients/zeros_36/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_16/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_36"
input: "gradients/cond_16/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_55"
op: "Switch"
input: "Svd_17:1"
input: "cond_17/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_37"
op: "Identity"
input: "gradients/Switch_55"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_38"
op: "Shape"
input: "gradients/Switch_55"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_37/Const"
op: "Const"
input: "^gradients/Identity_37"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_37"
op: "Fill"
input: "gradients/Shape_38"
input: "gradients/zeros_37/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_17/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_37"
input: "gradients/cond_17/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_56"
op: "Switch"
input: "Svd_18:1"
input: "cond_18/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_38"
op: "Identity"
input: "gradients/Switch_56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_39"
op: "Shape"
input: "gradients/Switch_56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_38/Const"
op: "Const"
input: "^gradients/Identity_38"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_38"
op: "Fill"
input: "gradients/Shape_39"
input: "gradients/zeros_38/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_18/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_38"
input: "gradients/cond_18/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Switch_57"
op: "Switch"
input: "Svd_19:1"
input: "cond_19/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_39"
op: "Identity"
input: "gradients/Switch_57"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_40"
op: "Shape"
input: "gradients/Switch_57"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_39/Const"
op: "Const"
input: "^gradients/Identity_39"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_39"
op: "Fill"
input: "gradients/Shape_40"
input: "gradients/zeros_39/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/cond_19/mul_1/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_39"
input: "gradients/cond_19/mul_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/Mul_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000d\000\000\000"
    }
  }
}
, name: "gradients/g_nnpriorZ/Mul_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/g_nnpriorZ/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/g_nnpriorZ/Mul_grad/Shape"
input: "gradients/g_nnpriorZ/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/Mul_grad/Mul"
op: "Mul"
input: "gradients/split_grad/concat"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/Mul_grad/Sum"
op: "Sum"
input: "gradients/g_nnpriorZ/Mul_grad/Mul"
input: "gradients/g_nnpriorZ/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpriorZ/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/g_nnpriorZ/Mul_grad/Sum"
input: "gradients/g_nnpriorZ/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/Mul_grad/Mul_1"
op: "Mul"
input: "g_nnpriorZ/Reshape_1"
input: "gradients/split_grad/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/g_nnpriorZ/Mul_grad/Mul_1"
input: "gradients/g_nnpriorZ/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpriorZ/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/g_nnpriorZ/Mul_grad/Sum_1"
input: "gradients/g_nnpriorZ/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpriorZ/Mul_grad/Reshape"
input: "^gradients/g_nnpriorZ/Mul_grad/Reshape_1"
, name: "gradients/g_nnpriorZ/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpriorZ/Mul_grad/Reshape"
input: "^gradients/g_nnpriorZ/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/Mul_grad/Reshape"
    }
  }
}
, name: "gradients/g_nnpriorZ/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpriorZ/Mul_grad/Reshape_1"
input: "^gradients/g_nnpriorZ/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/Mul_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_24"
op: "AddN"
input: "gradients/cond/Switch_2_grad/cond_grad"
input: "gradients/cond/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like"
op: "ZerosLike"
input: "Svd"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/Square"
op: "Square"
input: "Svd"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_grad/Square"
input: "gradients/Svd_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_grad/Square"
input: "gradients/Svd_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_grad/sub"
op: "Sub"
input: "gradients/Svd_grad/ExpandDims"
input: "gradients/Svd_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_grad/Reciprocal"
input: "gradients/Svd_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_grad/strided_slice"
op: "StridedSlice"
input: "Svd:2"
input: "gradients/Svd_grad/strided_slice/stack"
input: "gradients/Svd_grad/strided_slice/stack_1"
input: "gradients/Svd_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_grad/strided_slice_1/stack"
input: "gradients/Svd_grad/strided_slice_1/stack_1"
input: "gradients/Svd_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_grad/MatMul"
op: "MatMul"
input: "Svd:1"
input: "gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_grad/strided_slice"
input: "gradients/Svd_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_grad/mul"
op: "Mul"
input: "gradients/Svd_grad/MatrixSetDiag"
input: "gradients/Svd_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/mul_1"
op: "Mul"
input: "gradients/Svd_grad/MatrixSetDiag"
input: "gradients/Svd_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_grad/mul"
input: "gradients/Svd_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_grad/add"
op: "Add"
input: "gradients/Svd_grad/mul"
input: "gradients/Svd_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_grad/add"
input: "gradients/Svd_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_grad/add_1"
op: "Add"
input: "gradients/Svd_grad/MatrixDiag"
input: "gradients/Svd_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_24"
input: "^gradients/adjoint/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_grad/mul_1"
input: "gradients/Svd_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_grad/add_2"
op: "Add"
input: "gradients/Svd_grad/mul_1"
input: "gradients/Svd_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_grad/MatrixDiag_1"
input: "gradients/Svd_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_grad/add_3"
op: "Add"
input: "gradients/Svd_grad/add_1"
input: "gradients/Svd_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_grad/add_3"
input: "gradients/Svd_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_grad/MatMul_5"
op: "MatMul"
input: "Svd:1"
input: "gradients/Svd_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_25"
op: "AddN"
input: "gradients/cond_1/Switch_2_grad/cond_grad"
input: "gradients/cond_1/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_1/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_1"
op: "ZerosLike"
input: "Svd_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_1"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/Square"
op: "Square"
input: "Svd_1"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_1_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_1_grad/Square"
input: "gradients/Svd_1_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_1_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_1_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_1_grad/Square"
input: "gradients/Svd_1_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_1_grad/sub"
op: "Sub"
input: "gradients/Svd_1_grad/ExpandDims"
input: "gradients/Svd_1_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_1_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_1_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_1_grad/Reciprocal"
input: "gradients/Svd_1_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_1"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_1_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_1_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_1_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_1_grad/strided_slice"
op: "StridedSlice"
input: "Svd_1:2"
input: "gradients/Svd_1_grad/strided_slice/stack"
input: "gradients/Svd_1_grad/strided_slice/stack_1"
input: "gradients/Svd_1_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_1_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_1_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_1_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_1_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_1_grad/strided_slice_1/stack"
input: "gradients/Svd_1_grad/strided_slice_1/stack_1"
input: "gradients/Svd_1_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_1_grad/MatMul"
op: "MatMul"
input: "Svd_1:1"
input: "gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_1_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_1_grad/strided_slice"
input: "gradients/Svd_1_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_1_grad/mul"
op: "Mul"
input: "gradients/Svd_1_grad/MatrixSetDiag"
input: "gradients/Svd_1_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/mul_1"
op: "Mul"
input: "gradients/Svd_1_grad/MatrixSetDiag"
input: "gradients/Svd_1_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_1_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_1_grad/mul"
input: "gradients/Svd_1_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_1_grad/add"
op: "Add"
input: "gradients/Svd_1_grad/mul"
input: "gradients/Svd_1_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_1_grad/add"
input: "gradients/Svd_1_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_1_grad/add_1"
op: "Add"
input: "gradients/Svd_1_grad/MatrixDiag"
input: "gradients/Svd_1_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_25"
input: "^gradients/adjoint_1/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_1_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_1_grad/mul_1"
input: "gradients/Svd_1_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_1_grad/add_2"
op: "Add"
input: "gradients/Svd_1_grad/mul_1"
input: "gradients/Svd_1_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_1_grad/MatrixDiag_1"
input: "gradients/Svd_1_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_1_grad/add_3"
op: "Add"
input: "gradients/Svd_1_grad/add_1"
input: "gradients/Svd_1_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_1_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_1_grad/add_3"
input: "gradients/Svd_1_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_1_grad/MatMul_5"
op: "MatMul"
input: "Svd_1:1"
input: "gradients/Svd_1_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_26"
op: "AddN"
input: "gradients/cond_2/Switch_2_grad/cond_grad"
input: "gradients/cond_2/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_2/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_2"
op: "ZerosLike"
input: "Svd_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_2"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/Square"
op: "Square"
input: "Svd_2"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_2_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_2_grad/Square"
input: "gradients/Svd_2_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_2_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_2_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_2_grad/Square"
input: "gradients/Svd_2_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_2_grad/sub"
op: "Sub"
input: "gradients/Svd_2_grad/ExpandDims"
input: "gradients/Svd_2_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_2_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_2_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_2_grad/Reciprocal"
input: "gradients/Svd_2_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_2"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_2_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_2_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_2_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_2_grad/strided_slice"
op: "StridedSlice"
input: "Svd_2:2"
input: "gradients/Svd_2_grad/strided_slice/stack"
input: "gradients/Svd_2_grad/strided_slice/stack_1"
input: "gradients/Svd_2_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_2_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_2_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_2_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_2_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_2_grad/strided_slice_1/stack"
input: "gradients/Svd_2_grad/strided_slice_1/stack_1"
input: "gradients/Svd_2_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_2_grad/MatMul"
op: "MatMul"
input: "Svd_2:1"
input: "gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_2_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_2_grad/strided_slice"
input: "gradients/Svd_2_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_2_grad/mul"
op: "Mul"
input: "gradients/Svd_2_grad/MatrixSetDiag"
input: "gradients/Svd_2_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/mul_1"
op: "Mul"
input: "gradients/Svd_2_grad/MatrixSetDiag"
input: "gradients/Svd_2_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_2_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_2_grad/mul"
input: "gradients/Svd_2_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_2_grad/add"
op: "Add"
input: "gradients/Svd_2_grad/mul"
input: "gradients/Svd_2_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_2_grad/add"
input: "gradients/Svd_2_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_2_grad/add_1"
op: "Add"
input: "gradients/Svd_2_grad/MatrixDiag"
input: "gradients/Svd_2_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_26"
input: "^gradients/adjoint_2/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_2_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_2_grad/mul_1"
input: "gradients/Svd_2_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_2_grad/add_2"
op: "Add"
input: "gradients/Svd_2_grad/mul_1"
input: "gradients/Svd_2_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_2_grad/MatrixDiag_1"
input: "gradients/Svd_2_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_2_grad/add_3"
op: "Add"
input: "gradients/Svd_2_grad/add_1"
input: "gradients/Svd_2_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_2_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_2_grad/add_3"
input: "gradients/Svd_2_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_2_grad/MatMul_5"
op: "MatMul"
input: "Svd_2:1"
input: "gradients/Svd_2_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_27"
op: "AddN"
input: "gradients/cond_3/Switch_2_grad/cond_grad"
input: "gradients/cond_3/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_3/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_3"
op: "ZerosLike"
input: "Svd_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_3"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/Square"
op: "Square"
input: "Svd_3"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_3_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_3_grad/Square"
input: "gradients/Svd_3_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_3_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_3_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_3_grad/Square"
input: "gradients/Svd_3_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_3_grad/sub"
op: "Sub"
input: "gradients/Svd_3_grad/ExpandDims"
input: "gradients/Svd_3_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_3_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_3_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_3_grad/Reciprocal"
input: "gradients/Svd_3_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_3"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_3_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_3_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_3_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_3_grad/strided_slice"
op: "StridedSlice"
input: "Svd_3:2"
input: "gradients/Svd_3_grad/strided_slice/stack"
input: "gradients/Svd_3_grad/strided_slice/stack_1"
input: "gradients/Svd_3_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_3_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_3_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_3_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_3_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_3_grad/strided_slice_1/stack"
input: "gradients/Svd_3_grad/strided_slice_1/stack_1"
input: "gradients/Svd_3_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_3_grad/MatMul"
op: "MatMul"
input: "Svd_3:1"
input: "gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_3_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_3_grad/strided_slice"
input: "gradients/Svd_3_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_3_grad/mul"
op: "Mul"
input: "gradients/Svd_3_grad/MatrixSetDiag"
input: "gradients/Svd_3_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/mul_1"
op: "Mul"
input: "gradients/Svd_3_grad/MatrixSetDiag"
input: "gradients/Svd_3_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_3_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_3_grad/mul"
input: "gradients/Svd_3_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_3_grad/add"
op: "Add"
input: "gradients/Svd_3_grad/mul"
input: "gradients/Svd_3_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_3_grad/add"
input: "gradients/Svd_3_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_3_grad/add_1"
op: "Add"
input: "gradients/Svd_3_grad/MatrixDiag"
input: "gradients/Svd_3_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_27"
input: "^gradients/adjoint_3/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_3_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_3_grad/mul_1"
input: "gradients/Svd_3_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_3_grad/add_2"
op: "Add"
input: "gradients/Svd_3_grad/mul_1"
input: "gradients/Svd_3_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_3_grad/MatrixDiag_1"
input: "gradients/Svd_3_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_3_grad/add_3"
op: "Add"
input: "gradients/Svd_3_grad/add_1"
input: "gradients/Svd_3_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_3_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_3_grad/add_3"
input: "gradients/Svd_3_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_3_grad/MatMul_5"
op: "MatMul"
input: "Svd_3:1"
input: "gradients/Svd_3_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_28"
op: "AddN"
input: "gradients/cond_4/Switch_2_grad/cond_grad"
input: "gradients/cond_4/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_4/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_4"
op: "ZerosLike"
input: "Svd_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_4"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/Square"
op: "Square"
input: "Svd_4"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_4_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_4_grad/Square"
input: "gradients/Svd_4_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_4_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_4_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_4_grad/Square"
input: "gradients/Svd_4_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_4_grad/sub"
op: "Sub"
input: "gradients/Svd_4_grad/ExpandDims"
input: "gradients/Svd_4_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_4_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_4_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_4_grad/Reciprocal"
input: "gradients/Svd_4_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_4"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_4_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_4_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_4_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_4_grad/strided_slice"
op: "StridedSlice"
input: "Svd_4:2"
input: "gradients/Svd_4_grad/strided_slice/stack"
input: "gradients/Svd_4_grad/strided_slice/stack_1"
input: "gradients/Svd_4_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_4_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_4_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_4_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_4_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_4_grad/strided_slice_1/stack"
input: "gradients/Svd_4_grad/strided_slice_1/stack_1"
input: "gradients/Svd_4_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_4_grad/MatMul"
op: "MatMul"
input: "Svd_4:1"
input: "gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_4_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_4_grad/strided_slice"
input: "gradients/Svd_4_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_4_grad/mul"
op: "Mul"
input: "gradients/Svd_4_grad/MatrixSetDiag"
input: "gradients/Svd_4_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/mul_1"
op: "Mul"
input: "gradients/Svd_4_grad/MatrixSetDiag"
input: "gradients/Svd_4_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_4_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_4_grad/mul"
input: "gradients/Svd_4_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_4_grad/add"
op: "Add"
input: "gradients/Svd_4_grad/mul"
input: "gradients/Svd_4_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_4_grad/add"
input: "gradients/Svd_4_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_4_grad/add_1"
op: "Add"
input: "gradients/Svd_4_grad/MatrixDiag"
input: "gradients/Svd_4_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_28"
input: "^gradients/adjoint_4/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_4_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_4_grad/mul_1"
input: "gradients/Svd_4_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_4_grad/add_2"
op: "Add"
input: "gradients/Svd_4_grad/mul_1"
input: "gradients/Svd_4_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_4_grad/MatrixDiag_1"
input: "gradients/Svd_4_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_4_grad/add_3"
op: "Add"
input: "gradients/Svd_4_grad/add_1"
input: "gradients/Svd_4_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_4_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_4_grad/add_3"
input: "gradients/Svd_4_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_4_grad/MatMul_5"
op: "MatMul"
input: "Svd_4:1"
input: "gradients/Svd_4_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_29"
op: "AddN"
input: "gradients/cond_5/Switch_2_grad/cond_grad"
input: "gradients/cond_5/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_5/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_5"
op: "ZerosLike"
input: "Svd_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_5"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/Square"
op: "Square"
input: "Svd_5"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_5_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_5_grad/Square"
input: "gradients/Svd_5_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_5_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_5_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_5_grad/Square"
input: "gradients/Svd_5_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_5_grad/sub"
op: "Sub"
input: "gradients/Svd_5_grad/ExpandDims"
input: "gradients/Svd_5_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_5_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_5_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_5_grad/Reciprocal"
input: "gradients/Svd_5_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_5"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_5_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_5_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_5_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_5_grad/strided_slice"
op: "StridedSlice"
input: "Svd_5:2"
input: "gradients/Svd_5_grad/strided_slice/stack"
input: "gradients/Svd_5_grad/strided_slice/stack_1"
input: "gradients/Svd_5_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_5_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_5_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_5_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_5_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_5_grad/strided_slice_1/stack"
input: "gradients/Svd_5_grad/strided_slice_1/stack_1"
input: "gradients/Svd_5_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_5_grad/MatMul"
op: "MatMul"
input: "Svd_5:1"
input: "gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_5_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_5_grad/strided_slice"
input: "gradients/Svd_5_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_5_grad/mul"
op: "Mul"
input: "gradients/Svd_5_grad/MatrixSetDiag"
input: "gradients/Svd_5_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/mul_1"
op: "Mul"
input: "gradients/Svd_5_grad/MatrixSetDiag"
input: "gradients/Svd_5_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_5_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_5_grad/mul"
input: "gradients/Svd_5_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_5_grad/add"
op: "Add"
input: "gradients/Svd_5_grad/mul"
input: "gradients/Svd_5_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_5_grad/add"
input: "gradients/Svd_5_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_5_grad/add_1"
op: "Add"
input: "gradients/Svd_5_grad/MatrixDiag"
input: "gradients/Svd_5_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_29"
input: "^gradients/adjoint_5/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_5_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_5_grad/mul_1"
input: "gradients/Svd_5_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_5_grad/add_2"
op: "Add"
input: "gradients/Svd_5_grad/mul_1"
input: "gradients/Svd_5_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_5_grad/MatrixDiag_1"
input: "gradients/Svd_5_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_5_grad/add_3"
op: "Add"
input: "gradients/Svd_5_grad/add_1"
input: "gradients/Svd_5_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_5_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_5_grad/add_3"
input: "gradients/Svd_5_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_5_grad/MatMul_5"
op: "MatMul"
input: "Svd_5:1"
input: "gradients/Svd_5_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_30"
op: "AddN"
input: "gradients/cond_6/Switch_2_grad/cond_grad"
input: "gradients/cond_6/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_6/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_6"
op: "ZerosLike"
input: "Svd_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_6"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/Square"
op: "Square"
input: "Svd_6"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_6_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_6_grad/Square"
input: "gradients/Svd_6_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_6_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_6_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_6_grad/Square"
input: "gradients/Svd_6_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_6_grad/sub"
op: "Sub"
input: "gradients/Svd_6_grad/ExpandDims"
input: "gradients/Svd_6_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_6_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_6_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_6_grad/Reciprocal"
input: "gradients/Svd_6_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_6"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_6_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_6_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_6_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_6_grad/strided_slice"
op: "StridedSlice"
input: "Svd_6:2"
input: "gradients/Svd_6_grad/strided_slice/stack"
input: "gradients/Svd_6_grad/strided_slice/stack_1"
input: "gradients/Svd_6_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_6_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_6_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_6_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_6_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_6_grad/strided_slice_1/stack"
input: "gradients/Svd_6_grad/strided_slice_1/stack_1"
input: "gradients/Svd_6_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_6_grad/MatMul"
op: "MatMul"
input: "Svd_6:1"
input: "gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_6_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_6_grad/strided_slice"
input: "gradients/Svd_6_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_6_grad/mul"
op: "Mul"
input: "gradients/Svd_6_grad/MatrixSetDiag"
input: "gradients/Svd_6_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/mul_1"
op: "Mul"
input: "gradients/Svd_6_grad/MatrixSetDiag"
input: "gradients/Svd_6_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_6_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_6_grad/mul"
input: "gradients/Svd_6_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_6_grad/add"
op: "Add"
input: "gradients/Svd_6_grad/mul"
input: "gradients/Svd_6_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_6_grad/add"
input: "gradients/Svd_6_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_6_grad/add_1"
op: "Add"
input: "gradients/Svd_6_grad/MatrixDiag"
input: "gradients/Svd_6_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_30"
input: "^gradients/adjoint_6/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_6_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_6_grad/mul_1"
input: "gradients/Svd_6_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_6_grad/add_2"
op: "Add"
input: "gradients/Svd_6_grad/mul_1"
input: "gradients/Svd_6_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_6_grad/MatrixDiag_1"
input: "gradients/Svd_6_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_6_grad/add_3"
op: "Add"
input: "gradients/Svd_6_grad/add_1"
input: "gradients/Svd_6_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_6_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_6_grad/add_3"
input: "gradients/Svd_6_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_6_grad/MatMul_5"
op: "MatMul"
input: "Svd_6:1"
input: "gradients/Svd_6_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_31"
op: "AddN"
input: "gradients/cond_7/Switch_2_grad/cond_grad"
input: "gradients/cond_7/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_7/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_7"
op: "ZerosLike"
input: "Svd_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_7"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/Square"
op: "Square"
input: "Svd_7"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_7_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_7_grad/Square"
input: "gradients/Svd_7_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_7_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_7_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_7_grad/Square"
input: "gradients/Svd_7_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_7_grad/sub"
op: "Sub"
input: "gradients/Svd_7_grad/ExpandDims"
input: "gradients/Svd_7_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_7_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_7_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_7_grad/Reciprocal"
input: "gradients/Svd_7_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_7"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_7_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_7_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_7_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_7_grad/strided_slice"
op: "StridedSlice"
input: "Svd_7:2"
input: "gradients/Svd_7_grad/strided_slice/stack"
input: "gradients/Svd_7_grad/strided_slice/stack_1"
input: "gradients/Svd_7_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_7_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_7_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_7_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_7_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_7_grad/strided_slice_1/stack"
input: "gradients/Svd_7_grad/strided_slice_1/stack_1"
input: "gradients/Svd_7_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_7_grad/MatMul"
op: "MatMul"
input: "Svd_7:1"
input: "gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_7_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_7_grad/strided_slice"
input: "gradients/Svd_7_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_7_grad/mul"
op: "Mul"
input: "gradients/Svd_7_grad/MatrixSetDiag"
input: "gradients/Svd_7_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/mul_1"
op: "Mul"
input: "gradients/Svd_7_grad/MatrixSetDiag"
input: "gradients/Svd_7_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_7_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_7_grad/mul"
input: "gradients/Svd_7_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_7_grad/add"
op: "Add"
input: "gradients/Svd_7_grad/mul"
input: "gradients/Svd_7_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_7_grad/add"
input: "gradients/Svd_7_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_7_grad/add_1"
op: "Add"
input: "gradients/Svd_7_grad/MatrixDiag"
input: "gradients/Svd_7_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_31"
input: "^gradients/adjoint_7/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_7_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_7_grad/mul_1"
input: "gradients/Svd_7_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_7_grad/add_2"
op: "Add"
input: "gradients/Svd_7_grad/mul_1"
input: "gradients/Svd_7_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_7_grad/MatrixDiag_1"
input: "gradients/Svd_7_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_7_grad/add_3"
op: "Add"
input: "gradients/Svd_7_grad/add_1"
input: "gradients/Svd_7_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_7_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_7_grad/add_3"
input: "gradients/Svd_7_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_7_grad/MatMul_5"
op: "MatMul"
input: "Svd_7:1"
input: "gradients/Svd_7_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_32"
op: "AddN"
input: "gradients/cond_8/Switch_2_grad/cond_grad"
input: "gradients/cond_8/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_8/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_8"
op: "ZerosLike"
input: "Svd_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_8"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/Square"
op: "Square"
input: "Svd_8"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_8_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_8_grad/Square"
input: "gradients/Svd_8_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_8_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_8_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_8_grad/Square"
input: "gradients/Svd_8_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_8_grad/sub"
op: "Sub"
input: "gradients/Svd_8_grad/ExpandDims"
input: "gradients/Svd_8_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_8_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_8_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_8_grad/Reciprocal"
input: "gradients/Svd_8_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_8"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_8_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_8_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_8_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_8_grad/strided_slice"
op: "StridedSlice"
input: "Svd_8:2"
input: "gradients/Svd_8_grad/strided_slice/stack"
input: "gradients/Svd_8_grad/strided_slice/stack_1"
input: "gradients/Svd_8_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_8_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_8_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_8_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_8_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_8_grad/strided_slice_1/stack"
input: "gradients/Svd_8_grad/strided_slice_1/stack_1"
input: "gradients/Svd_8_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_8_grad/MatMul"
op: "MatMul"
input: "Svd_8:1"
input: "gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_8_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_8_grad/strided_slice"
input: "gradients/Svd_8_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_8_grad/mul"
op: "Mul"
input: "gradients/Svd_8_grad/MatrixSetDiag"
input: "gradients/Svd_8_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/mul_1"
op: "Mul"
input: "gradients/Svd_8_grad/MatrixSetDiag"
input: "gradients/Svd_8_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_8_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_8_grad/mul"
input: "gradients/Svd_8_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_8_grad/add"
op: "Add"
input: "gradients/Svd_8_grad/mul"
input: "gradients/Svd_8_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_8_grad/add"
input: "gradients/Svd_8_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_8_grad/add_1"
op: "Add"
input: "gradients/Svd_8_grad/MatrixDiag"
input: "gradients/Svd_8_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_32"
input: "^gradients/adjoint_8/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_8_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_8_grad/mul_1"
input: "gradients/Svd_8_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_8_grad/add_2"
op: "Add"
input: "gradients/Svd_8_grad/mul_1"
input: "gradients/Svd_8_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_8_grad/MatrixDiag_1"
input: "gradients/Svd_8_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_8_grad/add_3"
op: "Add"
input: "gradients/Svd_8_grad/add_1"
input: "gradients/Svd_8_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_8_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_8_grad/add_3"
input: "gradients/Svd_8_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_8_grad/MatMul_5"
op: "MatMul"
input: "Svd_8:1"
input: "gradients/Svd_8_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_33"
op: "AddN"
input: "gradients/cond_9/Switch_2_grad/cond_grad"
input: "gradients/cond_9/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_9/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_9"
op: "ZerosLike"
input: "Svd_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_9"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/Square"
op: "Square"
input: "Svd_9"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_9_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_9_grad/Square"
input: "gradients/Svd_9_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_9_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_9_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_9_grad/Square"
input: "gradients/Svd_9_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_9_grad/sub"
op: "Sub"
input: "gradients/Svd_9_grad/ExpandDims"
input: "gradients/Svd_9_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_9_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_9_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_9_grad/Reciprocal"
input: "gradients/Svd_9_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_9"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_9_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_9_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_9_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_9_grad/strided_slice"
op: "StridedSlice"
input: "Svd_9:2"
input: "gradients/Svd_9_grad/strided_slice/stack"
input: "gradients/Svd_9_grad/strided_slice/stack_1"
input: "gradients/Svd_9_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_9_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_9_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_9_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_9_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_9_grad/strided_slice_1/stack"
input: "gradients/Svd_9_grad/strided_slice_1/stack_1"
input: "gradients/Svd_9_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_9_grad/MatMul"
op: "MatMul"
input: "Svd_9:1"
input: "gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_9_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_9_grad/strided_slice"
input: "gradients/Svd_9_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_9_grad/mul"
op: "Mul"
input: "gradients/Svd_9_grad/MatrixSetDiag"
input: "gradients/Svd_9_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/mul_1"
op: "Mul"
input: "gradients/Svd_9_grad/MatrixSetDiag"
input: "gradients/Svd_9_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_9_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_9_grad/mul"
input: "gradients/Svd_9_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_9_grad/add"
op: "Add"
input: "gradients/Svd_9_grad/mul"
input: "gradients/Svd_9_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_9_grad/add"
input: "gradients/Svd_9_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_9_grad/add_1"
op: "Add"
input: "gradients/Svd_9_grad/MatrixDiag"
input: "gradients/Svd_9_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_33"
input: "^gradients/adjoint_9/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_9"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_9_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_9_grad/mul_1"
input: "gradients/Svd_9_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_9_grad/add_2"
op: "Add"
input: "gradients/Svd_9_grad/mul_1"
input: "gradients/Svd_9_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_9_grad/MatrixDiag_1"
input: "gradients/Svd_9_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_9_grad/add_3"
op: "Add"
input: "gradients/Svd_9_grad/add_1"
input: "gradients/Svd_9_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_9_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_9_grad/add_3"
input: "gradients/Svd_9_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_9_grad/MatMul_5"
op: "MatMul"
input: "Svd_9:1"
input: "gradients/Svd_9_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_34"
op: "AddN"
input: "gradients/cond_10/Switch_2_grad/cond_grad"
input: "gradients/cond_10/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_10/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_10"
op: "ZerosLike"
input: "Svd_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_10"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/Square"
op: "Square"
input: "Svd_10"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_10_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_10_grad/Square"
input: "gradients/Svd_10_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_10_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_10_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_10_grad/Square"
input: "gradients/Svd_10_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_10_grad/sub"
op: "Sub"
input: "gradients/Svd_10_grad/ExpandDims"
input: "gradients/Svd_10_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_10_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_10_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_10_grad/Reciprocal"
input: "gradients/Svd_10_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_10"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_10_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_10_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_10_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_10_grad/strided_slice"
op: "StridedSlice"
input: "Svd_10:2"
input: "gradients/Svd_10_grad/strided_slice/stack"
input: "gradients/Svd_10_grad/strided_slice/stack_1"
input: "gradients/Svd_10_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_10_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_10_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_10_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_10_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_10_grad/strided_slice_1/stack"
input: "gradients/Svd_10_grad/strided_slice_1/stack_1"
input: "gradients/Svd_10_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_10_grad/MatMul"
op: "MatMul"
input: "Svd_10:1"
input: "gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_10_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_10_grad/strided_slice"
input: "gradients/Svd_10_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_10_grad/mul"
op: "Mul"
input: "gradients/Svd_10_grad/MatrixSetDiag"
input: "gradients/Svd_10_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/mul_1"
op: "Mul"
input: "gradients/Svd_10_grad/MatrixSetDiag"
input: "gradients/Svd_10_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_10_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_10_grad/mul"
input: "gradients/Svd_10_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_10_grad/add"
op: "Add"
input: "gradients/Svd_10_grad/mul"
input: "gradients/Svd_10_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_10_grad/add"
input: "gradients/Svd_10_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_10_grad/add_1"
op: "Add"
input: "gradients/Svd_10_grad/MatrixDiag"
input: "gradients/Svd_10_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_34"
input: "^gradients/adjoint_10/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_10"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_10_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_10_grad/mul_1"
input: "gradients/Svd_10_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_10_grad/add_2"
op: "Add"
input: "gradients/Svd_10_grad/mul_1"
input: "gradients/Svd_10_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_10_grad/MatrixDiag_1"
input: "gradients/Svd_10_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_10_grad/add_3"
op: "Add"
input: "gradients/Svd_10_grad/add_1"
input: "gradients/Svd_10_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_10_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_10_grad/add_3"
input: "gradients/Svd_10_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_10_grad/MatMul_5"
op: "MatMul"
input: "Svd_10:1"
input: "gradients/Svd_10_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_35"
op: "AddN"
input: "gradients/cond_11/Switch_2_grad/cond_grad"
input: "gradients/cond_11/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_11/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_11"
op: "ZerosLike"
input: "Svd_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_11"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/Square"
op: "Square"
input: "Svd_11"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_11_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_11_grad/Square"
input: "gradients/Svd_11_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_11_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_11_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_11_grad/Square"
input: "gradients/Svd_11_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_11_grad/sub"
op: "Sub"
input: "gradients/Svd_11_grad/ExpandDims"
input: "gradients/Svd_11_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_11_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_11_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_11_grad/Reciprocal"
input: "gradients/Svd_11_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_11"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_11_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_11_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_11_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_11_grad/strided_slice"
op: "StridedSlice"
input: "Svd_11:2"
input: "gradients/Svd_11_grad/strided_slice/stack"
input: "gradients/Svd_11_grad/strided_slice/stack_1"
input: "gradients/Svd_11_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_11_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_11_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_11_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_11_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_11_grad/strided_slice_1/stack"
input: "gradients/Svd_11_grad/strided_slice_1/stack_1"
input: "gradients/Svd_11_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_11_grad/MatMul"
op: "MatMul"
input: "Svd_11:1"
input: "gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_11_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_11_grad/strided_slice"
input: "gradients/Svd_11_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_11_grad/mul"
op: "Mul"
input: "gradients/Svd_11_grad/MatrixSetDiag"
input: "gradients/Svd_11_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/mul_1"
op: "Mul"
input: "gradients/Svd_11_grad/MatrixSetDiag"
input: "gradients/Svd_11_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_11_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_11_grad/mul"
input: "gradients/Svd_11_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_11_grad/add"
op: "Add"
input: "gradients/Svd_11_grad/mul"
input: "gradients/Svd_11_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_11_grad/add"
input: "gradients/Svd_11_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_11_grad/add_1"
op: "Add"
input: "gradients/Svd_11_grad/MatrixDiag"
input: "gradients/Svd_11_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_35"
input: "^gradients/adjoint_11/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_11"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_11_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_11_grad/mul_1"
input: "gradients/Svd_11_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_11_grad/add_2"
op: "Add"
input: "gradients/Svd_11_grad/mul_1"
input: "gradients/Svd_11_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_11_grad/MatrixDiag_1"
input: "gradients/Svd_11_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_11_grad/add_3"
op: "Add"
input: "gradients/Svd_11_grad/add_1"
input: "gradients/Svd_11_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_11_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_11_grad/add_3"
input: "gradients/Svd_11_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_11_grad/MatMul_5"
op: "MatMul"
input: "Svd_11:1"
input: "gradients/Svd_11_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_36"
op: "AddN"
input: "gradients/cond_12/Switch_2_grad/cond_grad"
input: "gradients/cond_12/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_12/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_12"
op: "ZerosLike"
input: "Svd_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_12"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/Square"
op: "Square"
input: "Svd_12"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_12_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_12_grad/Square"
input: "gradients/Svd_12_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_12_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_12_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_12_grad/Square"
input: "gradients/Svd_12_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_12_grad/sub"
op: "Sub"
input: "gradients/Svd_12_grad/ExpandDims"
input: "gradients/Svd_12_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_12_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_12_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_12_grad/Reciprocal"
input: "gradients/Svd_12_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_12"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_12_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_12_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_12_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_12_grad/strided_slice"
op: "StridedSlice"
input: "Svd_12:2"
input: "gradients/Svd_12_grad/strided_slice/stack"
input: "gradients/Svd_12_grad/strided_slice/stack_1"
input: "gradients/Svd_12_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_12_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_12_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_12_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_12_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_12_grad/strided_slice_1/stack"
input: "gradients/Svd_12_grad/strided_slice_1/stack_1"
input: "gradients/Svd_12_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_12_grad/MatMul"
op: "MatMul"
input: "Svd_12:1"
input: "gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_12_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_12_grad/strided_slice"
input: "gradients/Svd_12_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_12_grad/mul"
op: "Mul"
input: "gradients/Svd_12_grad/MatrixSetDiag"
input: "gradients/Svd_12_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/mul_1"
op: "Mul"
input: "gradients/Svd_12_grad/MatrixSetDiag"
input: "gradients/Svd_12_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_12_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_12_grad/mul"
input: "gradients/Svd_12_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_12_grad/add"
op: "Add"
input: "gradients/Svd_12_grad/mul"
input: "gradients/Svd_12_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_12_grad/add"
input: "gradients/Svd_12_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_12_grad/add_1"
op: "Add"
input: "gradients/Svd_12_grad/MatrixDiag"
input: "gradients/Svd_12_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_36"
input: "^gradients/adjoint_12/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_12"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_12_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_12_grad/mul_1"
input: "gradients/Svd_12_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_12_grad/add_2"
op: "Add"
input: "gradients/Svd_12_grad/mul_1"
input: "gradients/Svd_12_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_12_grad/MatrixDiag_1"
input: "gradients/Svd_12_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_12_grad/add_3"
op: "Add"
input: "gradients/Svd_12_grad/add_1"
input: "gradients/Svd_12_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_12_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_12_grad/add_3"
input: "gradients/Svd_12_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_12_grad/MatMul_5"
op: "MatMul"
input: "Svd_12:1"
input: "gradients/Svd_12_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_37"
op: "AddN"
input: "gradients/cond_13/Switch_2_grad/cond_grad"
input: "gradients/cond_13/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_13/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_13"
op: "ZerosLike"
input: "Svd_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_13"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/Square"
op: "Square"
input: "Svd_13"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_13_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_13_grad/Square"
input: "gradients/Svd_13_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_13_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_13_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_13_grad/Square"
input: "gradients/Svd_13_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_13_grad/sub"
op: "Sub"
input: "gradients/Svd_13_grad/ExpandDims"
input: "gradients/Svd_13_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_13_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_13_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_13_grad/Reciprocal"
input: "gradients/Svd_13_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_13"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_13_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_13_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_13_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_13_grad/strided_slice"
op: "StridedSlice"
input: "Svd_13:2"
input: "gradients/Svd_13_grad/strided_slice/stack"
input: "gradients/Svd_13_grad/strided_slice/stack_1"
input: "gradients/Svd_13_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_13_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_13_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_13_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_13_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_13_grad/strided_slice_1/stack"
input: "gradients/Svd_13_grad/strided_slice_1/stack_1"
input: "gradients/Svd_13_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_13_grad/MatMul"
op: "MatMul"
input: "Svd_13:1"
input: "gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_13_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_13_grad/strided_slice"
input: "gradients/Svd_13_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_13_grad/mul"
op: "Mul"
input: "gradients/Svd_13_grad/MatrixSetDiag"
input: "gradients/Svd_13_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/mul_1"
op: "Mul"
input: "gradients/Svd_13_grad/MatrixSetDiag"
input: "gradients/Svd_13_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_13_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_13_grad/mul"
input: "gradients/Svd_13_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_13_grad/add"
op: "Add"
input: "gradients/Svd_13_grad/mul"
input: "gradients/Svd_13_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_13_grad/add"
input: "gradients/Svd_13_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_13_grad/add_1"
op: "Add"
input: "gradients/Svd_13_grad/MatrixDiag"
input: "gradients/Svd_13_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_37"
input: "^gradients/adjoint_13/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_13"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_13_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_13_grad/mul_1"
input: "gradients/Svd_13_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_13_grad/add_2"
op: "Add"
input: "gradients/Svd_13_grad/mul_1"
input: "gradients/Svd_13_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_13_grad/MatrixDiag_1"
input: "gradients/Svd_13_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_13_grad/add_3"
op: "Add"
input: "gradients/Svd_13_grad/add_1"
input: "gradients/Svd_13_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_13_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_13_grad/add_3"
input: "gradients/Svd_13_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_13_grad/MatMul_5"
op: "MatMul"
input: "Svd_13:1"
input: "gradients/Svd_13_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_38"
op: "AddN"
input: "gradients/cond_14/Switch_2_grad/cond_grad"
input: "gradients/cond_14/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_14/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_14"
op: "ZerosLike"
input: "Svd_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_14"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/Square"
op: "Square"
input: "Svd_14"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_14_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_14_grad/Square"
input: "gradients/Svd_14_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_14_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_14_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_14_grad/Square"
input: "gradients/Svd_14_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_14_grad/sub"
op: "Sub"
input: "gradients/Svd_14_grad/ExpandDims"
input: "gradients/Svd_14_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_14_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_14_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_14_grad/Reciprocal"
input: "gradients/Svd_14_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_14"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_14_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_14_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_14_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_14_grad/strided_slice"
op: "StridedSlice"
input: "Svd_14:2"
input: "gradients/Svd_14_grad/strided_slice/stack"
input: "gradients/Svd_14_grad/strided_slice/stack_1"
input: "gradients/Svd_14_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_14_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_14_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_14_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_14_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_14_grad/strided_slice_1/stack"
input: "gradients/Svd_14_grad/strided_slice_1/stack_1"
input: "gradients/Svd_14_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_14_grad/MatMul"
op: "MatMul"
input: "Svd_14:1"
input: "gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_14_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_14_grad/strided_slice"
input: "gradients/Svd_14_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_14_grad/mul"
op: "Mul"
input: "gradients/Svd_14_grad/MatrixSetDiag"
input: "gradients/Svd_14_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/mul_1"
op: "Mul"
input: "gradients/Svd_14_grad/MatrixSetDiag"
input: "gradients/Svd_14_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_14_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_14_grad/mul"
input: "gradients/Svd_14_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_14_grad/add"
op: "Add"
input: "gradients/Svd_14_grad/mul"
input: "gradients/Svd_14_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_14_grad/add"
input: "gradients/Svd_14_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_14_grad/add_1"
op: "Add"
input: "gradients/Svd_14_grad/MatrixDiag"
input: "gradients/Svd_14_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_38"
input: "^gradients/adjoint_14/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_14"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_14_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_14_grad/mul_1"
input: "gradients/Svd_14_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_14_grad/add_2"
op: "Add"
input: "gradients/Svd_14_grad/mul_1"
input: "gradients/Svd_14_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_14_grad/MatrixDiag_1"
input: "gradients/Svd_14_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_14_grad/add_3"
op: "Add"
input: "gradients/Svd_14_grad/add_1"
input: "gradients/Svd_14_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_14_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_14_grad/add_3"
input: "gradients/Svd_14_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_14_grad/MatMul_5"
op: "MatMul"
input: "Svd_14:1"
input: "gradients/Svd_14_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_39"
op: "AddN"
input: "gradients/cond_15/Switch_2_grad/cond_grad"
input: "gradients/cond_15/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_15/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_15"
op: "ZerosLike"
input: "Svd_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_15"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/Square"
op: "Square"
input: "Svd_15"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_15_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_15_grad/Square"
input: "gradients/Svd_15_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_15_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_15_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_15_grad/Square"
input: "gradients/Svd_15_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_15_grad/sub"
op: "Sub"
input: "gradients/Svd_15_grad/ExpandDims"
input: "gradients/Svd_15_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_15_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_15_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_15_grad/Reciprocal"
input: "gradients/Svd_15_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_15"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_15_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_15_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_15_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_15_grad/strided_slice"
op: "StridedSlice"
input: "Svd_15:2"
input: "gradients/Svd_15_grad/strided_slice/stack"
input: "gradients/Svd_15_grad/strided_slice/stack_1"
input: "gradients/Svd_15_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_15_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_15_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_15_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_15_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_15_grad/strided_slice_1/stack"
input: "gradients/Svd_15_grad/strided_slice_1/stack_1"
input: "gradients/Svd_15_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_15_grad/MatMul"
op: "MatMul"
input: "Svd_15:1"
input: "gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_15_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_15_grad/strided_slice"
input: "gradients/Svd_15_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_15_grad/mul"
op: "Mul"
input: "gradients/Svd_15_grad/MatrixSetDiag"
input: "gradients/Svd_15_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/mul_1"
op: "Mul"
input: "gradients/Svd_15_grad/MatrixSetDiag"
input: "gradients/Svd_15_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_15_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_15_grad/mul"
input: "gradients/Svd_15_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_15_grad/add"
op: "Add"
input: "gradients/Svd_15_grad/mul"
input: "gradients/Svd_15_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_15_grad/add"
input: "gradients/Svd_15_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_15_grad/add_1"
op: "Add"
input: "gradients/Svd_15_grad/MatrixDiag"
input: "gradients/Svd_15_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_39"
input: "^gradients/adjoint_15/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_15"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_15_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_15_grad/mul_1"
input: "gradients/Svd_15_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_15_grad/add_2"
op: "Add"
input: "gradients/Svd_15_grad/mul_1"
input: "gradients/Svd_15_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_15_grad/MatrixDiag_1"
input: "gradients/Svd_15_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_15_grad/add_3"
op: "Add"
input: "gradients/Svd_15_grad/add_1"
input: "gradients/Svd_15_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_15_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_15_grad/add_3"
input: "gradients/Svd_15_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_15_grad/MatMul_5"
op: "MatMul"
input: "Svd_15:1"
input: "gradients/Svd_15_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_40"
op: "AddN"
input: "gradients/cond_16/Switch_2_grad/cond_grad"
input: "gradients/cond_16/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_16/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_16"
op: "ZerosLike"
input: "Svd_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_16"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/Square"
op: "Square"
input: "Svd_16"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_16_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_16_grad/Square"
input: "gradients/Svd_16_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_16_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_16_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_16_grad/Square"
input: "gradients/Svd_16_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_16_grad/sub"
op: "Sub"
input: "gradients/Svd_16_grad/ExpandDims"
input: "gradients/Svd_16_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_16_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_16_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_16_grad/Reciprocal"
input: "gradients/Svd_16_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_16"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_16_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_16_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_16_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_16_grad/strided_slice"
op: "StridedSlice"
input: "Svd_16:2"
input: "gradients/Svd_16_grad/strided_slice/stack"
input: "gradients/Svd_16_grad/strided_slice/stack_1"
input: "gradients/Svd_16_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_16_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_16_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_16_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_16_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_16_grad/strided_slice_1/stack"
input: "gradients/Svd_16_grad/strided_slice_1/stack_1"
input: "gradients/Svd_16_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_16_grad/MatMul"
op: "MatMul"
input: "Svd_16:1"
input: "gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_16_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_16_grad/strided_slice"
input: "gradients/Svd_16_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_16_grad/mul"
op: "Mul"
input: "gradients/Svd_16_grad/MatrixSetDiag"
input: "gradients/Svd_16_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/mul_1"
op: "Mul"
input: "gradients/Svd_16_grad/MatrixSetDiag"
input: "gradients/Svd_16_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_16_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_16_grad/mul"
input: "gradients/Svd_16_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_16_grad/add"
op: "Add"
input: "gradients/Svd_16_grad/mul"
input: "gradients/Svd_16_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_16_grad/add"
input: "gradients/Svd_16_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_16_grad/add_1"
op: "Add"
input: "gradients/Svd_16_grad/MatrixDiag"
input: "gradients/Svd_16_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_40"
input: "^gradients/adjoint_16/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_16"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_16_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_16_grad/mul_1"
input: "gradients/Svd_16_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_16_grad/add_2"
op: "Add"
input: "gradients/Svd_16_grad/mul_1"
input: "gradients/Svd_16_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_16_grad/MatrixDiag_1"
input: "gradients/Svd_16_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_16_grad/add_3"
op: "Add"
input: "gradients/Svd_16_grad/add_1"
input: "gradients/Svd_16_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_16_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_16_grad/add_3"
input: "gradients/Svd_16_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_16_grad/MatMul_5"
op: "MatMul"
input: "Svd_16:1"
input: "gradients/Svd_16_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_41"
op: "AddN"
input: "gradients/cond_17/Switch_2_grad/cond_grad"
input: "gradients/cond_17/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_17/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_17"
op: "ZerosLike"
input: "Svd_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_17"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/Square"
op: "Square"
input: "Svd_17"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_17_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_17_grad/Square"
input: "gradients/Svd_17_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_17_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_17_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_17_grad/Square"
input: "gradients/Svd_17_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_17_grad/sub"
op: "Sub"
input: "gradients/Svd_17_grad/ExpandDims"
input: "gradients/Svd_17_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_17_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_17_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_17_grad/Reciprocal"
input: "gradients/Svd_17_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_17"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_17_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_17_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_17_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_17_grad/strided_slice"
op: "StridedSlice"
input: "Svd_17:2"
input: "gradients/Svd_17_grad/strided_slice/stack"
input: "gradients/Svd_17_grad/strided_slice/stack_1"
input: "gradients/Svd_17_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_17_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_17_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_17_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_17_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_17_grad/strided_slice_1/stack"
input: "gradients/Svd_17_grad/strided_slice_1/stack_1"
input: "gradients/Svd_17_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_17_grad/MatMul"
op: "MatMul"
input: "Svd_17:1"
input: "gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_17_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_17_grad/strided_slice"
input: "gradients/Svd_17_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_17_grad/mul"
op: "Mul"
input: "gradients/Svd_17_grad/MatrixSetDiag"
input: "gradients/Svd_17_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/mul_1"
op: "Mul"
input: "gradients/Svd_17_grad/MatrixSetDiag"
input: "gradients/Svd_17_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_17_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_17_grad/mul"
input: "gradients/Svd_17_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_17_grad/add"
op: "Add"
input: "gradients/Svd_17_grad/mul"
input: "gradients/Svd_17_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_17_grad/add"
input: "gradients/Svd_17_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_17_grad/add_1"
op: "Add"
input: "gradients/Svd_17_grad/MatrixDiag"
input: "gradients/Svd_17_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_41"
input: "^gradients/adjoint_17/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_17"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_17_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_17_grad/mul_1"
input: "gradients/Svd_17_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_17_grad/add_2"
op: "Add"
input: "gradients/Svd_17_grad/mul_1"
input: "gradients/Svd_17_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_17_grad/MatrixDiag_1"
input: "gradients/Svd_17_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_17_grad/add_3"
op: "Add"
input: "gradients/Svd_17_grad/add_1"
input: "gradients/Svd_17_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_17_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_17_grad/add_3"
input: "gradients/Svd_17_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_17_grad/MatMul_5"
op: "MatMul"
input: "Svd_17:1"
input: "gradients/Svd_17_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_42"
op: "AddN"
input: "gradients/cond_18/Switch_2_grad/cond_grad"
input: "gradients/cond_18/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_18/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_18"
op: "ZerosLike"
input: "Svd_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_18"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/Square"
op: "Square"
input: "Svd_18"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_18_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_18_grad/Square"
input: "gradients/Svd_18_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_18_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_18_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_18_grad/Square"
input: "gradients/Svd_18_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_18_grad/sub"
op: "Sub"
input: "gradients/Svd_18_grad/ExpandDims"
input: "gradients/Svd_18_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_18_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_18_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_18_grad/Reciprocal"
input: "gradients/Svd_18_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_18"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_18_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_18_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_18_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_18_grad/strided_slice"
op: "StridedSlice"
input: "Svd_18:2"
input: "gradients/Svd_18_grad/strided_slice/stack"
input: "gradients/Svd_18_grad/strided_slice/stack_1"
input: "gradients/Svd_18_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_18_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_18_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_18_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_18_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_18_grad/strided_slice_1/stack"
input: "gradients/Svd_18_grad/strided_slice_1/stack_1"
input: "gradients/Svd_18_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_18_grad/MatMul"
op: "MatMul"
input: "Svd_18:1"
input: "gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_18_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_18_grad/strided_slice"
input: "gradients/Svd_18_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_18_grad/mul"
op: "Mul"
input: "gradients/Svd_18_grad/MatrixSetDiag"
input: "gradients/Svd_18_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/mul_1"
op: "Mul"
input: "gradients/Svd_18_grad/MatrixSetDiag"
input: "gradients/Svd_18_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_18_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_18_grad/mul"
input: "gradients/Svd_18_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_18_grad/add"
op: "Add"
input: "gradients/Svd_18_grad/mul"
input: "gradients/Svd_18_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_18_grad/add"
input: "gradients/Svd_18_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_18_grad/add_1"
op: "Add"
input: "gradients/Svd_18_grad/MatrixDiag"
input: "gradients/Svd_18_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_42"
input: "^gradients/adjoint_18/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_18"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_18_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_18_grad/mul_1"
input: "gradients/Svd_18_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_18_grad/add_2"
op: "Add"
input: "gradients/Svd_18_grad/mul_1"
input: "gradients/Svd_18_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_18_grad/MatrixDiag_1"
input: "gradients/Svd_18_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_18_grad/add_3"
op: "Add"
input: "gradients/Svd_18_grad/add_1"
input: "gradients/Svd_18_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_18_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_18_grad/add_3"
input: "gradients/Svd_18_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_18_grad/MatMul_5"
op: "MatMul"
input: "Svd_18:1"
input: "gradients/Svd_18_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/AddN_43"
op: "AddN"
input: "gradients/cond_19/Switch_2_grad/cond_grad"
input: "gradients/cond_19/mul_1/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/cond_19/Switch_2_grad/cond_grad"
    }
  }
}
, name: "gradients/zeros_like_19"
op: "ZerosLike"
input: "Svd_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/MatrixDiag"
op: "MatrixDiag"
input: "gradients/zeros_like_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/MatrixDiag_1"
op: "MatrixDiag"
input: "Svd_19"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/Square"
op: "Square"
input: "Svd_19"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/ExpandDims/dim"
op: "Const"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -2
    }
  }
}
, name: "gradients/Svd_19_grad/ExpandDims"
op: "ExpandDims"
input: "gradients/Svd_19_grad/Square"
input: "gradients/Svd_19_grad/ExpandDims/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_19_grad/ExpandDims_1/dim"
op: "Const"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/Svd_19_grad/ExpandDims_1"
op: "ExpandDims"
input: "gradients/Svd_19_grad/Square"
input: "gradients/Svd_19_grad/ExpandDims_1/dim"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tdim"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_19_grad/sub"
op: "Sub"
input: "gradients/Svd_19_grad/ExpandDims"
input: "gradients/Svd_19_grad/ExpandDims_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/Reciprocal"
op: "Reciprocal"
input: "gradients/Svd_19_grad/sub"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/zeros_like"
op: "Const"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/Svd_19_grad/MatrixSetDiag"
op: "MatrixSetDiag"
input: "gradients/Svd_19_grad/Reciprocal"
input: "gradients/Svd_19_grad/zeros_like"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/Reciprocal_1"
op: "Reciprocal"
input: "Svd_19"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/MatrixDiag_2"
op: "MatrixDiag"
input: "gradients/Svd_19_grad/Reciprocal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/strided_slice/stack"
op: "Const"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_19_grad/strided_slice/stack_1"
op: "Const"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_19_grad/strided_slice/stack_2"
op: "Const"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_19_grad/strided_slice"
op: "StridedSlice"
input: "Svd_19:2"
input: "gradients/Svd_19_grad/strided_slice/stack"
input: "gradients/Svd_19_grad/strided_slice/stack_1"
input: "gradients/Svd_19_grad/strided_slice/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_19_grad/strided_slice_1/stack"
op: "Const"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_19_grad/strided_slice_1/stack_1"
op: "Const"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\000\000\000\000\000\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Svd_19_grad/strided_slice_1/stack_2"
op: "Const"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Svd_19_grad/strided_slice_1"
op: "StridedSlice"
input: "gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "gradients/Svd_19_grad/strided_slice_1/stack"
input: "gradients/Svd_19_grad/strided_slice_1/stack_1"
input: "gradients/Svd_19_grad/strided_slice_1/stack_2"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 6
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 1
  }
}
attr {
  key: "end_mask"
  value {
    i: 2
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 0
  }
}
, name: "gradients/Svd_19_grad/MatMul"
op: "MatMul"
input: "Svd_19:1"
input: "gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_19_grad/MatMul_1"
op: "MatMul"
input: "gradients/Svd_19_grad/strided_slice"
input: "gradients/Svd_19_grad/strided_slice_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_19_grad/mul"
op: "Mul"
input: "gradients/Svd_19_grad/MatrixSetDiag"
input: "gradients/Svd_19_grad/MatMul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/mul_1"
op: "Mul"
input: "gradients/Svd_19_grad/MatrixSetDiag"
input: "gradients/Svd_19_grad/MatMul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/adjoint/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_19_grad/adjoint/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_19_grad/mul"
input: "gradients/Svd_19_grad/adjoint/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_19_grad/add"
op: "Add"
input: "gradients/Svd_19_grad/mul"
input: "gradients/Svd_19_grad/adjoint/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/MatMul_2"
op: "MatMul"
input: "gradients/Svd_19_grad/add"
input: "gradients/Svd_19_grad/MatrixDiag_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_19_grad/add_1"
op: "Add"
input: "gradients/Svd_19_grad/MatrixDiag"
input: "gradients/Svd_19_grad/MatMul_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/adjoint_1/matrix_transpose/transpose/perm"
op: "Const"
input: "^gradients/AddN_43"
input: "^gradients/adjoint_19/matrix_transpose/transpose_grad/transpose"
input: "^gradients/zeros_like_19"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\000\000\000\000"
    }
  }
}
, name: "gradients/Svd_19_grad/adjoint_1/matrix_transpose/transpose"
op: "Transpose"
input: "gradients/Svd_19_grad/mul_1"
input: "gradients/Svd_19_grad/adjoint_1/matrix_transpose/transpose/perm"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Svd_19_grad/add_2"
op: "Add"
input: "gradients/Svd_19_grad/mul_1"
input: "gradients/Svd_19_grad/adjoint_1/matrix_transpose/transpose"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/MatMul_3"
op: "MatMul"
input: "gradients/Svd_19_grad/MatrixDiag_1"
input: "gradients/Svd_19_grad/add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/Svd_19_grad/add_3"
op: "Add"
input: "gradients/Svd_19_grad/add_1"
input: "gradients/Svd_19_grad/MatMul_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Svd_19_grad/MatMul_4"
op: "MatMul"
input: "gradients/Svd_19_grad/add_3"
input: "gradients/Svd_19_grad/strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/Svd_19_grad/MatMul_5"
op: "MatMul"
input: "Svd_19:1"
input: "gradients/Svd_19_grad/MatMul_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/g_nnpriorZ/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "gradients/g_nnpriorZ/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/g_nnpriorZ/Mul_grad/tuple/control_dependency"
input: "gradients/g_nnpriorZ/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/MatMul_19_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_grad/MatMul_5"
input: "add_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_19_grad/MatMul_1"
op: "MatMul"
input: "transpose_16"
input: "gradients/Svd_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_19_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_19_grad/MatMul"
input: "^gradients/MatMul_19_grad/MatMul_1"
, name: "gradients/MatMul_19_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_19_grad/MatMul"
input: "^gradients/MatMul_19_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_19_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_19_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_19_grad/MatMul_1"
input: "^gradients/MatMul_19_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_19_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_26_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_1_grad/MatMul_5"
input: "add_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_26_grad/MatMul_1"
op: "MatMul"
input: "transpose_17"
input: "gradients/Svd_1_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_26_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_26_grad/MatMul"
input: "^gradients/MatMul_26_grad/MatMul_1"
, name: "gradients/MatMul_26_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_26_grad/MatMul"
input: "^gradients/MatMul_26_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_26_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_26_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_26_grad/MatMul_1"
input: "^gradients/MatMul_26_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_26_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_33_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_2_grad/MatMul_5"
input: "add_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_33_grad/MatMul_1"
op: "MatMul"
input: "transpose_18"
input: "gradients/Svd_2_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_33_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_33_grad/MatMul"
input: "^gradients/MatMul_33_grad/MatMul_1"
, name: "gradients/MatMul_33_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_33_grad/MatMul"
input: "^gradients/MatMul_33_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_33_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_33_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_33_grad/MatMul_1"
input: "^gradients/MatMul_33_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_33_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_40_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_3_grad/MatMul_5"
input: "add_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_40_grad/MatMul_1"
op: "MatMul"
input: "transpose_19"
input: "gradients/Svd_3_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_40_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_40_grad/MatMul"
input: "^gradients/MatMul_40_grad/MatMul_1"
, name: "gradients/MatMul_40_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_40_grad/MatMul"
input: "^gradients/MatMul_40_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_40_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_40_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_40_grad/MatMul_1"
input: "^gradients/MatMul_40_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_40_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_47_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_4_grad/MatMul_5"
input: "add_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_47_grad/MatMul_1"
op: "MatMul"
input: "transpose_20"
input: "gradients/Svd_4_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_47_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_47_grad/MatMul"
input: "^gradients/MatMul_47_grad/MatMul_1"
, name: "gradients/MatMul_47_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_47_grad/MatMul"
input: "^gradients/MatMul_47_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_47_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_47_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_47_grad/MatMul_1"
input: "^gradients/MatMul_47_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_47_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_54_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_5_grad/MatMul_5"
input: "add_38"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_54_grad/MatMul_1"
op: "MatMul"
input: "transpose_21"
input: "gradients/Svd_5_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_54_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_54_grad/MatMul"
input: "^gradients/MatMul_54_grad/MatMul_1"
, name: "gradients/MatMul_54_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_54_grad/MatMul"
input: "^gradients/MatMul_54_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_54_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_54_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_54_grad/MatMul_1"
input: "^gradients/MatMul_54_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_54_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_61_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_6_grad/MatMul_5"
input: "add_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_61_grad/MatMul_1"
op: "MatMul"
input: "transpose_22"
input: "gradients/Svd_6_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_61_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_61_grad/MatMul"
input: "^gradients/MatMul_61_grad/MatMul_1"
, name: "gradients/MatMul_61_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_61_grad/MatMul"
input: "^gradients/MatMul_61_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_61_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_61_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_61_grad/MatMul_1"
input: "^gradients/MatMul_61_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_61_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_68_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_7_grad/MatMul_5"
input: "add_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_68_grad/MatMul_1"
op: "MatMul"
input: "transpose_23"
input: "gradients/Svd_7_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_68_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_68_grad/MatMul"
input: "^gradients/MatMul_68_grad/MatMul_1"
, name: "gradients/MatMul_68_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_68_grad/MatMul"
input: "^gradients/MatMul_68_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_68_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_68_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_68_grad/MatMul_1"
input: "^gradients/MatMul_68_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_68_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_75_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_8_grad/MatMul_5"
input: "add_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_75_grad/MatMul_1"
op: "MatMul"
input: "transpose_24"
input: "gradients/Svd_8_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_75_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_75_grad/MatMul"
input: "^gradients/MatMul_75_grad/MatMul_1"
, name: "gradients/MatMul_75_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_75_grad/MatMul"
input: "^gradients/MatMul_75_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_75_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_75_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_75_grad/MatMul_1"
input: "^gradients/MatMul_75_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_75_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_82_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_9_grad/MatMul_5"
input: "add_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_82_grad/MatMul_1"
op: "MatMul"
input: "transpose_25"
input: "gradients/Svd_9_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_82_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_82_grad/MatMul"
input: "^gradients/MatMul_82_grad/MatMul_1"
, name: "gradients/MatMul_82_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_82_grad/MatMul"
input: "^gradients/MatMul_82_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_82_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_82_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_82_grad/MatMul_1"
input: "^gradients/MatMul_82_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_82_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_89_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_10_grad/MatMul_5"
input: "add_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_89_grad/MatMul_1"
op: "MatMul"
input: "transpose_26"
input: "gradients/Svd_10_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_89_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_89_grad/MatMul"
input: "^gradients/MatMul_89_grad/MatMul_1"
, name: "gradients/MatMul_89_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_89_grad/MatMul"
input: "^gradients/MatMul_89_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_89_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_89_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_89_grad/MatMul_1"
input: "^gradients/MatMul_89_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_89_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_96_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_11_grad/MatMul_5"
input: "add_62"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_96_grad/MatMul_1"
op: "MatMul"
input: "transpose_27"
input: "gradients/Svd_11_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_96_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_96_grad/MatMul"
input: "^gradients/MatMul_96_grad/MatMul_1"
, name: "gradients/MatMul_96_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_96_grad/MatMul"
input: "^gradients/MatMul_96_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_96_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_96_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_96_grad/MatMul_1"
input: "^gradients/MatMul_96_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_96_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_103_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_12_grad/MatMul_5"
input: "add_66"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_103_grad/MatMul_1"
op: "MatMul"
input: "transpose_28"
input: "gradients/Svd_12_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_103_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_103_grad/MatMul"
input: "^gradients/MatMul_103_grad/MatMul_1"
, name: "gradients/MatMul_103_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_103_grad/MatMul"
input: "^gradients/MatMul_103_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_103_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_103_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_103_grad/MatMul_1"
input: "^gradients/MatMul_103_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_103_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_110_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_13_grad/MatMul_5"
input: "add_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_110_grad/MatMul_1"
op: "MatMul"
input: "transpose_29"
input: "gradients/Svd_13_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_110_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_110_grad/MatMul"
input: "^gradients/MatMul_110_grad/MatMul_1"
, name: "gradients/MatMul_110_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_110_grad/MatMul"
input: "^gradients/MatMul_110_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_110_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_110_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_110_grad/MatMul_1"
input: "^gradients/MatMul_110_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_110_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_117_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_14_grad/MatMul_5"
input: "add_74"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_117_grad/MatMul_1"
op: "MatMul"
input: "transpose_30"
input: "gradients/Svd_14_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_117_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_117_grad/MatMul"
input: "^gradients/MatMul_117_grad/MatMul_1"
, name: "gradients/MatMul_117_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_117_grad/MatMul"
input: "^gradients/MatMul_117_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_117_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_117_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_117_grad/MatMul_1"
input: "^gradients/MatMul_117_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_117_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_124_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_15_grad/MatMul_5"
input: "add_78"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_124_grad/MatMul_1"
op: "MatMul"
input: "transpose_31"
input: "gradients/Svd_15_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_124_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_124_grad/MatMul"
input: "^gradients/MatMul_124_grad/MatMul_1"
, name: "gradients/MatMul_124_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_124_grad/MatMul"
input: "^gradients/MatMul_124_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_124_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_124_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_124_grad/MatMul_1"
input: "^gradients/MatMul_124_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_124_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_131_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_16_grad/MatMul_5"
input: "add_82"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_131_grad/MatMul_1"
op: "MatMul"
input: "transpose_32"
input: "gradients/Svd_16_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_131_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_131_grad/MatMul"
input: "^gradients/MatMul_131_grad/MatMul_1"
, name: "gradients/MatMul_131_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_131_grad/MatMul"
input: "^gradients/MatMul_131_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_131_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_131_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_131_grad/MatMul_1"
input: "^gradients/MatMul_131_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_131_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_138_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_17_grad/MatMul_5"
input: "add_86"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_138_grad/MatMul_1"
op: "MatMul"
input: "transpose_33"
input: "gradients/Svd_17_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_138_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_138_grad/MatMul"
input: "^gradients/MatMul_138_grad/MatMul_1"
, name: "gradients/MatMul_138_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_138_grad/MatMul"
input: "^gradients/MatMul_138_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_138_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_138_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_138_grad/MatMul_1"
input: "^gradients/MatMul_138_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_138_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_145_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_18_grad/MatMul_5"
input: "add_90"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_145_grad/MatMul_1"
op: "MatMul"
input: "transpose_34"
input: "gradients/Svd_18_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_145_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_145_grad/MatMul"
input: "^gradients/MatMul_145_grad/MatMul_1"
, name: "gradients/MatMul_145_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_145_grad/MatMul"
input: "^gradients/MatMul_145_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_145_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_145_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_145_grad/MatMul_1"
input: "^gradients/MatMul_145_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_145_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_152_grad/MatMul"
op: "MatMul"
input: "gradients/Svd_19_grad/MatMul_5"
input: "add_94"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_152_grad/MatMul_1"
op: "MatMul"
input: "transpose_35"
input: "gradients/Svd_19_grad/MatMul_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_152_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_152_grad/MatMul"
input: "^gradients/MatMul_152_grad/MatMul_1"
, name: "gradients/MatMul_152_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_152_grad/MatMul"
input: "^gradients/MatMul_152_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_152_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_152_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_152_grad/MatMul_1"
input: "^gradients/MatMul_152_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_152_grad/MatMul_1"
    }
  }
}
, name: "gradients/g_nnpriorZ/dense_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/g_nnpriorZ/Reshape_1_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/g_nnpriorZ/dense_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpriorZ/Reshape_1_grad/Reshape"
input: "^gradients/g_nnpriorZ/dense_1/BiasAdd_grad/BiasAddGrad"
, name: "gradients/g_nnpriorZ/dense_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpriorZ/Reshape_1_grad/Reshape"
input: "^gradients/g_nnpriorZ/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/Reshape_1_grad/Reshape"
    }
  }
}
, name: "gradients/g_nnpriorZ/dense_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpriorZ/dense_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/g_nnpriorZ/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dense_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/AddN_44"
op: "AddN"
input: "gradients/sub_5_grad/tuple/control_dependency_1"
input: "gradients/sub_6_grad/tuple/control_dependency_1"
input: "gradients/MatMul_19_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_5_grad/Neg"
    }
  }
}
, name: "gradients/add_18_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_18_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_18_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_18_grad/Shape"
input: "gradients/add_18_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_18_grad/Sum"
op: "Sum"
input: "gradients/AddN_44"
input: "gradients/add_18_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_18_grad/Reshape"
op: "Reshape"
input: "gradients/add_18_grad/Sum"
input: "gradients/add_18_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_18_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_44"
input: "gradients/add_18_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_18_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_18_grad/Sum_1"
input: "gradients/add_18_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_18_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_18_grad/Reshape"
input: "^gradients/add_18_grad/Reshape_1"
, name: "gradients/add_18_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_18_grad/Reshape"
input: "^gradients/add_18_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_18_grad/Reshape"
    }
  }
}
, name: "gradients/add_18_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_18_grad/Reshape_1"
input: "^gradients/add_18_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_18_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_45"
op: "AddN"
input: "gradients/sub_9_grad/tuple/control_dependency_1"
input: "gradients/sub_10_grad/tuple/control_dependency_1"
input: "gradients/MatMul_26_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_9_grad/Neg"
    }
  }
}
, name: "gradients/add_22_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_22_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_22_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_22_grad/Shape"
input: "gradients/add_22_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_22_grad/Sum"
op: "Sum"
input: "gradients/AddN_45"
input: "gradients/add_22_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_22_grad/Reshape"
op: "Reshape"
input: "gradients/add_22_grad/Sum"
input: "gradients/add_22_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_22_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_45"
input: "gradients/add_22_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_22_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_22_grad/Sum_1"
input: "gradients/add_22_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_22_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_22_grad/Reshape"
input: "^gradients/add_22_grad/Reshape_1"
, name: "gradients/add_22_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_22_grad/Reshape"
input: "^gradients/add_22_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_22_grad/Reshape"
    }
  }
}
, name: "gradients/add_22_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_22_grad/Reshape_1"
input: "^gradients/add_22_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_22_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_46"
op: "AddN"
input: "gradients/sub_13_grad/tuple/control_dependency_1"
input: "gradients/sub_14_grad/tuple/control_dependency_1"
input: "gradients/MatMul_33_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_13_grad/Neg"
    }
  }
}
, name: "gradients/add_26_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_26_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_26_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_26_grad/Shape"
input: "gradients/add_26_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_26_grad/Sum"
op: "Sum"
input: "gradients/AddN_46"
input: "gradients/add_26_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_26_grad/Reshape"
op: "Reshape"
input: "gradients/add_26_grad/Sum"
input: "gradients/add_26_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_26_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_46"
input: "gradients/add_26_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_26_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_26_grad/Sum_1"
input: "gradients/add_26_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_26_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_26_grad/Reshape"
input: "^gradients/add_26_grad/Reshape_1"
, name: "gradients/add_26_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_26_grad/Reshape"
input: "^gradients/add_26_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_26_grad/Reshape"
    }
  }
}
, name: "gradients/add_26_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_26_grad/Reshape_1"
input: "^gradients/add_26_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_26_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_47"
op: "AddN"
input: "gradients/sub_17_grad/tuple/control_dependency_1"
input: "gradients/sub_18_grad/tuple/control_dependency_1"
input: "gradients/MatMul_40_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_17_grad/Neg"
    }
  }
}
, name: "gradients/add_30_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_30_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_30_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_30_grad/Shape"
input: "gradients/add_30_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_30_grad/Sum"
op: "Sum"
input: "gradients/AddN_47"
input: "gradients/add_30_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_30_grad/Reshape"
op: "Reshape"
input: "gradients/add_30_grad/Sum"
input: "gradients/add_30_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_30_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_47"
input: "gradients/add_30_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_30_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_30_grad/Sum_1"
input: "gradients/add_30_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_30_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_30_grad/Reshape"
input: "^gradients/add_30_grad/Reshape_1"
, name: "gradients/add_30_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_30_grad/Reshape"
input: "^gradients/add_30_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_30_grad/Reshape"
    }
  }
}
, name: "gradients/add_30_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_30_grad/Reshape_1"
input: "^gradients/add_30_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_30_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_48"
op: "AddN"
input: "gradients/sub_21_grad/tuple/control_dependency_1"
input: "gradients/sub_22_grad/tuple/control_dependency_1"
input: "gradients/MatMul_47_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_21_grad/Neg"
    }
  }
}
, name: "gradients/add_34_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_34_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_34_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_34_grad/Shape"
input: "gradients/add_34_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_34_grad/Sum"
op: "Sum"
input: "gradients/AddN_48"
input: "gradients/add_34_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_34_grad/Reshape"
op: "Reshape"
input: "gradients/add_34_grad/Sum"
input: "gradients/add_34_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_34_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_48"
input: "gradients/add_34_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_34_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_34_grad/Sum_1"
input: "gradients/add_34_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_34_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_34_grad/Reshape"
input: "^gradients/add_34_grad/Reshape_1"
, name: "gradients/add_34_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_34_grad/Reshape"
input: "^gradients/add_34_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_34_grad/Reshape"
    }
  }
}
, name: "gradients/add_34_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_34_grad/Reshape_1"
input: "^gradients/add_34_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_34_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_49"
op: "AddN"
input: "gradients/sub_25_grad/tuple/control_dependency_1"
input: "gradients/sub_26_grad/tuple/control_dependency_1"
input: "gradients/MatMul_54_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_25_grad/Neg"
    }
  }
}
, name: "gradients/add_38_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_38_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_38_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_38_grad/Shape"
input: "gradients/add_38_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_38_grad/Sum"
op: "Sum"
input: "gradients/AddN_49"
input: "gradients/add_38_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_38_grad/Reshape"
op: "Reshape"
input: "gradients/add_38_grad/Sum"
input: "gradients/add_38_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_38_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_49"
input: "gradients/add_38_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_38_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_38_grad/Sum_1"
input: "gradients/add_38_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_38_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_38_grad/Reshape"
input: "^gradients/add_38_grad/Reshape_1"
, name: "gradients/add_38_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_38_grad/Reshape"
input: "^gradients/add_38_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_38_grad/Reshape"
    }
  }
}
, name: "gradients/add_38_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_38_grad/Reshape_1"
input: "^gradients/add_38_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_38_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_50"
op: "AddN"
input: "gradients/sub_29_grad/tuple/control_dependency_1"
input: "gradients/sub_30_grad/tuple/control_dependency_1"
input: "gradients/MatMul_61_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_29_grad/Neg"
    }
  }
}
, name: "gradients/add_42_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_42_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_42_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_42_grad/Shape"
input: "gradients/add_42_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_42_grad/Sum"
op: "Sum"
input: "gradients/AddN_50"
input: "gradients/add_42_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_42_grad/Reshape"
op: "Reshape"
input: "gradients/add_42_grad/Sum"
input: "gradients/add_42_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_42_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_50"
input: "gradients/add_42_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_42_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_42_grad/Sum_1"
input: "gradients/add_42_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_42_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_42_grad/Reshape"
input: "^gradients/add_42_grad/Reshape_1"
, name: "gradients/add_42_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_42_grad/Reshape"
input: "^gradients/add_42_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_42_grad/Reshape"
    }
  }
}
, name: "gradients/add_42_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_42_grad/Reshape_1"
input: "^gradients/add_42_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_42_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_51"
op: "AddN"
input: "gradients/sub_33_grad/tuple/control_dependency_1"
input: "gradients/sub_34_grad/tuple/control_dependency_1"
input: "gradients/MatMul_68_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_33_grad/Neg"
    }
  }
}
, name: "gradients/add_46_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_46_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_46_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_46_grad/Shape"
input: "gradients/add_46_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_46_grad/Sum"
op: "Sum"
input: "gradients/AddN_51"
input: "gradients/add_46_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_46_grad/Reshape"
op: "Reshape"
input: "gradients/add_46_grad/Sum"
input: "gradients/add_46_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_46_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_51"
input: "gradients/add_46_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_46_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_46_grad/Sum_1"
input: "gradients/add_46_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_46_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_46_grad/Reshape"
input: "^gradients/add_46_grad/Reshape_1"
, name: "gradients/add_46_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_46_grad/Reshape"
input: "^gradients/add_46_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_46_grad/Reshape"
    }
  }
}
, name: "gradients/add_46_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_46_grad/Reshape_1"
input: "^gradients/add_46_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_46_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_52"
op: "AddN"
input: "gradients/sub_37_grad/tuple/control_dependency_1"
input: "gradients/sub_38_grad/tuple/control_dependency_1"
input: "gradients/MatMul_75_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_37_grad/Neg"
    }
  }
}
, name: "gradients/add_50_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_50_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_50_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_50_grad/Shape"
input: "gradients/add_50_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_50_grad/Sum"
op: "Sum"
input: "gradients/AddN_52"
input: "gradients/add_50_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_50_grad/Reshape"
op: "Reshape"
input: "gradients/add_50_grad/Sum"
input: "gradients/add_50_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_50_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_52"
input: "gradients/add_50_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_50_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_50_grad/Sum_1"
input: "gradients/add_50_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_50_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_50_grad/Reshape"
input: "^gradients/add_50_grad/Reshape_1"
, name: "gradients/add_50_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_50_grad/Reshape"
input: "^gradients/add_50_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_50_grad/Reshape"
    }
  }
}
, name: "gradients/add_50_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_50_grad/Reshape_1"
input: "^gradients/add_50_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_50_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_53"
op: "AddN"
input: "gradients/sub_41_grad/tuple/control_dependency_1"
input: "gradients/sub_42_grad/tuple/control_dependency_1"
input: "gradients/MatMul_82_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_41_grad/Neg"
    }
  }
}
, name: "gradients/add_54_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_54_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_54_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_54_grad/Shape"
input: "gradients/add_54_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_54_grad/Sum"
op: "Sum"
input: "gradients/AddN_53"
input: "gradients/add_54_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_54_grad/Reshape"
op: "Reshape"
input: "gradients/add_54_grad/Sum"
input: "gradients/add_54_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_54_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_53"
input: "gradients/add_54_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_54_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_54_grad/Sum_1"
input: "gradients/add_54_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_54_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_54_grad/Reshape"
input: "^gradients/add_54_grad/Reshape_1"
, name: "gradients/add_54_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_54_grad/Reshape"
input: "^gradients/add_54_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_54_grad/Reshape"
    }
  }
}
, name: "gradients/add_54_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_54_grad/Reshape_1"
input: "^gradients/add_54_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_54_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_54"
op: "AddN"
input: "gradients/sub_45_grad/tuple/control_dependency_1"
input: "gradients/sub_46_grad/tuple/control_dependency_1"
input: "gradients/MatMul_89_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_45_grad/Neg"
    }
  }
}
, name: "gradients/add_58_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_58_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_58_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_58_grad/Shape"
input: "gradients/add_58_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_58_grad/Sum"
op: "Sum"
input: "gradients/AddN_54"
input: "gradients/add_58_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_58_grad/Reshape"
op: "Reshape"
input: "gradients/add_58_grad/Sum"
input: "gradients/add_58_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_58_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_54"
input: "gradients/add_58_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_58_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_58_grad/Sum_1"
input: "gradients/add_58_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_58_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_58_grad/Reshape"
input: "^gradients/add_58_grad/Reshape_1"
, name: "gradients/add_58_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_58_grad/Reshape"
input: "^gradients/add_58_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_58_grad/Reshape"
    }
  }
}
, name: "gradients/add_58_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_58_grad/Reshape_1"
input: "^gradients/add_58_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_58_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_55"
op: "AddN"
input: "gradients/sub_49_grad/tuple/control_dependency_1"
input: "gradients/sub_50_grad/tuple/control_dependency_1"
input: "gradients/MatMul_96_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_49_grad/Neg"
    }
  }
}
, name: "gradients/add_62_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_62_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_62_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_62_grad/Shape"
input: "gradients/add_62_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_62_grad/Sum"
op: "Sum"
input: "gradients/AddN_55"
input: "gradients/add_62_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_62_grad/Reshape"
op: "Reshape"
input: "gradients/add_62_grad/Sum"
input: "gradients/add_62_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_62_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_55"
input: "gradients/add_62_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_62_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_62_grad/Sum_1"
input: "gradients/add_62_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_62_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_62_grad/Reshape"
input: "^gradients/add_62_grad/Reshape_1"
, name: "gradients/add_62_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_62_grad/Reshape"
input: "^gradients/add_62_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_62_grad/Reshape"
    }
  }
}
, name: "gradients/add_62_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_62_grad/Reshape_1"
input: "^gradients/add_62_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_62_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_56"
op: "AddN"
input: "gradients/sub_53_grad/tuple/control_dependency_1"
input: "gradients/sub_54_grad/tuple/control_dependency_1"
input: "gradients/MatMul_103_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_53_grad/Neg"
    }
  }
}
, name: "gradients/add_66_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_66_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_66_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_66_grad/Shape"
input: "gradients/add_66_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_66_grad/Sum"
op: "Sum"
input: "gradients/AddN_56"
input: "gradients/add_66_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_66_grad/Reshape"
op: "Reshape"
input: "gradients/add_66_grad/Sum"
input: "gradients/add_66_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_66_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_56"
input: "gradients/add_66_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_66_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_66_grad/Sum_1"
input: "gradients/add_66_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_66_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_66_grad/Reshape"
input: "^gradients/add_66_grad/Reshape_1"
, name: "gradients/add_66_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_66_grad/Reshape"
input: "^gradients/add_66_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_66_grad/Reshape"
    }
  }
}
, name: "gradients/add_66_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_66_grad/Reshape_1"
input: "^gradients/add_66_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_66_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_57"
op: "AddN"
input: "gradients/sub_57_grad/tuple/control_dependency_1"
input: "gradients/sub_58_grad/tuple/control_dependency_1"
input: "gradients/MatMul_110_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_57_grad/Neg"
    }
  }
}
, name: "gradients/add_70_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_70_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_70_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_70_grad/Shape"
input: "gradients/add_70_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_70_grad/Sum"
op: "Sum"
input: "gradients/AddN_57"
input: "gradients/add_70_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_70_grad/Reshape"
op: "Reshape"
input: "gradients/add_70_grad/Sum"
input: "gradients/add_70_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_70_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_57"
input: "gradients/add_70_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_70_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_70_grad/Sum_1"
input: "gradients/add_70_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_70_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_70_grad/Reshape"
input: "^gradients/add_70_grad/Reshape_1"
, name: "gradients/add_70_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_70_grad/Reshape"
input: "^gradients/add_70_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_70_grad/Reshape"
    }
  }
}
, name: "gradients/add_70_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_70_grad/Reshape_1"
input: "^gradients/add_70_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_70_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_58"
op: "AddN"
input: "gradients/sub_61_grad/tuple/control_dependency_1"
input: "gradients/sub_62_grad/tuple/control_dependency_1"
input: "gradients/MatMul_117_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_61_grad/Neg"
    }
  }
}
, name: "gradients/add_74_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_74_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_74_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_74_grad/Shape"
input: "gradients/add_74_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_74_grad/Sum"
op: "Sum"
input: "gradients/AddN_58"
input: "gradients/add_74_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_74_grad/Reshape"
op: "Reshape"
input: "gradients/add_74_grad/Sum"
input: "gradients/add_74_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_74_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_58"
input: "gradients/add_74_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_74_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_74_grad/Sum_1"
input: "gradients/add_74_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_74_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_74_grad/Reshape"
input: "^gradients/add_74_grad/Reshape_1"
, name: "gradients/add_74_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_74_grad/Reshape"
input: "^gradients/add_74_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_74_grad/Reshape"
    }
  }
}
, name: "gradients/add_74_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_74_grad/Reshape_1"
input: "^gradients/add_74_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_74_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_59"
op: "AddN"
input: "gradients/sub_65_grad/tuple/control_dependency_1"
input: "gradients/sub_66_grad/tuple/control_dependency_1"
input: "gradients/MatMul_124_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_65_grad/Neg"
    }
  }
}
, name: "gradients/add_78_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_78_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_78_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_78_grad/Shape"
input: "gradients/add_78_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_78_grad/Sum"
op: "Sum"
input: "gradients/AddN_59"
input: "gradients/add_78_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_78_grad/Reshape"
op: "Reshape"
input: "gradients/add_78_grad/Sum"
input: "gradients/add_78_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_78_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_59"
input: "gradients/add_78_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_78_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_78_grad/Sum_1"
input: "gradients/add_78_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_78_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_78_grad/Reshape"
input: "^gradients/add_78_grad/Reshape_1"
, name: "gradients/add_78_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_78_grad/Reshape"
input: "^gradients/add_78_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_78_grad/Reshape"
    }
  }
}
, name: "gradients/add_78_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_78_grad/Reshape_1"
input: "^gradients/add_78_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_78_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_60"
op: "AddN"
input: "gradients/sub_69_grad/tuple/control_dependency_1"
input: "gradients/sub_70_grad/tuple/control_dependency_1"
input: "gradients/MatMul_131_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_69_grad/Neg"
    }
  }
}
, name: "gradients/add_82_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_82_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_82_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_82_grad/Shape"
input: "gradients/add_82_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_82_grad/Sum"
op: "Sum"
input: "gradients/AddN_60"
input: "gradients/add_82_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_82_grad/Reshape"
op: "Reshape"
input: "gradients/add_82_grad/Sum"
input: "gradients/add_82_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_82_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_60"
input: "gradients/add_82_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_82_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_82_grad/Sum_1"
input: "gradients/add_82_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_82_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_82_grad/Reshape"
input: "^gradients/add_82_grad/Reshape_1"
, name: "gradients/add_82_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_82_grad/Reshape"
input: "^gradients/add_82_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_82_grad/Reshape"
    }
  }
}
, name: "gradients/add_82_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_82_grad/Reshape_1"
input: "^gradients/add_82_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_82_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_61"
op: "AddN"
input: "gradients/sub_73_grad/tuple/control_dependency_1"
input: "gradients/sub_74_grad/tuple/control_dependency_1"
input: "gradients/MatMul_138_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_73_grad/Neg"
    }
  }
}
, name: "gradients/add_86_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_86_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_86_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_86_grad/Shape"
input: "gradients/add_86_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_86_grad/Sum"
op: "Sum"
input: "gradients/AddN_61"
input: "gradients/add_86_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_86_grad/Reshape"
op: "Reshape"
input: "gradients/add_86_grad/Sum"
input: "gradients/add_86_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_86_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_61"
input: "gradients/add_86_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_86_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_86_grad/Sum_1"
input: "gradients/add_86_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_86_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_86_grad/Reshape"
input: "^gradients/add_86_grad/Reshape_1"
, name: "gradients/add_86_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_86_grad/Reshape"
input: "^gradients/add_86_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_86_grad/Reshape"
    }
  }
}
, name: "gradients/add_86_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_86_grad/Reshape_1"
input: "^gradients/add_86_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_86_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_62"
op: "AddN"
input: "gradients/sub_77_grad/tuple/control_dependency_1"
input: "gradients/sub_78_grad/tuple/control_dependency_1"
input: "gradients/MatMul_145_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_77_grad/Neg"
    }
  }
}
, name: "gradients/add_90_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_90_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_90_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_90_grad/Shape"
input: "gradients/add_90_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_90_grad/Sum"
op: "Sum"
input: "gradients/AddN_62"
input: "gradients/add_90_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_90_grad/Reshape"
op: "Reshape"
input: "gradients/add_90_grad/Sum"
input: "gradients/add_90_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_90_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_62"
input: "gradients/add_90_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_90_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_90_grad/Sum_1"
input: "gradients/add_90_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_90_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_90_grad/Reshape"
input: "^gradients/add_90_grad/Reshape_1"
, name: "gradients/add_90_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_90_grad/Reshape"
input: "^gradients/add_90_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_90_grad/Reshape"
    }
  }
}
, name: "gradients/add_90_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_90_grad/Reshape_1"
input: "^gradients/add_90_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_90_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_63"
op: "AddN"
input: "gradients/sub_81_grad/tuple/control_dependency_1"
input: "gradients/sub_82_grad/tuple/control_dependency_1"
input: "gradients/MatMul_152_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_81_grad/Neg"
    }
  }
}
, name: "gradients/add_94_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_94_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_94_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_94_grad/Shape"
input: "gradients/add_94_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_94_grad/Sum"
op: "Sum"
input: "gradients/AddN_63"
input: "gradients/add_94_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_94_grad/Reshape"
op: "Reshape"
input: "gradients/add_94_grad/Sum"
input: "gradients/add_94_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_94_grad/Sum_1"
op: "Sum"
input: "gradients/AddN_63"
input: "gradients/add_94_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_94_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_94_grad/Sum_1"
input: "gradients/add_94_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_94_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_94_grad/Reshape"
input: "^gradients/add_94_grad/Reshape_1"
, name: "gradients/add_94_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_94_grad/Reshape"
input: "^gradients/add_94_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_94_grad/Reshape"
    }
  }
}
, name: "gradients/add_94_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_94_grad/Reshape_1"
input: "^gradients/add_94_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_94_grad/Reshape_1"
    }
  }
}
, name: "gradients/g_nnpriorZ/dense_1/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/g_nnpriorZ/dense_1/BiasAdd_grad/tuple/control_dependency"
input: "g_nnpriorZ/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/g_nnpriorZ/dense_1/MatMul_grad/MatMul_1"
op: "MatMul"
input: "g_nnpriorZ/dropout_1/cond/Merge"
input: "gradients/g_nnpriorZ/dense_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/g_nnpriorZ/dense_1/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpriorZ/dense_1/MatMul_grad/MatMul"
input: "^gradients/g_nnpriorZ/dense_1/MatMul_grad/MatMul_1"
, name: "gradients/g_nnpriorZ/dense_1/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpriorZ/dense_1/MatMul_grad/MatMul"
input: "^gradients/g_nnpriorZ/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpriorZ/dense_1/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpriorZ/dense_1/MatMul_grad/MatMul_1"
input: "^gradients/g_nnpriorZ/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dense_1/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_18_grad/MatMul"
op: "MatMul"
input: "gradients/add_18_grad/tuple/control_dependency"
input: "sub_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_18_grad/MatMul_1"
op: "MatMul"
input: "Diag_2"
input: "gradients/add_18_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_18_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_18_grad/MatMul"
input: "^gradients/MatMul_18_grad/MatMul_1"
, name: "gradients/MatMul_18_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_18_grad/MatMul"
input: "^gradients/MatMul_18_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_18_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_18_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_18_grad/MatMul_1"
input: "^gradients/MatMul_18_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_18_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_25_grad/MatMul"
op: "MatMul"
input: "gradients/add_22_grad/tuple/control_dependency"
input: "sub_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_25_grad/MatMul_1"
op: "MatMul"
input: "Diag_5"
input: "gradients/add_22_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_25_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_25_grad/MatMul"
input: "^gradients/MatMul_25_grad/MatMul_1"
, name: "gradients/MatMul_25_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_25_grad/MatMul"
input: "^gradients/MatMul_25_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_25_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_25_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_25_grad/MatMul_1"
input: "^gradients/MatMul_25_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_25_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_32_grad/MatMul"
op: "MatMul"
input: "gradients/add_26_grad/tuple/control_dependency"
input: "sub_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_32_grad/MatMul_1"
op: "MatMul"
input: "Diag_8"
input: "gradients/add_26_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_32_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_32_grad/MatMul"
input: "^gradients/MatMul_32_grad/MatMul_1"
, name: "gradients/MatMul_32_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_32_grad/MatMul"
input: "^gradients/MatMul_32_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_32_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_32_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_32_grad/MatMul_1"
input: "^gradients/MatMul_32_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_32_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_39_grad/MatMul"
op: "MatMul"
input: "gradients/add_30_grad/tuple/control_dependency"
input: "sub_16"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_39_grad/MatMul_1"
op: "MatMul"
input: "Diag_11"
input: "gradients/add_30_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_39_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_39_grad/MatMul"
input: "^gradients/MatMul_39_grad/MatMul_1"
, name: "gradients/MatMul_39_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_39_grad/MatMul"
input: "^gradients/MatMul_39_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_39_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_39_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_39_grad/MatMul_1"
input: "^gradients/MatMul_39_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_39_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_46_grad/MatMul"
op: "MatMul"
input: "gradients/add_34_grad/tuple/control_dependency"
input: "sub_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_46_grad/MatMul_1"
op: "MatMul"
input: "Diag_14"
input: "gradients/add_34_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_46_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_46_grad/MatMul"
input: "^gradients/MatMul_46_grad/MatMul_1"
, name: "gradients/MatMul_46_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_46_grad/MatMul"
input: "^gradients/MatMul_46_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_46_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_46_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_46_grad/MatMul_1"
input: "^gradients/MatMul_46_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_46_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_53_grad/MatMul"
op: "MatMul"
input: "gradients/add_38_grad/tuple/control_dependency"
input: "sub_24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_53_grad/MatMul_1"
op: "MatMul"
input: "Diag_17"
input: "gradients/add_38_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_53_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_53_grad/MatMul"
input: "^gradients/MatMul_53_grad/MatMul_1"
, name: "gradients/MatMul_53_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_53_grad/MatMul"
input: "^gradients/MatMul_53_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_53_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_53_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_53_grad/MatMul_1"
input: "^gradients/MatMul_53_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_53_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_60_grad/MatMul"
op: "MatMul"
input: "gradients/add_42_grad/tuple/control_dependency"
input: "sub_28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_60_grad/MatMul_1"
op: "MatMul"
input: "Diag_20"
input: "gradients/add_42_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_60_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_60_grad/MatMul"
input: "^gradients/MatMul_60_grad/MatMul_1"
, name: "gradients/MatMul_60_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_60_grad/MatMul"
input: "^gradients/MatMul_60_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_60_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_60_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_60_grad/MatMul_1"
input: "^gradients/MatMul_60_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_60_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_67_grad/MatMul"
op: "MatMul"
input: "gradients/add_46_grad/tuple/control_dependency"
input: "sub_32"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_67_grad/MatMul_1"
op: "MatMul"
input: "Diag_23"
input: "gradients/add_46_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_67_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_67_grad/MatMul"
input: "^gradients/MatMul_67_grad/MatMul_1"
, name: "gradients/MatMul_67_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_67_grad/MatMul"
input: "^gradients/MatMul_67_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_67_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_67_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_67_grad/MatMul_1"
input: "^gradients/MatMul_67_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_67_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_74_grad/MatMul"
op: "MatMul"
input: "gradients/add_50_grad/tuple/control_dependency"
input: "sub_36"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_74_grad/MatMul_1"
op: "MatMul"
input: "Diag_26"
input: "gradients/add_50_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_74_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_74_grad/MatMul"
input: "^gradients/MatMul_74_grad/MatMul_1"
, name: "gradients/MatMul_74_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_74_grad/MatMul"
input: "^gradients/MatMul_74_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_74_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_74_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_74_grad/MatMul_1"
input: "^gradients/MatMul_74_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_74_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_81_grad/MatMul"
op: "MatMul"
input: "gradients/add_54_grad/tuple/control_dependency"
input: "sub_40"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_81_grad/MatMul_1"
op: "MatMul"
input: "Diag_29"
input: "gradients/add_54_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_81_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_81_grad/MatMul"
input: "^gradients/MatMul_81_grad/MatMul_1"
, name: "gradients/MatMul_81_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_81_grad/MatMul"
input: "^gradients/MatMul_81_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_81_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_81_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_81_grad/MatMul_1"
input: "^gradients/MatMul_81_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_81_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_88_grad/MatMul"
op: "MatMul"
input: "gradients/add_58_grad/tuple/control_dependency"
input: "sub_44"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_88_grad/MatMul_1"
op: "MatMul"
input: "Diag_32"
input: "gradients/add_58_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_88_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_88_grad/MatMul"
input: "^gradients/MatMul_88_grad/MatMul_1"
, name: "gradients/MatMul_88_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_88_grad/MatMul"
input: "^gradients/MatMul_88_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_88_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_88_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_88_grad/MatMul_1"
input: "^gradients/MatMul_88_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_88_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_95_grad/MatMul"
op: "MatMul"
input: "gradients/add_62_grad/tuple/control_dependency"
input: "sub_48"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_95_grad/MatMul_1"
op: "MatMul"
input: "Diag_35"
input: "gradients/add_62_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_95_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_95_grad/MatMul"
input: "^gradients/MatMul_95_grad/MatMul_1"
, name: "gradients/MatMul_95_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_95_grad/MatMul"
input: "^gradients/MatMul_95_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_95_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_95_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_95_grad/MatMul_1"
input: "^gradients/MatMul_95_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_95_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_102_grad/MatMul"
op: "MatMul"
input: "gradients/add_66_grad/tuple/control_dependency"
input: "sub_52"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_102_grad/MatMul_1"
op: "MatMul"
input: "Diag_38"
input: "gradients/add_66_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_102_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_102_grad/MatMul"
input: "^gradients/MatMul_102_grad/MatMul_1"
, name: "gradients/MatMul_102_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_102_grad/MatMul"
input: "^gradients/MatMul_102_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_102_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_102_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_102_grad/MatMul_1"
input: "^gradients/MatMul_102_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_102_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_109_grad/MatMul"
op: "MatMul"
input: "gradients/add_70_grad/tuple/control_dependency"
input: "sub_56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_109_grad/MatMul_1"
op: "MatMul"
input: "Diag_41"
input: "gradients/add_70_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_109_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_109_grad/MatMul"
input: "^gradients/MatMul_109_grad/MatMul_1"
, name: "gradients/MatMul_109_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_109_grad/MatMul"
input: "^gradients/MatMul_109_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_109_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_109_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_109_grad/MatMul_1"
input: "^gradients/MatMul_109_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_109_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_116_grad/MatMul"
op: "MatMul"
input: "gradients/add_74_grad/tuple/control_dependency"
input: "sub_60"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_116_grad/MatMul_1"
op: "MatMul"
input: "Diag_44"
input: "gradients/add_74_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_116_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_116_grad/MatMul"
input: "^gradients/MatMul_116_grad/MatMul_1"
, name: "gradients/MatMul_116_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_116_grad/MatMul"
input: "^gradients/MatMul_116_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_116_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_116_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_116_grad/MatMul_1"
input: "^gradients/MatMul_116_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_116_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_123_grad/MatMul"
op: "MatMul"
input: "gradients/add_78_grad/tuple/control_dependency"
input: "sub_64"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_123_grad/MatMul_1"
op: "MatMul"
input: "Diag_47"
input: "gradients/add_78_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_123_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_123_grad/MatMul"
input: "^gradients/MatMul_123_grad/MatMul_1"
, name: "gradients/MatMul_123_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_123_grad/MatMul"
input: "^gradients/MatMul_123_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_123_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_123_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_123_grad/MatMul_1"
input: "^gradients/MatMul_123_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_123_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_130_grad/MatMul"
op: "MatMul"
input: "gradients/add_82_grad/tuple/control_dependency"
input: "sub_68"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_130_grad/MatMul_1"
op: "MatMul"
input: "Diag_50"
input: "gradients/add_82_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_130_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_130_grad/MatMul"
input: "^gradients/MatMul_130_grad/MatMul_1"
, name: "gradients/MatMul_130_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_130_grad/MatMul"
input: "^gradients/MatMul_130_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_130_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_130_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_130_grad/MatMul_1"
input: "^gradients/MatMul_130_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_130_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_137_grad/MatMul"
op: "MatMul"
input: "gradients/add_86_grad/tuple/control_dependency"
input: "sub_72"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_137_grad/MatMul_1"
op: "MatMul"
input: "Diag_53"
input: "gradients/add_86_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_137_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_137_grad/MatMul"
input: "^gradients/MatMul_137_grad/MatMul_1"
, name: "gradients/MatMul_137_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_137_grad/MatMul"
input: "^gradients/MatMul_137_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_137_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_137_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_137_grad/MatMul_1"
input: "^gradients/MatMul_137_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_137_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_144_grad/MatMul"
op: "MatMul"
input: "gradients/add_90_grad/tuple/control_dependency"
input: "sub_76"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_144_grad/MatMul_1"
op: "MatMul"
input: "Diag_56"
input: "gradients/add_90_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_144_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_144_grad/MatMul"
input: "^gradients/MatMul_144_grad/MatMul_1"
, name: "gradients/MatMul_144_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_144_grad/MatMul"
input: "^gradients/MatMul_144_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_144_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_144_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_144_grad/MatMul_1"
input: "^gradients/MatMul_144_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_144_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_151_grad/MatMul"
op: "MatMul"
input: "gradients/add_94_grad/tuple/control_dependency"
input: "sub_80"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_151_grad/MatMul_1"
op: "MatMul"
input: "Diag_59"
input: "gradients/add_94_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_151_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_151_grad/MatMul"
input: "^gradients/MatMul_151_grad/MatMul_1"
, name: "gradients/MatMul_151_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_151_grad/MatMul"
input: "^gradients/MatMul_151_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_151_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_151_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_151_grad/MatMul_1"
input: "^gradients/MatMul_151_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_151_grad/MatMul_1"
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/Merge_grad/cond_grad"
op: "Switch"
input: "gradients/g_nnpriorZ/dense_1/MatMul_grad/tuple/control_dependency"
input: "g_nnpriorZ/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/Merge_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpriorZ/dropout_1/cond/Merge_grad/cond_grad"
, name: "gradients/g_nnpriorZ/dropout_1/cond/Merge_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpriorZ/dropout_1/cond/Merge_grad/cond_grad"
input: "^gradients/g_nnpriorZ/dropout_1/cond/Merge_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpriorZ/dropout_1/cond/Merge_grad/cond_grad:1"
input: "^gradients/g_nnpriorZ/dropout_1/cond/Merge_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/sub_4_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_4_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_4_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_4_grad/Shape"
input: "gradients/sub_4_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_4_grad/Sum"
op: "Sum"
input: "gradients/MatMul_18_grad/tuple/control_dependency_1"
input: "gradients/sub_4_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_4_grad/Reshape"
op: "Reshape"
input: "gradients/sub_4_grad/Sum"
input: "gradients/sub_4_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_4_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_18_grad/tuple/control_dependency_1"
input: "gradients/sub_4_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_4_grad/Neg"
op: "Neg"
input: "gradients/sub_4_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_4_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_4_grad/Neg"
input: "gradients/sub_4_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_4_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_4_grad/Reshape"
input: "^gradients/sub_4_grad/Reshape_1"
, name: "gradients/sub_4_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_4_grad/Reshape"
input: "^gradients/sub_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_4_grad/Reshape"
    }
  }
}
, name: "gradients/sub_4_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_4_grad/Reshape_1"
input: "^gradients/sub_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_4_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_8_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_8_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_8_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_8_grad/Shape"
input: "gradients/sub_8_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_8_grad/Sum"
op: "Sum"
input: "gradients/MatMul_25_grad/tuple/control_dependency_1"
input: "gradients/sub_8_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_8_grad/Reshape"
op: "Reshape"
input: "gradients/sub_8_grad/Sum"
input: "gradients/sub_8_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_8_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_25_grad/tuple/control_dependency_1"
input: "gradients/sub_8_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_8_grad/Neg"
op: "Neg"
input: "gradients/sub_8_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_8_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_8_grad/Neg"
input: "gradients/sub_8_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_8_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_8_grad/Reshape"
input: "^gradients/sub_8_grad/Reshape_1"
, name: "gradients/sub_8_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_8_grad/Reshape"
input: "^gradients/sub_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_8_grad/Reshape"
    }
  }
}
, name: "gradients/sub_8_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_8_grad/Reshape_1"
input: "^gradients/sub_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_8_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_12_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_12_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_12_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_12_grad/Shape"
input: "gradients/sub_12_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_12_grad/Sum"
op: "Sum"
input: "gradients/MatMul_32_grad/tuple/control_dependency_1"
input: "gradients/sub_12_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_12_grad/Reshape"
op: "Reshape"
input: "gradients/sub_12_grad/Sum"
input: "gradients/sub_12_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_12_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_32_grad/tuple/control_dependency_1"
input: "gradients/sub_12_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_12_grad/Neg"
op: "Neg"
input: "gradients/sub_12_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_12_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_12_grad/Neg"
input: "gradients/sub_12_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_12_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_12_grad/Reshape"
input: "^gradients/sub_12_grad/Reshape_1"
, name: "gradients/sub_12_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_12_grad/Reshape"
input: "^gradients/sub_12_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_12_grad/Reshape"
    }
  }
}
, name: "gradients/sub_12_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_12_grad/Reshape_1"
input: "^gradients/sub_12_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_12_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_16_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_16_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_16_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_16_grad/Shape"
input: "gradients/sub_16_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_16_grad/Sum"
op: "Sum"
input: "gradients/MatMul_39_grad/tuple/control_dependency_1"
input: "gradients/sub_16_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_16_grad/Reshape"
op: "Reshape"
input: "gradients/sub_16_grad/Sum"
input: "gradients/sub_16_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_16_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_39_grad/tuple/control_dependency_1"
input: "gradients/sub_16_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_16_grad/Neg"
op: "Neg"
input: "gradients/sub_16_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_16_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_16_grad/Neg"
input: "gradients/sub_16_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_16_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_16_grad/Reshape"
input: "^gradients/sub_16_grad/Reshape_1"
, name: "gradients/sub_16_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_16_grad/Reshape"
input: "^gradients/sub_16_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_16_grad/Reshape"
    }
  }
}
, name: "gradients/sub_16_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_16_grad/Reshape_1"
input: "^gradients/sub_16_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_16_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_20_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_20_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_20_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_20_grad/Shape"
input: "gradients/sub_20_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_20_grad/Sum"
op: "Sum"
input: "gradients/MatMul_46_grad/tuple/control_dependency_1"
input: "gradients/sub_20_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_20_grad/Reshape"
op: "Reshape"
input: "gradients/sub_20_grad/Sum"
input: "gradients/sub_20_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_20_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_46_grad/tuple/control_dependency_1"
input: "gradients/sub_20_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_20_grad/Neg"
op: "Neg"
input: "gradients/sub_20_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_20_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_20_grad/Neg"
input: "gradients/sub_20_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_20_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_20_grad/Reshape"
input: "^gradients/sub_20_grad/Reshape_1"
, name: "gradients/sub_20_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_20_grad/Reshape"
input: "^gradients/sub_20_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_20_grad/Reshape"
    }
  }
}
, name: "gradients/sub_20_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_20_grad/Reshape_1"
input: "^gradients/sub_20_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_20_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_24_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_24_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_24_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_24_grad/Shape"
input: "gradients/sub_24_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_24_grad/Sum"
op: "Sum"
input: "gradients/MatMul_53_grad/tuple/control_dependency_1"
input: "gradients/sub_24_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_24_grad/Reshape"
op: "Reshape"
input: "gradients/sub_24_grad/Sum"
input: "gradients/sub_24_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_24_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_53_grad/tuple/control_dependency_1"
input: "gradients/sub_24_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_24_grad/Neg"
op: "Neg"
input: "gradients/sub_24_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_24_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_24_grad/Neg"
input: "gradients/sub_24_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_24_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_24_grad/Reshape"
input: "^gradients/sub_24_grad/Reshape_1"
, name: "gradients/sub_24_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_24_grad/Reshape"
input: "^gradients/sub_24_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_24_grad/Reshape"
    }
  }
}
, name: "gradients/sub_24_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_24_grad/Reshape_1"
input: "^gradients/sub_24_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_24_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_28_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_28_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_28_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_28_grad/Shape"
input: "gradients/sub_28_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_28_grad/Sum"
op: "Sum"
input: "gradients/MatMul_60_grad/tuple/control_dependency_1"
input: "gradients/sub_28_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_28_grad/Reshape"
op: "Reshape"
input: "gradients/sub_28_grad/Sum"
input: "gradients/sub_28_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_28_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_60_grad/tuple/control_dependency_1"
input: "gradients/sub_28_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_28_grad/Neg"
op: "Neg"
input: "gradients/sub_28_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_28_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_28_grad/Neg"
input: "gradients/sub_28_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_28_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_28_grad/Reshape"
input: "^gradients/sub_28_grad/Reshape_1"
, name: "gradients/sub_28_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_28_grad/Reshape"
input: "^gradients/sub_28_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_28_grad/Reshape"
    }
  }
}
, name: "gradients/sub_28_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_28_grad/Reshape_1"
input: "^gradients/sub_28_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_28_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_32_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_32_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_32_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_32_grad/Shape"
input: "gradients/sub_32_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_32_grad/Sum"
op: "Sum"
input: "gradients/MatMul_67_grad/tuple/control_dependency_1"
input: "gradients/sub_32_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_32_grad/Reshape"
op: "Reshape"
input: "gradients/sub_32_grad/Sum"
input: "gradients/sub_32_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_32_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_67_grad/tuple/control_dependency_1"
input: "gradients/sub_32_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_32_grad/Neg"
op: "Neg"
input: "gradients/sub_32_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_32_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_32_grad/Neg"
input: "gradients/sub_32_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_32_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_32_grad/Reshape"
input: "^gradients/sub_32_grad/Reshape_1"
, name: "gradients/sub_32_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_32_grad/Reshape"
input: "^gradients/sub_32_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_32_grad/Reshape"
    }
  }
}
, name: "gradients/sub_32_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_32_grad/Reshape_1"
input: "^gradients/sub_32_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_32_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_36_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_36_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_36_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_36_grad/Shape"
input: "gradients/sub_36_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_36_grad/Sum"
op: "Sum"
input: "gradients/MatMul_74_grad/tuple/control_dependency_1"
input: "gradients/sub_36_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_36_grad/Reshape"
op: "Reshape"
input: "gradients/sub_36_grad/Sum"
input: "gradients/sub_36_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_36_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_74_grad/tuple/control_dependency_1"
input: "gradients/sub_36_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_36_grad/Neg"
op: "Neg"
input: "gradients/sub_36_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_36_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_36_grad/Neg"
input: "gradients/sub_36_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_36_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_36_grad/Reshape"
input: "^gradients/sub_36_grad/Reshape_1"
, name: "gradients/sub_36_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_36_grad/Reshape"
input: "^gradients/sub_36_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_36_grad/Reshape"
    }
  }
}
, name: "gradients/sub_36_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_36_grad/Reshape_1"
input: "^gradients/sub_36_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_36_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_40_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_40_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_40_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_40_grad/Shape"
input: "gradients/sub_40_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_40_grad/Sum"
op: "Sum"
input: "gradients/MatMul_81_grad/tuple/control_dependency_1"
input: "gradients/sub_40_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_40_grad/Reshape"
op: "Reshape"
input: "gradients/sub_40_grad/Sum"
input: "gradients/sub_40_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_40_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_81_grad/tuple/control_dependency_1"
input: "gradients/sub_40_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_40_grad/Neg"
op: "Neg"
input: "gradients/sub_40_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_40_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_40_grad/Neg"
input: "gradients/sub_40_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_40_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_40_grad/Reshape"
input: "^gradients/sub_40_grad/Reshape_1"
, name: "gradients/sub_40_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_40_grad/Reshape"
input: "^gradients/sub_40_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_40_grad/Reshape"
    }
  }
}
, name: "gradients/sub_40_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_40_grad/Reshape_1"
input: "^gradients/sub_40_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_40_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_44_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_44_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_44_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_44_grad/Shape"
input: "gradients/sub_44_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_44_grad/Sum"
op: "Sum"
input: "gradients/MatMul_88_grad/tuple/control_dependency_1"
input: "gradients/sub_44_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_44_grad/Reshape"
op: "Reshape"
input: "gradients/sub_44_grad/Sum"
input: "gradients/sub_44_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_44_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_88_grad/tuple/control_dependency_1"
input: "gradients/sub_44_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_44_grad/Neg"
op: "Neg"
input: "gradients/sub_44_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_44_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_44_grad/Neg"
input: "gradients/sub_44_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_44_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_44_grad/Reshape"
input: "^gradients/sub_44_grad/Reshape_1"
, name: "gradients/sub_44_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_44_grad/Reshape"
input: "^gradients/sub_44_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_44_grad/Reshape"
    }
  }
}
, name: "gradients/sub_44_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_44_grad/Reshape_1"
input: "^gradients/sub_44_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_44_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_48_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_48_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_48_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_48_grad/Shape"
input: "gradients/sub_48_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_48_grad/Sum"
op: "Sum"
input: "gradients/MatMul_95_grad/tuple/control_dependency_1"
input: "gradients/sub_48_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_48_grad/Reshape"
op: "Reshape"
input: "gradients/sub_48_grad/Sum"
input: "gradients/sub_48_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_48_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_95_grad/tuple/control_dependency_1"
input: "gradients/sub_48_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_48_grad/Neg"
op: "Neg"
input: "gradients/sub_48_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_48_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_48_grad/Neg"
input: "gradients/sub_48_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_48_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_48_grad/Reshape"
input: "^gradients/sub_48_grad/Reshape_1"
, name: "gradients/sub_48_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_48_grad/Reshape"
input: "^gradients/sub_48_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_48_grad/Reshape"
    }
  }
}
, name: "gradients/sub_48_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_48_grad/Reshape_1"
input: "^gradients/sub_48_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_48_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_52_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_52_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_52_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_52_grad/Shape"
input: "gradients/sub_52_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_52_grad/Sum"
op: "Sum"
input: "gradients/MatMul_102_grad/tuple/control_dependency_1"
input: "gradients/sub_52_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_52_grad/Reshape"
op: "Reshape"
input: "gradients/sub_52_grad/Sum"
input: "gradients/sub_52_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_52_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_102_grad/tuple/control_dependency_1"
input: "gradients/sub_52_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_52_grad/Neg"
op: "Neg"
input: "gradients/sub_52_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_52_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_52_grad/Neg"
input: "gradients/sub_52_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_52_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_52_grad/Reshape"
input: "^gradients/sub_52_grad/Reshape_1"
, name: "gradients/sub_52_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_52_grad/Reshape"
input: "^gradients/sub_52_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_52_grad/Reshape"
    }
  }
}
, name: "gradients/sub_52_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_52_grad/Reshape_1"
input: "^gradients/sub_52_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_52_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_56_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_56_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_56_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_56_grad/Shape"
input: "gradients/sub_56_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_56_grad/Sum"
op: "Sum"
input: "gradients/MatMul_109_grad/tuple/control_dependency_1"
input: "gradients/sub_56_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_56_grad/Reshape"
op: "Reshape"
input: "gradients/sub_56_grad/Sum"
input: "gradients/sub_56_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_56_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_109_grad/tuple/control_dependency_1"
input: "gradients/sub_56_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_56_grad/Neg"
op: "Neg"
input: "gradients/sub_56_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_56_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_56_grad/Neg"
input: "gradients/sub_56_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_56_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_56_grad/Reshape"
input: "^gradients/sub_56_grad/Reshape_1"
, name: "gradients/sub_56_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_56_grad/Reshape"
input: "^gradients/sub_56_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_56_grad/Reshape"
    }
  }
}
, name: "gradients/sub_56_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_56_grad/Reshape_1"
input: "^gradients/sub_56_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_56_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_60_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_60_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_60_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_60_grad/Shape"
input: "gradients/sub_60_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_60_grad/Sum"
op: "Sum"
input: "gradients/MatMul_116_grad/tuple/control_dependency_1"
input: "gradients/sub_60_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_60_grad/Reshape"
op: "Reshape"
input: "gradients/sub_60_grad/Sum"
input: "gradients/sub_60_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_60_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_116_grad/tuple/control_dependency_1"
input: "gradients/sub_60_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_60_grad/Neg"
op: "Neg"
input: "gradients/sub_60_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_60_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_60_grad/Neg"
input: "gradients/sub_60_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_60_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_60_grad/Reshape"
input: "^gradients/sub_60_grad/Reshape_1"
, name: "gradients/sub_60_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_60_grad/Reshape"
input: "^gradients/sub_60_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_60_grad/Reshape"
    }
  }
}
, name: "gradients/sub_60_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_60_grad/Reshape_1"
input: "^gradients/sub_60_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_60_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_64_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_64_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_64_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_64_grad/Shape"
input: "gradients/sub_64_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_64_grad/Sum"
op: "Sum"
input: "gradients/MatMul_123_grad/tuple/control_dependency_1"
input: "gradients/sub_64_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_64_grad/Reshape"
op: "Reshape"
input: "gradients/sub_64_grad/Sum"
input: "gradients/sub_64_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_64_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_123_grad/tuple/control_dependency_1"
input: "gradients/sub_64_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_64_grad/Neg"
op: "Neg"
input: "gradients/sub_64_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_64_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_64_grad/Neg"
input: "gradients/sub_64_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_64_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_64_grad/Reshape"
input: "^gradients/sub_64_grad/Reshape_1"
, name: "gradients/sub_64_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_64_grad/Reshape"
input: "^gradients/sub_64_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_64_grad/Reshape"
    }
  }
}
, name: "gradients/sub_64_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_64_grad/Reshape_1"
input: "^gradients/sub_64_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_64_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_68_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_68_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_68_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_68_grad/Shape"
input: "gradients/sub_68_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_68_grad/Sum"
op: "Sum"
input: "gradients/MatMul_130_grad/tuple/control_dependency_1"
input: "gradients/sub_68_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_68_grad/Reshape"
op: "Reshape"
input: "gradients/sub_68_grad/Sum"
input: "gradients/sub_68_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_68_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_130_grad/tuple/control_dependency_1"
input: "gradients/sub_68_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_68_grad/Neg"
op: "Neg"
input: "gradients/sub_68_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_68_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_68_grad/Neg"
input: "gradients/sub_68_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_68_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_68_grad/Reshape"
input: "^gradients/sub_68_grad/Reshape_1"
, name: "gradients/sub_68_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_68_grad/Reshape"
input: "^gradients/sub_68_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_68_grad/Reshape"
    }
  }
}
, name: "gradients/sub_68_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_68_grad/Reshape_1"
input: "^gradients/sub_68_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_68_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_72_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_72_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_72_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_72_grad/Shape"
input: "gradients/sub_72_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_72_grad/Sum"
op: "Sum"
input: "gradients/MatMul_137_grad/tuple/control_dependency_1"
input: "gradients/sub_72_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_72_grad/Reshape"
op: "Reshape"
input: "gradients/sub_72_grad/Sum"
input: "gradients/sub_72_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_72_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_137_grad/tuple/control_dependency_1"
input: "gradients/sub_72_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_72_grad/Neg"
op: "Neg"
input: "gradients/sub_72_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_72_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_72_grad/Neg"
input: "gradients/sub_72_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_72_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_72_grad/Reshape"
input: "^gradients/sub_72_grad/Reshape_1"
, name: "gradients/sub_72_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_72_grad/Reshape"
input: "^gradients/sub_72_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_72_grad/Reshape"
    }
  }
}
, name: "gradients/sub_72_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_72_grad/Reshape_1"
input: "^gradients/sub_72_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_72_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_76_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_76_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_76_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_76_grad/Shape"
input: "gradients/sub_76_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_76_grad/Sum"
op: "Sum"
input: "gradients/MatMul_144_grad/tuple/control_dependency_1"
input: "gradients/sub_76_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_76_grad/Reshape"
op: "Reshape"
input: "gradients/sub_76_grad/Sum"
input: "gradients/sub_76_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_76_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_144_grad/tuple/control_dependency_1"
input: "gradients/sub_76_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_76_grad/Neg"
op: "Neg"
input: "gradients/sub_76_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_76_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_76_grad/Neg"
input: "gradients/sub_76_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_76_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_76_grad/Reshape"
input: "^gradients/sub_76_grad/Reshape_1"
, name: "gradients/sub_76_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_76_grad/Reshape"
input: "^gradients/sub_76_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_76_grad/Reshape"
    }
  }
}
, name: "gradients/sub_76_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_76_grad/Reshape_1"
input: "^gradients/sub_76_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_76_grad/Reshape_1"
    }
  }
}
, name: "gradients/sub_80_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_80_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/sub_80_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/sub_80_grad/Shape"
input: "gradients/sub_80_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_80_grad/Sum"
op: "Sum"
input: "gradients/MatMul_151_grad/tuple/control_dependency_1"
input: "gradients/sub_80_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_80_grad/Reshape"
op: "Reshape"
input: "gradients/sub_80_grad/Sum"
input: "gradients/sub_80_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_80_grad/Sum_1"
op: "Sum"
input: "gradients/MatMul_151_grad/tuple/control_dependency_1"
input: "gradients/sub_80_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/sub_80_grad/Neg"
op: "Neg"
input: "gradients/sub_80_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/sub_80_grad/Reshape_1"
op: "Reshape"
input: "gradients/sub_80_grad/Neg"
input: "gradients/sub_80_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/sub_80_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/sub_80_grad/Reshape"
input: "^gradients/sub_80_grad/Reshape_1"
, name: "gradients/sub_80_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/sub_80_grad/Reshape"
input: "^gradients/sub_80_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_80_grad/Reshape"
    }
  }
}
, name: "gradients/sub_80_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/sub_80_grad/Reshape_1"
input: "^gradients/sub_80_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_80_grad/Reshape_1"
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/g_nnpriorZ/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
input: "g_nnpriorZ/dropout_1/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/Mul_1"
op: "Mul"
input: "gradients/g_nnpriorZ/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
input: "g_nnpriorZ/dropout_1/cond/dropout/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/Mul"
input: "^gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/Mul_1"
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/Mul"
input: "^gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/Mul"
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/Mul_1"
input: "^gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/truediv_16_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_16_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_16_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_16_grad/Shape"
input: "gradients/truediv_16_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_16_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_4_grad/tuple/control_dependency_1"
input: "Sum_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_16_grad/Sum"
op: "Sum"
input: "gradients/truediv_16_grad/RealDiv"
input: "gradients/truediv_16_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_16_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_16_grad/Sum"
input: "gradients/truediv_16_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_16_grad/Neg"
op: "Neg"
input: "Sum_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_16_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_16_grad/Neg"
input: "Sum_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_16_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_16_grad/RealDiv_1"
input: "Sum_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_16_grad/mul"
op: "Mul"
input: "gradients/sub_4_grad/tuple/control_dependency_1"
input: "gradients/truediv_16_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_16_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_16_grad/mul"
input: "gradients/truediv_16_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_16_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_16_grad/Sum_1"
input: "gradients/truediv_16_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_16_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_16_grad/Reshape"
input: "^gradients/truediv_16_grad/Reshape_1"
, name: "gradients/truediv_16_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_16_grad/Reshape"
input: "^gradients/truediv_16_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_16_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_16_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_16_grad/Reshape_1"
input: "^gradients/truediv_16_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_16_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_19_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_19_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_19_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_19_grad/Shape"
input: "gradients/truediv_19_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_19_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_8_grad/tuple/control_dependency_1"
input: "Sum_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_19_grad/Sum"
op: "Sum"
input: "gradients/truediv_19_grad/RealDiv"
input: "gradients/truediv_19_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_19_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_19_grad/Sum"
input: "gradients/truediv_19_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_19_grad/Neg"
op: "Neg"
input: "Sum_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_19_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_19_grad/Neg"
input: "Sum_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_19_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_19_grad/RealDiv_1"
input: "Sum_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_19_grad/mul"
op: "Mul"
input: "gradients/sub_8_grad/tuple/control_dependency_1"
input: "gradients/truediv_19_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_19_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_19_grad/mul"
input: "gradients/truediv_19_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_19_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_19_grad/Sum_1"
input: "gradients/truediv_19_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_19_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_19_grad/Reshape"
input: "^gradients/truediv_19_grad/Reshape_1"
, name: "gradients/truediv_19_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_19_grad/Reshape"
input: "^gradients/truediv_19_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_19_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_19_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_19_grad/Reshape_1"
input: "^gradients/truediv_19_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_19_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_22_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_22_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_22_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_22_grad/Shape"
input: "gradients/truediv_22_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_22_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_12_grad/tuple/control_dependency_1"
input: "Sum_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_22_grad/Sum"
op: "Sum"
input: "gradients/truediv_22_grad/RealDiv"
input: "gradients/truediv_22_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_22_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_22_grad/Sum"
input: "gradients/truediv_22_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_22_grad/Neg"
op: "Neg"
input: "Sum_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_22_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_22_grad/Neg"
input: "Sum_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_22_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_22_grad/RealDiv_1"
input: "Sum_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_22_grad/mul"
op: "Mul"
input: "gradients/sub_12_grad/tuple/control_dependency_1"
input: "gradients/truediv_22_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_22_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_22_grad/mul"
input: "gradients/truediv_22_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_22_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_22_grad/Sum_1"
input: "gradients/truediv_22_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_22_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_22_grad/Reshape"
input: "^gradients/truediv_22_grad/Reshape_1"
, name: "gradients/truediv_22_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_22_grad/Reshape"
input: "^gradients/truediv_22_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_22_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_22_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_22_grad/Reshape_1"
input: "^gradients/truediv_22_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_22_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_25_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_25_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_25_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_25_grad/Shape"
input: "gradients/truediv_25_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_25_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_16_grad/tuple/control_dependency_1"
input: "Sum_28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_25_grad/Sum"
op: "Sum"
input: "gradients/truediv_25_grad/RealDiv"
input: "gradients/truediv_25_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_25_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_25_grad/Sum"
input: "gradients/truediv_25_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_25_grad/Neg"
op: "Neg"
input: "Sum_29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_25_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_25_grad/Neg"
input: "Sum_28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_25_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_25_grad/RealDiv_1"
input: "Sum_28"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_25_grad/mul"
op: "Mul"
input: "gradients/sub_16_grad/tuple/control_dependency_1"
input: "gradients/truediv_25_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_25_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_25_grad/mul"
input: "gradients/truediv_25_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_25_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_25_grad/Sum_1"
input: "gradients/truediv_25_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_25_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_25_grad/Reshape"
input: "^gradients/truediv_25_grad/Reshape_1"
, name: "gradients/truediv_25_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_25_grad/Reshape"
input: "^gradients/truediv_25_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_25_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_25_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_25_grad/Reshape_1"
input: "^gradients/truediv_25_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_25_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_28_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_28_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_28_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_28_grad/Shape"
input: "gradients/truediv_28_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_28_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_20_grad/tuple/control_dependency_1"
input: "Sum_35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_28_grad/Sum"
op: "Sum"
input: "gradients/truediv_28_grad/RealDiv"
input: "gradients/truediv_28_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_28_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_28_grad/Sum"
input: "gradients/truediv_28_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_28_grad/Neg"
op: "Neg"
input: "Sum_36"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_28_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_28_grad/Neg"
input: "Sum_35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_28_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_28_grad/RealDiv_1"
input: "Sum_35"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_28_grad/mul"
op: "Mul"
input: "gradients/sub_20_grad/tuple/control_dependency_1"
input: "gradients/truediv_28_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_28_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_28_grad/mul"
input: "gradients/truediv_28_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_28_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_28_grad/Sum_1"
input: "gradients/truediv_28_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_28_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_28_grad/Reshape"
input: "^gradients/truediv_28_grad/Reshape_1"
, name: "gradients/truediv_28_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_28_grad/Reshape"
input: "^gradients/truediv_28_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_28_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_28_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_28_grad/Reshape_1"
input: "^gradients/truediv_28_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_28_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_31_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_31_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_31_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_31_grad/Shape"
input: "gradients/truediv_31_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_31_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_24_grad/tuple/control_dependency_1"
input: "Sum_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_31_grad/Sum"
op: "Sum"
input: "gradients/truediv_31_grad/RealDiv"
input: "gradients/truediv_31_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_31_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_31_grad/Sum"
input: "gradients/truediv_31_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_31_grad/Neg"
op: "Neg"
input: "Sum_43"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_31_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_31_grad/Neg"
input: "Sum_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_31_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_31_grad/RealDiv_1"
input: "Sum_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_31_grad/mul"
op: "Mul"
input: "gradients/sub_24_grad/tuple/control_dependency_1"
input: "gradients/truediv_31_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_31_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_31_grad/mul"
input: "gradients/truediv_31_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_31_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_31_grad/Sum_1"
input: "gradients/truediv_31_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_31_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_31_grad/Reshape"
input: "^gradients/truediv_31_grad/Reshape_1"
, name: "gradients/truediv_31_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_31_grad/Reshape"
input: "^gradients/truediv_31_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_31_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_31_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_31_grad/Reshape_1"
input: "^gradients/truediv_31_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_31_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_34_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_34_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_34_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_34_grad/Shape"
input: "gradients/truediv_34_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_34_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_28_grad/tuple/control_dependency_1"
input: "Sum_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_34_grad/Sum"
op: "Sum"
input: "gradients/truediv_34_grad/RealDiv"
input: "gradients/truediv_34_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_34_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_34_grad/Sum"
input: "gradients/truediv_34_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_34_grad/Neg"
op: "Neg"
input: "Sum_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_34_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_34_grad/Neg"
input: "Sum_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_34_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_34_grad/RealDiv_1"
input: "Sum_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_34_grad/mul"
op: "Mul"
input: "gradients/sub_28_grad/tuple/control_dependency_1"
input: "gradients/truediv_34_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_34_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_34_grad/mul"
input: "gradients/truediv_34_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_34_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_34_grad/Sum_1"
input: "gradients/truediv_34_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_34_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_34_grad/Reshape"
input: "^gradients/truediv_34_grad/Reshape_1"
, name: "gradients/truediv_34_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_34_grad/Reshape"
input: "^gradients/truediv_34_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_34_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_34_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_34_grad/Reshape_1"
input: "^gradients/truediv_34_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_34_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_37_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_37_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_37_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_37_grad/Shape"
input: "gradients/truediv_37_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_37_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_32_grad/tuple/control_dependency_1"
input: "Sum_56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_37_grad/Sum"
op: "Sum"
input: "gradients/truediv_37_grad/RealDiv"
input: "gradients/truediv_37_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_37_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_37_grad/Sum"
input: "gradients/truediv_37_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_37_grad/Neg"
op: "Neg"
input: "Sum_57"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_37_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_37_grad/Neg"
input: "Sum_56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_37_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_37_grad/RealDiv_1"
input: "Sum_56"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_37_grad/mul"
op: "Mul"
input: "gradients/sub_32_grad/tuple/control_dependency_1"
input: "gradients/truediv_37_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_37_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_37_grad/mul"
input: "gradients/truediv_37_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_37_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_37_grad/Sum_1"
input: "gradients/truediv_37_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_37_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_37_grad/Reshape"
input: "^gradients/truediv_37_grad/Reshape_1"
, name: "gradients/truediv_37_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_37_grad/Reshape"
input: "^gradients/truediv_37_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_37_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_37_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_37_grad/Reshape_1"
input: "^gradients/truediv_37_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_37_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_40_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_40_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_40_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_40_grad/Shape"
input: "gradients/truediv_40_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_40_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_36_grad/tuple/control_dependency_1"
input: "Sum_63"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_40_grad/Sum"
op: "Sum"
input: "gradients/truediv_40_grad/RealDiv"
input: "gradients/truediv_40_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_40_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_40_grad/Sum"
input: "gradients/truediv_40_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_40_grad/Neg"
op: "Neg"
input: "Sum_64"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_40_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_40_grad/Neg"
input: "Sum_63"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_40_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_40_grad/RealDiv_1"
input: "Sum_63"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_40_grad/mul"
op: "Mul"
input: "gradients/sub_36_grad/tuple/control_dependency_1"
input: "gradients/truediv_40_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_40_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_40_grad/mul"
input: "gradients/truediv_40_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_40_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_40_grad/Sum_1"
input: "gradients/truediv_40_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_40_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_40_grad/Reshape"
input: "^gradients/truediv_40_grad/Reshape_1"
, name: "gradients/truediv_40_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_40_grad/Reshape"
input: "^gradients/truediv_40_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_40_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_40_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_40_grad/Reshape_1"
input: "^gradients/truediv_40_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_40_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_43_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_43_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_43_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_43_grad/Shape"
input: "gradients/truediv_43_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_43_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_40_grad/tuple/control_dependency_1"
input: "Sum_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_43_grad/Sum"
op: "Sum"
input: "gradients/truediv_43_grad/RealDiv"
input: "gradients/truediv_43_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_43_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_43_grad/Sum"
input: "gradients/truediv_43_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_43_grad/Neg"
op: "Neg"
input: "Sum_71"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_43_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_43_grad/Neg"
input: "Sum_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_43_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_43_grad/RealDiv_1"
input: "Sum_70"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_43_grad/mul"
op: "Mul"
input: "gradients/sub_40_grad/tuple/control_dependency_1"
input: "gradients/truediv_43_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_43_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_43_grad/mul"
input: "gradients/truediv_43_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_43_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_43_grad/Sum_1"
input: "gradients/truediv_43_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_43_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_43_grad/Reshape"
input: "^gradients/truediv_43_grad/Reshape_1"
, name: "gradients/truediv_43_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_43_grad/Reshape"
input: "^gradients/truediv_43_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_43_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_43_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_43_grad/Reshape_1"
input: "^gradients/truediv_43_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_43_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_46_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_46_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_46_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_46_grad/Shape"
input: "gradients/truediv_46_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_46_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_44_grad/tuple/control_dependency_1"
input: "Sum_77"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_46_grad/Sum"
op: "Sum"
input: "gradients/truediv_46_grad/RealDiv"
input: "gradients/truediv_46_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_46_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_46_grad/Sum"
input: "gradients/truediv_46_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_46_grad/Neg"
op: "Neg"
input: "Sum_78"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_46_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_46_grad/Neg"
input: "Sum_77"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_46_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_46_grad/RealDiv_1"
input: "Sum_77"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_46_grad/mul"
op: "Mul"
input: "gradients/sub_44_grad/tuple/control_dependency_1"
input: "gradients/truediv_46_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_46_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_46_grad/mul"
input: "gradients/truediv_46_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_46_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_46_grad/Sum_1"
input: "gradients/truediv_46_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_46_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_46_grad/Reshape"
input: "^gradients/truediv_46_grad/Reshape_1"
, name: "gradients/truediv_46_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_46_grad/Reshape"
input: "^gradients/truediv_46_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_46_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_46_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_46_grad/Reshape_1"
input: "^gradients/truediv_46_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_46_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_49_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_49_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_49_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_49_grad/Shape"
input: "gradients/truediv_49_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_49_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_48_grad/tuple/control_dependency_1"
input: "Sum_84"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_49_grad/Sum"
op: "Sum"
input: "gradients/truediv_49_grad/RealDiv"
input: "gradients/truediv_49_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_49_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_49_grad/Sum"
input: "gradients/truediv_49_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_49_grad/Neg"
op: "Neg"
input: "Sum_85"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_49_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_49_grad/Neg"
input: "Sum_84"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_49_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_49_grad/RealDiv_1"
input: "Sum_84"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_49_grad/mul"
op: "Mul"
input: "gradients/sub_48_grad/tuple/control_dependency_1"
input: "gradients/truediv_49_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_49_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_49_grad/mul"
input: "gradients/truediv_49_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_49_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_49_grad/Sum_1"
input: "gradients/truediv_49_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_49_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_49_grad/Reshape"
input: "^gradients/truediv_49_grad/Reshape_1"
, name: "gradients/truediv_49_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_49_grad/Reshape"
input: "^gradients/truediv_49_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_49_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_49_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_49_grad/Reshape_1"
input: "^gradients/truediv_49_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_49_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_52_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_52_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_52_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_52_grad/Shape"
input: "gradients/truediv_52_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_52_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_52_grad/tuple/control_dependency_1"
input: "Sum_91"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_52_grad/Sum"
op: "Sum"
input: "gradients/truediv_52_grad/RealDiv"
input: "gradients/truediv_52_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_52_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_52_grad/Sum"
input: "gradients/truediv_52_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_52_grad/Neg"
op: "Neg"
input: "Sum_92"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_52_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_52_grad/Neg"
input: "Sum_91"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_52_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_52_grad/RealDiv_1"
input: "Sum_91"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_52_grad/mul"
op: "Mul"
input: "gradients/sub_52_grad/tuple/control_dependency_1"
input: "gradients/truediv_52_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_52_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_52_grad/mul"
input: "gradients/truediv_52_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_52_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_52_grad/Sum_1"
input: "gradients/truediv_52_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_52_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_52_grad/Reshape"
input: "^gradients/truediv_52_grad/Reshape_1"
, name: "gradients/truediv_52_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_52_grad/Reshape"
input: "^gradients/truediv_52_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_52_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_52_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_52_grad/Reshape_1"
input: "^gradients/truediv_52_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_52_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_55_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_55_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_55_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_55_grad/Shape"
input: "gradients/truediv_55_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_55_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_56_grad/tuple/control_dependency_1"
input: "Sum_98"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_55_grad/Sum"
op: "Sum"
input: "gradients/truediv_55_grad/RealDiv"
input: "gradients/truediv_55_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_55_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_55_grad/Sum"
input: "gradients/truediv_55_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_55_grad/Neg"
op: "Neg"
input: "Sum_99"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_55_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_55_grad/Neg"
input: "Sum_98"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_55_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_55_grad/RealDiv_1"
input: "Sum_98"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_55_grad/mul"
op: "Mul"
input: "gradients/sub_56_grad/tuple/control_dependency_1"
input: "gradients/truediv_55_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_55_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_55_grad/mul"
input: "gradients/truediv_55_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_55_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_55_grad/Sum_1"
input: "gradients/truediv_55_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_55_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_55_grad/Reshape"
input: "^gradients/truediv_55_grad/Reshape_1"
, name: "gradients/truediv_55_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_55_grad/Reshape"
input: "^gradients/truediv_55_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_55_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_55_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_55_grad/Reshape_1"
input: "^gradients/truediv_55_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_55_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_58_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_58_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_58_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_58_grad/Shape"
input: "gradients/truediv_58_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_58_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_60_grad/tuple/control_dependency_1"
input: "Sum_105"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_58_grad/Sum"
op: "Sum"
input: "gradients/truediv_58_grad/RealDiv"
input: "gradients/truediv_58_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_58_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_58_grad/Sum"
input: "gradients/truediv_58_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_58_grad/Neg"
op: "Neg"
input: "Sum_106"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_58_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_58_grad/Neg"
input: "Sum_105"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_58_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_58_grad/RealDiv_1"
input: "Sum_105"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_58_grad/mul"
op: "Mul"
input: "gradients/sub_60_grad/tuple/control_dependency_1"
input: "gradients/truediv_58_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_58_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_58_grad/mul"
input: "gradients/truediv_58_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_58_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_58_grad/Sum_1"
input: "gradients/truediv_58_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_58_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_58_grad/Reshape"
input: "^gradients/truediv_58_grad/Reshape_1"
, name: "gradients/truediv_58_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_58_grad/Reshape"
input: "^gradients/truediv_58_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_58_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_58_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_58_grad/Reshape_1"
input: "^gradients/truediv_58_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_58_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_61_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_61_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_61_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_61_grad/Shape"
input: "gradients/truediv_61_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_61_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_64_grad/tuple/control_dependency_1"
input: "Sum_112"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_61_grad/Sum"
op: "Sum"
input: "gradients/truediv_61_grad/RealDiv"
input: "gradients/truediv_61_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_61_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_61_grad/Sum"
input: "gradients/truediv_61_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_61_grad/Neg"
op: "Neg"
input: "Sum_113"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_61_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_61_grad/Neg"
input: "Sum_112"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_61_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_61_grad/RealDiv_1"
input: "Sum_112"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_61_grad/mul"
op: "Mul"
input: "gradients/sub_64_grad/tuple/control_dependency_1"
input: "gradients/truediv_61_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_61_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_61_grad/mul"
input: "gradients/truediv_61_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_61_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_61_grad/Sum_1"
input: "gradients/truediv_61_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_61_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_61_grad/Reshape"
input: "^gradients/truediv_61_grad/Reshape_1"
, name: "gradients/truediv_61_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_61_grad/Reshape"
input: "^gradients/truediv_61_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_61_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_61_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_61_grad/Reshape_1"
input: "^gradients/truediv_61_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_61_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_64_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_64_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_64_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_64_grad/Shape"
input: "gradients/truediv_64_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_64_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_68_grad/tuple/control_dependency_1"
input: "Sum_119"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_64_grad/Sum"
op: "Sum"
input: "gradients/truediv_64_grad/RealDiv"
input: "gradients/truediv_64_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_64_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_64_grad/Sum"
input: "gradients/truediv_64_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_64_grad/Neg"
op: "Neg"
input: "Sum_120"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_64_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_64_grad/Neg"
input: "Sum_119"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_64_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_64_grad/RealDiv_1"
input: "Sum_119"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_64_grad/mul"
op: "Mul"
input: "gradients/sub_68_grad/tuple/control_dependency_1"
input: "gradients/truediv_64_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_64_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_64_grad/mul"
input: "gradients/truediv_64_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_64_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_64_grad/Sum_1"
input: "gradients/truediv_64_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_64_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_64_grad/Reshape"
input: "^gradients/truediv_64_grad/Reshape_1"
, name: "gradients/truediv_64_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_64_grad/Reshape"
input: "^gradients/truediv_64_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_64_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_64_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_64_grad/Reshape_1"
input: "^gradients/truediv_64_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_64_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_67_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_67_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_67_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_67_grad/Shape"
input: "gradients/truediv_67_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_67_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_72_grad/tuple/control_dependency_1"
input: "Sum_126"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_67_grad/Sum"
op: "Sum"
input: "gradients/truediv_67_grad/RealDiv"
input: "gradients/truediv_67_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_67_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_67_grad/Sum"
input: "gradients/truediv_67_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_67_grad/Neg"
op: "Neg"
input: "Sum_127"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_67_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_67_grad/Neg"
input: "Sum_126"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_67_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_67_grad/RealDiv_1"
input: "Sum_126"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_67_grad/mul"
op: "Mul"
input: "gradients/sub_72_grad/tuple/control_dependency_1"
input: "gradients/truediv_67_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_67_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_67_grad/mul"
input: "gradients/truediv_67_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_67_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_67_grad/Sum_1"
input: "gradients/truediv_67_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_67_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_67_grad/Reshape"
input: "^gradients/truediv_67_grad/Reshape_1"
, name: "gradients/truediv_67_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_67_grad/Reshape"
input: "^gradients/truediv_67_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_67_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_67_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_67_grad/Reshape_1"
input: "^gradients/truediv_67_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_67_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_70_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_70_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_70_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_70_grad/Shape"
input: "gradients/truediv_70_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_70_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_76_grad/tuple/control_dependency_1"
input: "Sum_133"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_70_grad/Sum"
op: "Sum"
input: "gradients/truediv_70_grad/RealDiv"
input: "gradients/truediv_70_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_70_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_70_grad/Sum"
input: "gradients/truediv_70_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_70_grad/Neg"
op: "Neg"
input: "Sum_134"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_70_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_70_grad/Neg"
input: "Sum_133"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_70_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_70_grad/RealDiv_1"
input: "Sum_133"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_70_grad/mul"
op: "Mul"
input: "gradients/sub_76_grad/tuple/control_dependency_1"
input: "gradients/truediv_70_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_70_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_70_grad/mul"
input: "gradients/truediv_70_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_70_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_70_grad/Sum_1"
input: "gradients/truediv_70_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_70_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_70_grad/Reshape"
input: "^gradients/truediv_70_grad/Reshape_1"
, name: "gradients/truediv_70_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_70_grad/Reshape"
input: "^gradients/truediv_70_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_70_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_70_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_70_grad/Reshape_1"
input: "^gradients/truediv_70_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_70_grad/Reshape_1"
    }
  }
}
, name: "gradients/truediv_73_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\001\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/truediv_73_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_73_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_73_grad/Shape"
input: "gradients/truediv_73_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_73_grad/RealDiv"
op: "RealDiv"
input: "gradients/sub_80_grad/tuple/control_dependency_1"
input: "Sum_140"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_73_grad/Sum"
op: "Sum"
input: "gradients/truediv_73_grad/RealDiv"
input: "gradients/truediv_73_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_73_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_73_grad/Sum"
input: "gradients/truediv_73_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_73_grad/Neg"
op: "Neg"
input: "Sum_141"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_73_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_73_grad/Neg"
input: "Sum_140"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_73_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_73_grad/RealDiv_1"
input: "Sum_140"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_73_grad/mul"
op: "Mul"
input: "gradients/sub_80_grad/tuple/control_dependency_1"
input: "gradients/truediv_73_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_73_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_73_grad/mul"
input: "gradients/truediv_73_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_73_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_73_grad/Sum_1"
input: "gradients/truediv_73_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_73_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_73_grad/Reshape"
input: "^gradients/truediv_73_grad/Reshape_1"
, name: "gradients/truediv_73_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_73_grad/Reshape"
input: "^gradients/truediv_73_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_73_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_73_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_73_grad/Reshape_1"
input: "^gradients/truediv_73_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_73_grad/Reshape_1"
    }
  }
}
, name: "gradients/Switch_58"
op: "Switch"
input: "g_nnpriorZ/dense/Sigmoid"
input: "g_nnpriorZ/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_40"
op: "Identity"
input: "gradients/Switch_58:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_41"
op: "Shape"
input: "gradients/Switch_58:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_40/Const"
op: "Const"
input: "^gradients/Identity_40"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_40"
op: "Fill"
input: "gradients/Shape_41"
input: "gradients/zeros_40/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/Identity/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/g_nnpriorZ/dropout_1/cond/Merge_grad/tuple/control_dependency"
input: "gradients/zeros_40"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Shape"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/RealDiv"
op: "RealDiv"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
input: "g_nnpriorZ/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Sum"
op: "Sum"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/RealDiv"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Reshape"
op: "Reshape"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Sum"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Neg"
op: "Neg"
input: "g_nnpriorZ/dropout_1/cond/dropout/div/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Neg"
input: "g_nnpriorZ/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/RealDiv_1"
input: "g_nnpriorZ/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/mul"
op: "Mul"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Sum_1"
op: "Sum"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/mul"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Reshape_1"
op: "Reshape"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Sum_1"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Reshape"
input: "^gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Reshape_1"
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Reshape"
input: "^gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Reshape"
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Reshape_1"
input: "^gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/Reshape_1"
    }
  }
}
, name: "gradients/Sum_8_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_8_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_8_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_8_grad/add"
op: "Add"
input: "Sum_8/reduction_indices"
input: "gradients/Sum_8_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_8_grad/Shape"
    }
  }
}
, name: "gradients/Sum_8_grad/mod"
op: "FloorMod"
input: "gradients/Sum_8_grad/add"
input: "gradients/Sum_8_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_8_grad/Shape"
    }
  }
}
, name: "gradients/Sum_8_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_8_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_8_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_8_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_8_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_8_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_8_grad/range"
op: "Range"
input: "gradients/Sum_8_grad/range/start"
input: "gradients/Sum_8_grad/Size"
input: "gradients/Sum_8_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_8_grad/Shape"
    }
  }
}
, name: "gradients/Sum_8_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_8_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_8_grad/Fill"
op: "Fill"
input: "gradients/Sum_8_grad/Shape_1"
input: "gradients/Sum_8_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_8_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_8_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_8_grad/range"
input: "gradients/Sum_8_grad/mod"
input: "gradients/Sum_8_grad/Shape"
input: "gradients/Sum_8_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_8_grad/Shape"
    }
  }
}
, name: "gradients/Sum_8_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_8_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_8_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_8_grad/DynamicStitch"
input: "gradients/Sum_8_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_8_grad/Shape"
    }
  }
}
, name: "gradients/Sum_8_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_8_grad/Shape"
input: "gradients/Sum_8_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_8_grad/Shape"
    }
  }
}
, name: "gradients/Sum_8_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_16_grad/tuple/control_dependency"
input: "gradients/Sum_8_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_8_grad/Tile"
op: "Tile"
input: "gradients/Sum_8_grad/Reshape"
input: "gradients/Sum_8_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_15_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_15_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_15_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_15_grad/add"
op: "Add"
input: "Sum_15/reduction_indices"
input: "gradients/Sum_15_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_15_grad/Shape"
    }
  }
}
, name: "gradients/Sum_15_grad/mod"
op: "FloorMod"
input: "gradients/Sum_15_grad/add"
input: "gradients/Sum_15_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_15_grad/Shape"
    }
  }
}
, name: "gradients/Sum_15_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_15_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_15_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_15_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_15_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_15_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_15_grad/range"
op: "Range"
input: "gradients/Sum_15_grad/range/start"
input: "gradients/Sum_15_grad/Size"
input: "gradients/Sum_15_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_15_grad/Shape"
    }
  }
}
, name: "gradients/Sum_15_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_15_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_15_grad/Fill"
op: "Fill"
input: "gradients/Sum_15_grad/Shape_1"
input: "gradients/Sum_15_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_15_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_15_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_15_grad/range"
input: "gradients/Sum_15_grad/mod"
input: "gradients/Sum_15_grad/Shape"
input: "gradients/Sum_15_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_15_grad/Shape"
    }
  }
}
, name: "gradients/Sum_15_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_15_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_15_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_15_grad/DynamicStitch"
input: "gradients/Sum_15_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_15_grad/Shape"
    }
  }
}
, name: "gradients/Sum_15_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_15_grad/Shape"
input: "gradients/Sum_15_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_15_grad/Shape"
    }
  }
}
, name: "gradients/Sum_15_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_19_grad/tuple/control_dependency"
input: "gradients/Sum_15_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_15_grad/Tile"
op: "Tile"
input: "gradients/Sum_15_grad/Reshape"
input: "gradients/Sum_15_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_22_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_22_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_22_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_22_grad/add"
op: "Add"
input: "Sum_22/reduction_indices"
input: "gradients/Sum_22_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_22_grad/Shape"
    }
  }
}
, name: "gradients/Sum_22_grad/mod"
op: "FloorMod"
input: "gradients/Sum_22_grad/add"
input: "gradients/Sum_22_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_22_grad/Shape"
    }
  }
}
, name: "gradients/Sum_22_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_22_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_22_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_22_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_22_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_22_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_22_grad/range"
op: "Range"
input: "gradients/Sum_22_grad/range/start"
input: "gradients/Sum_22_grad/Size"
input: "gradients/Sum_22_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_22_grad/Shape"
    }
  }
}
, name: "gradients/Sum_22_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_22_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_22_grad/Fill"
op: "Fill"
input: "gradients/Sum_22_grad/Shape_1"
input: "gradients/Sum_22_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_22_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_22_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_22_grad/range"
input: "gradients/Sum_22_grad/mod"
input: "gradients/Sum_22_grad/Shape"
input: "gradients/Sum_22_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_22_grad/Shape"
    }
  }
}
, name: "gradients/Sum_22_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_22_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_22_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_22_grad/DynamicStitch"
input: "gradients/Sum_22_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_22_grad/Shape"
    }
  }
}
, name: "gradients/Sum_22_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_22_grad/Shape"
input: "gradients/Sum_22_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_22_grad/Shape"
    }
  }
}
, name: "gradients/Sum_22_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_22_grad/tuple/control_dependency"
input: "gradients/Sum_22_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_22_grad/Tile"
op: "Tile"
input: "gradients/Sum_22_grad/Reshape"
input: "gradients/Sum_22_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_29_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_29_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_29_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_29_grad/add"
op: "Add"
input: "Sum_29/reduction_indices"
input: "gradients/Sum_29_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_29_grad/Shape"
    }
  }
}
, name: "gradients/Sum_29_grad/mod"
op: "FloorMod"
input: "gradients/Sum_29_grad/add"
input: "gradients/Sum_29_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_29_grad/Shape"
    }
  }
}
, name: "gradients/Sum_29_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_29_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_29_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_29_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_29_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_29_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_29_grad/range"
op: "Range"
input: "gradients/Sum_29_grad/range/start"
input: "gradients/Sum_29_grad/Size"
input: "gradients/Sum_29_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_29_grad/Shape"
    }
  }
}
, name: "gradients/Sum_29_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_29_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_29_grad/Fill"
op: "Fill"
input: "gradients/Sum_29_grad/Shape_1"
input: "gradients/Sum_29_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_29_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_29_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_29_grad/range"
input: "gradients/Sum_29_grad/mod"
input: "gradients/Sum_29_grad/Shape"
input: "gradients/Sum_29_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_29_grad/Shape"
    }
  }
}
, name: "gradients/Sum_29_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_29_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_29_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_29_grad/DynamicStitch"
input: "gradients/Sum_29_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_29_grad/Shape"
    }
  }
}
, name: "gradients/Sum_29_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_29_grad/Shape"
input: "gradients/Sum_29_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_29_grad/Shape"
    }
  }
}
, name: "gradients/Sum_29_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_25_grad/tuple/control_dependency"
input: "gradients/Sum_29_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_29_grad/Tile"
op: "Tile"
input: "gradients/Sum_29_grad/Reshape"
input: "gradients/Sum_29_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_36_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_36_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_36_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_36_grad/add"
op: "Add"
input: "Sum_36/reduction_indices"
input: "gradients/Sum_36_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_36_grad/Shape"
    }
  }
}
, name: "gradients/Sum_36_grad/mod"
op: "FloorMod"
input: "gradients/Sum_36_grad/add"
input: "gradients/Sum_36_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_36_grad/Shape"
    }
  }
}
, name: "gradients/Sum_36_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_36_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_36_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_36_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_36_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_36_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_36_grad/range"
op: "Range"
input: "gradients/Sum_36_grad/range/start"
input: "gradients/Sum_36_grad/Size"
input: "gradients/Sum_36_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_36_grad/Shape"
    }
  }
}
, name: "gradients/Sum_36_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_36_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_36_grad/Fill"
op: "Fill"
input: "gradients/Sum_36_grad/Shape_1"
input: "gradients/Sum_36_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_36_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_36_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_36_grad/range"
input: "gradients/Sum_36_grad/mod"
input: "gradients/Sum_36_grad/Shape"
input: "gradients/Sum_36_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_36_grad/Shape"
    }
  }
}
, name: "gradients/Sum_36_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_36_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_36_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_36_grad/DynamicStitch"
input: "gradients/Sum_36_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_36_grad/Shape"
    }
  }
}
, name: "gradients/Sum_36_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_36_grad/Shape"
input: "gradients/Sum_36_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_36_grad/Shape"
    }
  }
}
, name: "gradients/Sum_36_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_28_grad/tuple/control_dependency"
input: "gradients/Sum_36_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_36_grad/Tile"
op: "Tile"
input: "gradients/Sum_36_grad/Reshape"
input: "gradients/Sum_36_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_43_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_43_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_43_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_43_grad/add"
op: "Add"
input: "Sum_43/reduction_indices"
input: "gradients/Sum_43_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_43_grad/Shape"
    }
  }
}
, name: "gradients/Sum_43_grad/mod"
op: "FloorMod"
input: "gradients/Sum_43_grad/add"
input: "gradients/Sum_43_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_43_grad/Shape"
    }
  }
}
, name: "gradients/Sum_43_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_43_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_43_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_43_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_43_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_43_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_43_grad/range"
op: "Range"
input: "gradients/Sum_43_grad/range/start"
input: "gradients/Sum_43_grad/Size"
input: "gradients/Sum_43_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_43_grad/Shape"
    }
  }
}
, name: "gradients/Sum_43_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_43_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_43_grad/Fill"
op: "Fill"
input: "gradients/Sum_43_grad/Shape_1"
input: "gradients/Sum_43_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_43_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_43_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_43_grad/range"
input: "gradients/Sum_43_grad/mod"
input: "gradients/Sum_43_grad/Shape"
input: "gradients/Sum_43_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_43_grad/Shape"
    }
  }
}
, name: "gradients/Sum_43_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_43_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_43_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_43_grad/DynamicStitch"
input: "gradients/Sum_43_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_43_grad/Shape"
    }
  }
}
, name: "gradients/Sum_43_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_43_grad/Shape"
input: "gradients/Sum_43_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_43_grad/Shape"
    }
  }
}
, name: "gradients/Sum_43_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_31_grad/tuple/control_dependency"
input: "gradients/Sum_43_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_43_grad/Tile"
op: "Tile"
input: "gradients/Sum_43_grad/Reshape"
input: "gradients/Sum_43_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_50_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_50_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_50_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_50_grad/add"
op: "Add"
input: "Sum_50/reduction_indices"
input: "gradients/Sum_50_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_50_grad/Shape"
    }
  }
}
, name: "gradients/Sum_50_grad/mod"
op: "FloorMod"
input: "gradients/Sum_50_grad/add"
input: "gradients/Sum_50_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_50_grad/Shape"
    }
  }
}
, name: "gradients/Sum_50_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_50_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_50_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_50_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_50_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_50_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_50_grad/range"
op: "Range"
input: "gradients/Sum_50_grad/range/start"
input: "gradients/Sum_50_grad/Size"
input: "gradients/Sum_50_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_50_grad/Shape"
    }
  }
}
, name: "gradients/Sum_50_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_50_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_50_grad/Fill"
op: "Fill"
input: "gradients/Sum_50_grad/Shape_1"
input: "gradients/Sum_50_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_50_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_50_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_50_grad/range"
input: "gradients/Sum_50_grad/mod"
input: "gradients/Sum_50_grad/Shape"
input: "gradients/Sum_50_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_50_grad/Shape"
    }
  }
}
, name: "gradients/Sum_50_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_50_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_50_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_50_grad/DynamicStitch"
input: "gradients/Sum_50_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_50_grad/Shape"
    }
  }
}
, name: "gradients/Sum_50_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_50_grad/Shape"
input: "gradients/Sum_50_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_50_grad/Shape"
    }
  }
}
, name: "gradients/Sum_50_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_34_grad/tuple/control_dependency"
input: "gradients/Sum_50_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_50_grad/Tile"
op: "Tile"
input: "gradients/Sum_50_grad/Reshape"
input: "gradients/Sum_50_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_57_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_57_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_57_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_57_grad/add"
op: "Add"
input: "Sum_57/reduction_indices"
input: "gradients/Sum_57_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_57_grad/Shape"
    }
  }
}
, name: "gradients/Sum_57_grad/mod"
op: "FloorMod"
input: "gradients/Sum_57_grad/add"
input: "gradients/Sum_57_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_57_grad/Shape"
    }
  }
}
, name: "gradients/Sum_57_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_57_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_57_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_57_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_57_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_57_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_57_grad/range"
op: "Range"
input: "gradients/Sum_57_grad/range/start"
input: "gradients/Sum_57_grad/Size"
input: "gradients/Sum_57_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_57_grad/Shape"
    }
  }
}
, name: "gradients/Sum_57_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_57_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_57_grad/Fill"
op: "Fill"
input: "gradients/Sum_57_grad/Shape_1"
input: "gradients/Sum_57_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_57_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_57_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_57_grad/range"
input: "gradients/Sum_57_grad/mod"
input: "gradients/Sum_57_grad/Shape"
input: "gradients/Sum_57_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_57_grad/Shape"
    }
  }
}
, name: "gradients/Sum_57_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_57_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_57_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_57_grad/DynamicStitch"
input: "gradients/Sum_57_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_57_grad/Shape"
    }
  }
}
, name: "gradients/Sum_57_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_57_grad/Shape"
input: "gradients/Sum_57_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_57_grad/Shape"
    }
  }
}
, name: "gradients/Sum_57_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_37_grad/tuple/control_dependency"
input: "gradients/Sum_57_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_57_grad/Tile"
op: "Tile"
input: "gradients/Sum_57_grad/Reshape"
input: "gradients/Sum_57_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_64_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_64_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_64_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_64_grad/add"
op: "Add"
input: "Sum_64/reduction_indices"
input: "gradients/Sum_64_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_64_grad/Shape"
    }
  }
}
, name: "gradients/Sum_64_grad/mod"
op: "FloorMod"
input: "gradients/Sum_64_grad/add"
input: "gradients/Sum_64_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_64_grad/Shape"
    }
  }
}
, name: "gradients/Sum_64_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_64_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_64_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_64_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_64_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_64_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_64_grad/range"
op: "Range"
input: "gradients/Sum_64_grad/range/start"
input: "gradients/Sum_64_grad/Size"
input: "gradients/Sum_64_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_64_grad/Shape"
    }
  }
}
, name: "gradients/Sum_64_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_64_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_64_grad/Fill"
op: "Fill"
input: "gradients/Sum_64_grad/Shape_1"
input: "gradients/Sum_64_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_64_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_64_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_64_grad/range"
input: "gradients/Sum_64_grad/mod"
input: "gradients/Sum_64_grad/Shape"
input: "gradients/Sum_64_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_64_grad/Shape"
    }
  }
}
, name: "gradients/Sum_64_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_64_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_64_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_64_grad/DynamicStitch"
input: "gradients/Sum_64_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_64_grad/Shape"
    }
  }
}
, name: "gradients/Sum_64_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_64_grad/Shape"
input: "gradients/Sum_64_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_64_grad/Shape"
    }
  }
}
, name: "gradients/Sum_64_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_40_grad/tuple/control_dependency"
input: "gradients/Sum_64_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_64_grad/Tile"
op: "Tile"
input: "gradients/Sum_64_grad/Reshape"
input: "gradients/Sum_64_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_71_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_71_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_71_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_71_grad/add"
op: "Add"
input: "Sum_71/reduction_indices"
input: "gradients/Sum_71_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_71_grad/Shape"
    }
  }
}
, name: "gradients/Sum_71_grad/mod"
op: "FloorMod"
input: "gradients/Sum_71_grad/add"
input: "gradients/Sum_71_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_71_grad/Shape"
    }
  }
}
, name: "gradients/Sum_71_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_71_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_71_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_71_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_71_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_71_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_71_grad/range"
op: "Range"
input: "gradients/Sum_71_grad/range/start"
input: "gradients/Sum_71_grad/Size"
input: "gradients/Sum_71_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_71_grad/Shape"
    }
  }
}
, name: "gradients/Sum_71_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_71_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_71_grad/Fill"
op: "Fill"
input: "gradients/Sum_71_grad/Shape_1"
input: "gradients/Sum_71_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_71_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_71_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_71_grad/range"
input: "gradients/Sum_71_grad/mod"
input: "gradients/Sum_71_grad/Shape"
input: "gradients/Sum_71_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_71_grad/Shape"
    }
  }
}
, name: "gradients/Sum_71_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_71_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_71_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_71_grad/DynamicStitch"
input: "gradients/Sum_71_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_71_grad/Shape"
    }
  }
}
, name: "gradients/Sum_71_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_71_grad/Shape"
input: "gradients/Sum_71_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_71_grad/Shape"
    }
  }
}
, name: "gradients/Sum_71_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_43_grad/tuple/control_dependency"
input: "gradients/Sum_71_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_71_grad/Tile"
op: "Tile"
input: "gradients/Sum_71_grad/Reshape"
input: "gradients/Sum_71_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_78_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_78_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_78_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_78_grad/add"
op: "Add"
input: "Sum_78/reduction_indices"
input: "gradients/Sum_78_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_78_grad/Shape"
    }
  }
}
, name: "gradients/Sum_78_grad/mod"
op: "FloorMod"
input: "gradients/Sum_78_grad/add"
input: "gradients/Sum_78_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_78_grad/Shape"
    }
  }
}
, name: "gradients/Sum_78_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_78_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_78_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_78_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_78_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_78_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_78_grad/range"
op: "Range"
input: "gradients/Sum_78_grad/range/start"
input: "gradients/Sum_78_grad/Size"
input: "gradients/Sum_78_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_78_grad/Shape"
    }
  }
}
, name: "gradients/Sum_78_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_78_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_78_grad/Fill"
op: "Fill"
input: "gradients/Sum_78_grad/Shape_1"
input: "gradients/Sum_78_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_78_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_78_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_78_grad/range"
input: "gradients/Sum_78_grad/mod"
input: "gradients/Sum_78_grad/Shape"
input: "gradients/Sum_78_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_78_grad/Shape"
    }
  }
}
, name: "gradients/Sum_78_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_78_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_78_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_78_grad/DynamicStitch"
input: "gradients/Sum_78_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_78_grad/Shape"
    }
  }
}
, name: "gradients/Sum_78_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_78_grad/Shape"
input: "gradients/Sum_78_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_78_grad/Shape"
    }
  }
}
, name: "gradients/Sum_78_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_46_grad/tuple/control_dependency"
input: "gradients/Sum_78_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_78_grad/Tile"
op: "Tile"
input: "gradients/Sum_78_grad/Reshape"
input: "gradients/Sum_78_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_85_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_85_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_85_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_85_grad/add"
op: "Add"
input: "Sum_85/reduction_indices"
input: "gradients/Sum_85_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_85_grad/Shape"
    }
  }
}
, name: "gradients/Sum_85_grad/mod"
op: "FloorMod"
input: "gradients/Sum_85_grad/add"
input: "gradients/Sum_85_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_85_grad/Shape"
    }
  }
}
, name: "gradients/Sum_85_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_85_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_85_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_85_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_85_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_85_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_85_grad/range"
op: "Range"
input: "gradients/Sum_85_grad/range/start"
input: "gradients/Sum_85_grad/Size"
input: "gradients/Sum_85_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_85_grad/Shape"
    }
  }
}
, name: "gradients/Sum_85_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_85_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_85_grad/Fill"
op: "Fill"
input: "gradients/Sum_85_grad/Shape_1"
input: "gradients/Sum_85_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_85_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_85_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_85_grad/range"
input: "gradients/Sum_85_grad/mod"
input: "gradients/Sum_85_grad/Shape"
input: "gradients/Sum_85_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_85_grad/Shape"
    }
  }
}
, name: "gradients/Sum_85_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_85_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_85_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_85_grad/DynamicStitch"
input: "gradients/Sum_85_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_85_grad/Shape"
    }
  }
}
, name: "gradients/Sum_85_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_85_grad/Shape"
input: "gradients/Sum_85_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_85_grad/Shape"
    }
  }
}
, name: "gradients/Sum_85_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_49_grad/tuple/control_dependency"
input: "gradients/Sum_85_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_85_grad/Tile"
op: "Tile"
input: "gradients/Sum_85_grad/Reshape"
input: "gradients/Sum_85_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_92_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_92_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_92_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_92_grad/add"
op: "Add"
input: "Sum_92/reduction_indices"
input: "gradients/Sum_92_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_92_grad/Shape"
    }
  }
}
, name: "gradients/Sum_92_grad/mod"
op: "FloorMod"
input: "gradients/Sum_92_grad/add"
input: "gradients/Sum_92_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_92_grad/Shape"
    }
  }
}
, name: "gradients/Sum_92_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_92_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_92_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_92_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_92_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_92_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_92_grad/range"
op: "Range"
input: "gradients/Sum_92_grad/range/start"
input: "gradients/Sum_92_grad/Size"
input: "gradients/Sum_92_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_92_grad/Shape"
    }
  }
}
, name: "gradients/Sum_92_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_92_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_92_grad/Fill"
op: "Fill"
input: "gradients/Sum_92_grad/Shape_1"
input: "gradients/Sum_92_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_92_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_92_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_92_grad/range"
input: "gradients/Sum_92_grad/mod"
input: "gradients/Sum_92_grad/Shape"
input: "gradients/Sum_92_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_92_grad/Shape"
    }
  }
}
, name: "gradients/Sum_92_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_92_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_92_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_92_grad/DynamicStitch"
input: "gradients/Sum_92_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_92_grad/Shape"
    }
  }
}
, name: "gradients/Sum_92_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_92_grad/Shape"
input: "gradients/Sum_92_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_92_grad/Shape"
    }
  }
}
, name: "gradients/Sum_92_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_52_grad/tuple/control_dependency"
input: "gradients/Sum_92_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_92_grad/Tile"
op: "Tile"
input: "gradients/Sum_92_grad/Reshape"
input: "gradients/Sum_92_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_99_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_99_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_99_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_99_grad/add"
op: "Add"
input: "Sum_99/reduction_indices"
input: "gradients/Sum_99_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_99_grad/Shape"
    }
  }
}
, name: "gradients/Sum_99_grad/mod"
op: "FloorMod"
input: "gradients/Sum_99_grad/add"
input: "gradients/Sum_99_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_99_grad/Shape"
    }
  }
}
, name: "gradients/Sum_99_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_99_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_99_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_99_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_99_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_99_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_99_grad/range"
op: "Range"
input: "gradients/Sum_99_grad/range/start"
input: "gradients/Sum_99_grad/Size"
input: "gradients/Sum_99_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_99_grad/Shape"
    }
  }
}
, name: "gradients/Sum_99_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_99_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_99_grad/Fill"
op: "Fill"
input: "gradients/Sum_99_grad/Shape_1"
input: "gradients/Sum_99_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_99_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_99_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_99_grad/range"
input: "gradients/Sum_99_grad/mod"
input: "gradients/Sum_99_grad/Shape"
input: "gradients/Sum_99_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_99_grad/Shape"
    }
  }
}
, name: "gradients/Sum_99_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_99_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_99_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_99_grad/DynamicStitch"
input: "gradients/Sum_99_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_99_grad/Shape"
    }
  }
}
, name: "gradients/Sum_99_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_99_grad/Shape"
input: "gradients/Sum_99_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_99_grad/Shape"
    }
  }
}
, name: "gradients/Sum_99_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_55_grad/tuple/control_dependency"
input: "gradients/Sum_99_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_99_grad/Tile"
op: "Tile"
input: "gradients/Sum_99_grad/Reshape"
input: "gradients/Sum_99_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_106_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_106_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_106_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_106_grad/add"
op: "Add"
input: "Sum_106/reduction_indices"
input: "gradients/Sum_106_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_106_grad/Shape"
    }
  }
}
, name: "gradients/Sum_106_grad/mod"
op: "FloorMod"
input: "gradients/Sum_106_grad/add"
input: "gradients/Sum_106_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_106_grad/Shape"
    }
  }
}
, name: "gradients/Sum_106_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_106_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_106_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_106_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_106_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_106_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_106_grad/range"
op: "Range"
input: "gradients/Sum_106_grad/range/start"
input: "gradients/Sum_106_grad/Size"
input: "gradients/Sum_106_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_106_grad/Shape"
    }
  }
}
, name: "gradients/Sum_106_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_106_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_106_grad/Fill"
op: "Fill"
input: "gradients/Sum_106_grad/Shape_1"
input: "gradients/Sum_106_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_106_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_106_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_106_grad/range"
input: "gradients/Sum_106_grad/mod"
input: "gradients/Sum_106_grad/Shape"
input: "gradients/Sum_106_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_106_grad/Shape"
    }
  }
}
, name: "gradients/Sum_106_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_106_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_106_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_106_grad/DynamicStitch"
input: "gradients/Sum_106_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_106_grad/Shape"
    }
  }
}
, name: "gradients/Sum_106_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_106_grad/Shape"
input: "gradients/Sum_106_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_106_grad/Shape"
    }
  }
}
, name: "gradients/Sum_106_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_58_grad/tuple/control_dependency"
input: "gradients/Sum_106_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_106_grad/Tile"
op: "Tile"
input: "gradients/Sum_106_grad/Reshape"
input: "gradients/Sum_106_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_113_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_113_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_113_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_113_grad/add"
op: "Add"
input: "Sum_113/reduction_indices"
input: "gradients/Sum_113_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_113_grad/Shape"
    }
  }
}
, name: "gradients/Sum_113_grad/mod"
op: "FloorMod"
input: "gradients/Sum_113_grad/add"
input: "gradients/Sum_113_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_113_grad/Shape"
    }
  }
}
, name: "gradients/Sum_113_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_113_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_113_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_113_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_113_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_113_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_113_grad/range"
op: "Range"
input: "gradients/Sum_113_grad/range/start"
input: "gradients/Sum_113_grad/Size"
input: "gradients/Sum_113_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_113_grad/Shape"
    }
  }
}
, name: "gradients/Sum_113_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_113_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_113_grad/Fill"
op: "Fill"
input: "gradients/Sum_113_grad/Shape_1"
input: "gradients/Sum_113_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_113_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_113_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_113_grad/range"
input: "gradients/Sum_113_grad/mod"
input: "gradients/Sum_113_grad/Shape"
input: "gradients/Sum_113_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_113_grad/Shape"
    }
  }
}
, name: "gradients/Sum_113_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_113_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_113_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_113_grad/DynamicStitch"
input: "gradients/Sum_113_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_113_grad/Shape"
    }
  }
}
, name: "gradients/Sum_113_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_113_grad/Shape"
input: "gradients/Sum_113_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_113_grad/Shape"
    }
  }
}
, name: "gradients/Sum_113_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_61_grad/tuple/control_dependency"
input: "gradients/Sum_113_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_113_grad/Tile"
op: "Tile"
input: "gradients/Sum_113_grad/Reshape"
input: "gradients/Sum_113_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_120_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_120_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_120_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_120_grad/add"
op: "Add"
input: "Sum_120/reduction_indices"
input: "gradients/Sum_120_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_120_grad/Shape"
    }
  }
}
, name: "gradients/Sum_120_grad/mod"
op: "FloorMod"
input: "gradients/Sum_120_grad/add"
input: "gradients/Sum_120_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_120_grad/Shape"
    }
  }
}
, name: "gradients/Sum_120_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_120_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_120_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_120_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_120_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_120_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_120_grad/range"
op: "Range"
input: "gradients/Sum_120_grad/range/start"
input: "gradients/Sum_120_grad/Size"
input: "gradients/Sum_120_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_120_grad/Shape"
    }
  }
}
, name: "gradients/Sum_120_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_120_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_120_grad/Fill"
op: "Fill"
input: "gradients/Sum_120_grad/Shape_1"
input: "gradients/Sum_120_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_120_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_120_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_120_grad/range"
input: "gradients/Sum_120_grad/mod"
input: "gradients/Sum_120_grad/Shape"
input: "gradients/Sum_120_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_120_grad/Shape"
    }
  }
}
, name: "gradients/Sum_120_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_120_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_120_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_120_grad/DynamicStitch"
input: "gradients/Sum_120_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_120_grad/Shape"
    }
  }
}
, name: "gradients/Sum_120_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_120_grad/Shape"
input: "gradients/Sum_120_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_120_grad/Shape"
    }
  }
}
, name: "gradients/Sum_120_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_64_grad/tuple/control_dependency"
input: "gradients/Sum_120_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_120_grad/Tile"
op: "Tile"
input: "gradients/Sum_120_grad/Reshape"
input: "gradients/Sum_120_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_127_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_127_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_127_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_127_grad/add"
op: "Add"
input: "Sum_127/reduction_indices"
input: "gradients/Sum_127_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_127_grad/Shape"
    }
  }
}
, name: "gradients/Sum_127_grad/mod"
op: "FloorMod"
input: "gradients/Sum_127_grad/add"
input: "gradients/Sum_127_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_127_grad/Shape"
    }
  }
}
, name: "gradients/Sum_127_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_127_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_127_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_127_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_127_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_127_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_127_grad/range"
op: "Range"
input: "gradients/Sum_127_grad/range/start"
input: "gradients/Sum_127_grad/Size"
input: "gradients/Sum_127_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_127_grad/Shape"
    }
  }
}
, name: "gradients/Sum_127_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_127_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_127_grad/Fill"
op: "Fill"
input: "gradients/Sum_127_grad/Shape_1"
input: "gradients/Sum_127_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_127_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_127_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_127_grad/range"
input: "gradients/Sum_127_grad/mod"
input: "gradients/Sum_127_grad/Shape"
input: "gradients/Sum_127_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_127_grad/Shape"
    }
  }
}
, name: "gradients/Sum_127_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_127_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_127_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_127_grad/DynamicStitch"
input: "gradients/Sum_127_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_127_grad/Shape"
    }
  }
}
, name: "gradients/Sum_127_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_127_grad/Shape"
input: "gradients/Sum_127_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_127_grad/Shape"
    }
  }
}
, name: "gradients/Sum_127_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_67_grad/tuple/control_dependency"
input: "gradients/Sum_127_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_127_grad/Tile"
op: "Tile"
input: "gradients/Sum_127_grad/Reshape"
input: "gradients/Sum_127_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_134_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_134_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_134_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_134_grad/add"
op: "Add"
input: "Sum_134/reduction_indices"
input: "gradients/Sum_134_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_134_grad/Shape"
    }
  }
}
, name: "gradients/Sum_134_grad/mod"
op: "FloorMod"
input: "gradients/Sum_134_grad/add"
input: "gradients/Sum_134_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_134_grad/Shape"
    }
  }
}
, name: "gradients/Sum_134_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_134_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_134_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_134_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_134_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_134_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_134_grad/range"
op: "Range"
input: "gradients/Sum_134_grad/range/start"
input: "gradients/Sum_134_grad/Size"
input: "gradients/Sum_134_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_134_grad/Shape"
    }
  }
}
, name: "gradients/Sum_134_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_134_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_134_grad/Fill"
op: "Fill"
input: "gradients/Sum_134_grad/Shape_1"
input: "gradients/Sum_134_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_134_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_134_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_134_grad/range"
input: "gradients/Sum_134_grad/mod"
input: "gradients/Sum_134_grad/Shape"
input: "gradients/Sum_134_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_134_grad/Shape"
    }
  }
}
, name: "gradients/Sum_134_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_134_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_134_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_134_grad/DynamicStitch"
input: "gradients/Sum_134_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_134_grad/Shape"
    }
  }
}
, name: "gradients/Sum_134_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_134_grad/Shape"
input: "gradients/Sum_134_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_134_grad/Shape"
    }
  }
}
, name: "gradients/Sum_134_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_70_grad/tuple/control_dependency"
input: "gradients/Sum_134_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_134_grad/Tile"
op: "Tile"
input: "gradients/Sum_134_grad/Reshape"
input: "gradients/Sum_134_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_141_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/Sum_141_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_141_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/Sum_141_grad/add"
op: "Add"
input: "Sum_141/reduction_indices"
input: "gradients/Sum_141_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_141_grad/Shape"
    }
  }
}
, name: "gradients/Sum_141_grad/mod"
op: "FloorMod"
input: "gradients/Sum_141_grad/add"
input: "gradients/Sum_141_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_141_grad/Shape"
    }
  }
}
, name: "gradients/Sum_141_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_141_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Sum_141_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_141_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Sum_141_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_141_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_141_grad/range"
op: "Range"
input: "gradients/Sum_141_grad/range/start"
input: "gradients/Sum_141_grad/Size"
input: "gradients/Sum_141_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_141_grad/Shape"
    }
  }
}
, name: "gradients/Sum_141_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_141_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_141_grad/Fill"
op: "Fill"
input: "gradients/Sum_141_grad/Shape_1"
input: "gradients/Sum_141_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_141_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_141_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Sum_141_grad/range"
input: "gradients/Sum_141_grad/mod"
input: "gradients/Sum_141_grad/Shape"
input: "gradients/Sum_141_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_141_grad/Shape"
    }
  }
}
, name: "gradients/Sum_141_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_141_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Sum_141_grad/Maximum"
op: "Maximum"
input: "gradients/Sum_141_grad/DynamicStitch"
input: "gradients/Sum_141_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_141_grad/Shape"
    }
  }
}
, name: "gradients/Sum_141_grad/floordiv"
op: "FloorDiv"
input: "gradients/Sum_141_grad/Shape"
input: "gradients/Sum_141_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sum_141_grad/Shape"
    }
  }
}
, name: "gradients/Sum_141_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_73_grad/tuple/control_dependency"
input: "gradients/Sum_141_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Sum_141_grad/Tile"
op: "Tile"
input: "gradients/Sum_141_grad/Reshape"
input: "gradients/Sum_141_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Switch_59"
op: "Switch"
input: "g_nnpriorZ/dense/Sigmoid"
input: "g_nnpriorZ/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_41"
op: "Identity"
input: "gradients/Switch_59"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_42"
op: "Shape"
input: "gradients/Switch_59"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_41/Const"
op: "Const"
input: "^gradients/Identity_41"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_41"
op: "Fill"
input: "gradients/Shape_42"
input: "gradients/zeros_41/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_41"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/add_16_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_16_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_16_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_16_grad/Shape"
input: "gradients/add_16_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_16_grad/Sum"
op: "Sum"
input: "gradients/Sum_8_grad/Tile"
input: "gradients/add_16_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_16_grad/Reshape"
op: "Reshape"
input: "gradients/add_16_grad/Sum"
input: "gradients/add_16_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_16_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_8_grad/Tile"
input: "gradients/add_16_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_16_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_16_grad/Sum_1"
input: "gradients/add_16_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_16_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_16_grad/Reshape"
input: "^gradients/add_16_grad/Reshape_1"
, name: "gradients/add_16_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_16_grad/Reshape"
input: "^gradients/add_16_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_16_grad/Reshape"
    }
  }
}
, name: "gradients/add_16_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_16_grad/Reshape_1"
input: "^gradients/add_16_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_16_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_20_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_20_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_20_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_20_grad/Shape"
input: "gradients/add_20_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_20_grad/Sum"
op: "Sum"
input: "gradients/Sum_15_grad/Tile"
input: "gradients/add_20_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_20_grad/Reshape"
op: "Reshape"
input: "gradients/add_20_grad/Sum"
input: "gradients/add_20_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_20_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_15_grad/Tile"
input: "gradients/add_20_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_20_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_20_grad/Sum_1"
input: "gradients/add_20_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_20_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_20_grad/Reshape"
input: "^gradients/add_20_grad/Reshape_1"
, name: "gradients/add_20_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_20_grad/Reshape"
input: "^gradients/add_20_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_20_grad/Reshape"
    }
  }
}
, name: "gradients/add_20_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_20_grad/Reshape_1"
input: "^gradients/add_20_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_20_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_24_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_24_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_24_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_24_grad/Shape"
input: "gradients/add_24_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_24_grad/Sum"
op: "Sum"
input: "gradients/Sum_22_grad/Tile"
input: "gradients/add_24_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_24_grad/Reshape"
op: "Reshape"
input: "gradients/add_24_grad/Sum"
input: "gradients/add_24_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_24_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_22_grad/Tile"
input: "gradients/add_24_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_24_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_24_grad/Sum_1"
input: "gradients/add_24_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_24_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_24_grad/Reshape"
input: "^gradients/add_24_grad/Reshape_1"
, name: "gradients/add_24_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_24_grad/Reshape"
input: "^gradients/add_24_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_24_grad/Reshape"
    }
  }
}
, name: "gradients/add_24_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_24_grad/Reshape_1"
input: "^gradients/add_24_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_24_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_28_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_28_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_28_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_28_grad/Shape"
input: "gradients/add_28_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_28_grad/Sum"
op: "Sum"
input: "gradients/Sum_29_grad/Tile"
input: "gradients/add_28_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_28_grad/Reshape"
op: "Reshape"
input: "gradients/add_28_grad/Sum"
input: "gradients/add_28_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_28_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_29_grad/Tile"
input: "gradients/add_28_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_28_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_28_grad/Sum_1"
input: "gradients/add_28_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_28_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_28_grad/Reshape"
input: "^gradients/add_28_grad/Reshape_1"
, name: "gradients/add_28_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_28_grad/Reshape"
input: "^gradients/add_28_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_28_grad/Reshape"
    }
  }
}
, name: "gradients/add_28_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_28_grad/Reshape_1"
input: "^gradients/add_28_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_28_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_32_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_32_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_32_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_32_grad/Shape"
input: "gradients/add_32_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_32_grad/Sum"
op: "Sum"
input: "gradients/Sum_36_grad/Tile"
input: "gradients/add_32_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_32_grad/Reshape"
op: "Reshape"
input: "gradients/add_32_grad/Sum"
input: "gradients/add_32_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_32_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_36_grad/Tile"
input: "gradients/add_32_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_32_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_32_grad/Sum_1"
input: "gradients/add_32_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_32_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_32_grad/Reshape"
input: "^gradients/add_32_grad/Reshape_1"
, name: "gradients/add_32_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_32_grad/Reshape"
input: "^gradients/add_32_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_32_grad/Reshape"
    }
  }
}
, name: "gradients/add_32_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_32_grad/Reshape_1"
input: "^gradients/add_32_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_32_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_36_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_36_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_36_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_36_grad/Shape"
input: "gradients/add_36_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_36_grad/Sum"
op: "Sum"
input: "gradients/Sum_43_grad/Tile"
input: "gradients/add_36_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_36_grad/Reshape"
op: "Reshape"
input: "gradients/add_36_grad/Sum"
input: "gradients/add_36_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_36_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_43_grad/Tile"
input: "gradients/add_36_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_36_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_36_grad/Sum_1"
input: "gradients/add_36_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_36_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_36_grad/Reshape"
input: "^gradients/add_36_grad/Reshape_1"
, name: "gradients/add_36_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_36_grad/Reshape"
input: "^gradients/add_36_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_36_grad/Reshape"
    }
  }
}
, name: "gradients/add_36_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_36_grad/Reshape_1"
input: "^gradients/add_36_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_36_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_40_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_40_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_40_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_40_grad/Shape"
input: "gradients/add_40_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_40_grad/Sum"
op: "Sum"
input: "gradients/Sum_50_grad/Tile"
input: "gradients/add_40_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_40_grad/Reshape"
op: "Reshape"
input: "gradients/add_40_grad/Sum"
input: "gradients/add_40_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_40_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_50_grad/Tile"
input: "gradients/add_40_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_40_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_40_grad/Sum_1"
input: "gradients/add_40_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_40_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_40_grad/Reshape"
input: "^gradients/add_40_grad/Reshape_1"
, name: "gradients/add_40_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_40_grad/Reshape"
input: "^gradients/add_40_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_40_grad/Reshape"
    }
  }
}
, name: "gradients/add_40_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_40_grad/Reshape_1"
input: "^gradients/add_40_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_40_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_44_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_44_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_44_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_44_grad/Shape"
input: "gradients/add_44_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_44_grad/Sum"
op: "Sum"
input: "gradients/Sum_57_grad/Tile"
input: "gradients/add_44_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_44_grad/Reshape"
op: "Reshape"
input: "gradients/add_44_grad/Sum"
input: "gradients/add_44_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_44_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_57_grad/Tile"
input: "gradients/add_44_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_44_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_44_grad/Sum_1"
input: "gradients/add_44_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_44_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_44_grad/Reshape"
input: "^gradients/add_44_grad/Reshape_1"
, name: "gradients/add_44_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_44_grad/Reshape"
input: "^gradients/add_44_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_44_grad/Reshape"
    }
  }
}
, name: "gradients/add_44_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_44_grad/Reshape_1"
input: "^gradients/add_44_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_44_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_48_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_48_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_48_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_48_grad/Shape"
input: "gradients/add_48_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_48_grad/Sum"
op: "Sum"
input: "gradients/Sum_64_grad/Tile"
input: "gradients/add_48_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_48_grad/Reshape"
op: "Reshape"
input: "gradients/add_48_grad/Sum"
input: "gradients/add_48_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_48_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_64_grad/Tile"
input: "gradients/add_48_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_48_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_48_grad/Sum_1"
input: "gradients/add_48_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_48_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_48_grad/Reshape"
input: "^gradients/add_48_grad/Reshape_1"
, name: "gradients/add_48_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_48_grad/Reshape"
input: "^gradients/add_48_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_48_grad/Reshape"
    }
  }
}
, name: "gradients/add_48_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_48_grad/Reshape_1"
input: "^gradients/add_48_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_48_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_52_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_52_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_52_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_52_grad/Shape"
input: "gradients/add_52_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_52_grad/Sum"
op: "Sum"
input: "gradients/Sum_71_grad/Tile"
input: "gradients/add_52_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_52_grad/Reshape"
op: "Reshape"
input: "gradients/add_52_grad/Sum"
input: "gradients/add_52_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_52_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_71_grad/Tile"
input: "gradients/add_52_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_52_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_52_grad/Sum_1"
input: "gradients/add_52_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_52_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_52_grad/Reshape"
input: "^gradients/add_52_grad/Reshape_1"
, name: "gradients/add_52_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_52_grad/Reshape"
input: "^gradients/add_52_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_52_grad/Reshape"
    }
  }
}
, name: "gradients/add_52_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_52_grad/Reshape_1"
input: "^gradients/add_52_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_52_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_56_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_56_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_56_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_56_grad/Shape"
input: "gradients/add_56_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_56_grad/Sum"
op: "Sum"
input: "gradients/Sum_78_grad/Tile"
input: "gradients/add_56_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_56_grad/Reshape"
op: "Reshape"
input: "gradients/add_56_grad/Sum"
input: "gradients/add_56_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_56_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_78_grad/Tile"
input: "gradients/add_56_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_56_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_56_grad/Sum_1"
input: "gradients/add_56_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_56_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_56_grad/Reshape"
input: "^gradients/add_56_grad/Reshape_1"
, name: "gradients/add_56_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_56_grad/Reshape"
input: "^gradients/add_56_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_56_grad/Reshape"
    }
  }
}
, name: "gradients/add_56_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_56_grad/Reshape_1"
input: "^gradients/add_56_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_56_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_60_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_60_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_60_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_60_grad/Shape"
input: "gradients/add_60_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_60_grad/Sum"
op: "Sum"
input: "gradients/Sum_85_grad/Tile"
input: "gradients/add_60_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_60_grad/Reshape"
op: "Reshape"
input: "gradients/add_60_grad/Sum"
input: "gradients/add_60_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_60_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_85_grad/Tile"
input: "gradients/add_60_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_60_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_60_grad/Sum_1"
input: "gradients/add_60_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_60_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_60_grad/Reshape"
input: "^gradients/add_60_grad/Reshape_1"
, name: "gradients/add_60_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_60_grad/Reshape"
input: "^gradients/add_60_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_60_grad/Reshape"
    }
  }
}
, name: "gradients/add_60_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_60_grad/Reshape_1"
input: "^gradients/add_60_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_60_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_64_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_64_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_64_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_64_grad/Shape"
input: "gradients/add_64_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_64_grad/Sum"
op: "Sum"
input: "gradients/Sum_92_grad/Tile"
input: "gradients/add_64_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_64_grad/Reshape"
op: "Reshape"
input: "gradients/add_64_grad/Sum"
input: "gradients/add_64_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_64_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_92_grad/Tile"
input: "gradients/add_64_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_64_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_64_grad/Sum_1"
input: "gradients/add_64_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_64_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_64_grad/Reshape"
input: "^gradients/add_64_grad/Reshape_1"
, name: "gradients/add_64_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_64_grad/Reshape"
input: "^gradients/add_64_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_64_grad/Reshape"
    }
  }
}
, name: "gradients/add_64_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_64_grad/Reshape_1"
input: "^gradients/add_64_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_64_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_68_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_68_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_68_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_68_grad/Shape"
input: "gradients/add_68_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_68_grad/Sum"
op: "Sum"
input: "gradients/Sum_99_grad/Tile"
input: "gradients/add_68_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_68_grad/Reshape"
op: "Reshape"
input: "gradients/add_68_grad/Sum"
input: "gradients/add_68_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_68_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_99_grad/Tile"
input: "gradients/add_68_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_68_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_68_grad/Sum_1"
input: "gradients/add_68_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_68_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_68_grad/Reshape"
input: "^gradients/add_68_grad/Reshape_1"
, name: "gradients/add_68_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_68_grad/Reshape"
input: "^gradients/add_68_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_68_grad/Reshape"
    }
  }
}
, name: "gradients/add_68_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_68_grad/Reshape_1"
input: "^gradients/add_68_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_68_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_72_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_72_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_72_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_72_grad/Shape"
input: "gradients/add_72_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_72_grad/Sum"
op: "Sum"
input: "gradients/Sum_106_grad/Tile"
input: "gradients/add_72_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_72_grad/Reshape"
op: "Reshape"
input: "gradients/add_72_grad/Sum"
input: "gradients/add_72_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_72_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_106_grad/Tile"
input: "gradients/add_72_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_72_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_72_grad/Sum_1"
input: "gradients/add_72_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_72_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_72_grad/Reshape"
input: "^gradients/add_72_grad/Reshape_1"
, name: "gradients/add_72_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_72_grad/Reshape"
input: "^gradients/add_72_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_72_grad/Reshape"
    }
  }
}
, name: "gradients/add_72_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_72_grad/Reshape_1"
input: "^gradients/add_72_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_72_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_76_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_76_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_76_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_76_grad/Shape"
input: "gradients/add_76_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_76_grad/Sum"
op: "Sum"
input: "gradients/Sum_113_grad/Tile"
input: "gradients/add_76_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_76_grad/Reshape"
op: "Reshape"
input: "gradients/add_76_grad/Sum"
input: "gradients/add_76_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_76_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_113_grad/Tile"
input: "gradients/add_76_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_76_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_76_grad/Sum_1"
input: "gradients/add_76_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_76_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_76_grad/Reshape"
input: "^gradients/add_76_grad/Reshape_1"
, name: "gradients/add_76_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_76_grad/Reshape"
input: "^gradients/add_76_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_76_grad/Reshape"
    }
  }
}
, name: "gradients/add_76_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_76_grad/Reshape_1"
input: "^gradients/add_76_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_76_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_80_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_80_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_80_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_80_grad/Shape"
input: "gradients/add_80_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_80_grad/Sum"
op: "Sum"
input: "gradients/Sum_120_grad/Tile"
input: "gradients/add_80_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_80_grad/Reshape"
op: "Reshape"
input: "gradients/add_80_grad/Sum"
input: "gradients/add_80_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_80_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_120_grad/Tile"
input: "gradients/add_80_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_80_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_80_grad/Sum_1"
input: "gradients/add_80_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_80_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_80_grad/Reshape"
input: "^gradients/add_80_grad/Reshape_1"
, name: "gradients/add_80_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_80_grad/Reshape"
input: "^gradients/add_80_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_80_grad/Reshape"
    }
  }
}
, name: "gradients/add_80_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_80_grad/Reshape_1"
input: "^gradients/add_80_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_80_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_84_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_84_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_84_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_84_grad/Shape"
input: "gradients/add_84_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_84_grad/Sum"
op: "Sum"
input: "gradients/Sum_127_grad/Tile"
input: "gradients/add_84_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_84_grad/Reshape"
op: "Reshape"
input: "gradients/add_84_grad/Sum"
input: "gradients/add_84_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_84_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_127_grad/Tile"
input: "gradients/add_84_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_84_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_84_grad/Sum_1"
input: "gradients/add_84_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_84_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_84_grad/Reshape"
input: "^gradients/add_84_grad/Reshape_1"
, name: "gradients/add_84_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_84_grad/Reshape"
input: "^gradients/add_84_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_84_grad/Reshape"
    }
  }
}
, name: "gradients/add_84_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_84_grad/Reshape_1"
input: "^gradients/add_84_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_84_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_88_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_88_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_88_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_88_grad/Shape"
input: "gradients/add_88_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_88_grad/Sum"
op: "Sum"
input: "gradients/Sum_134_grad/Tile"
input: "gradients/add_88_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_88_grad/Reshape"
op: "Reshape"
input: "gradients/add_88_grad/Sum"
input: "gradients/add_88_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_88_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_134_grad/Tile"
input: "gradients/add_88_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_88_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_88_grad/Sum_1"
input: "gradients/add_88_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_88_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_88_grad/Reshape"
input: "^gradients/add_88_grad/Reshape_1"
, name: "gradients/add_88_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_88_grad/Reshape"
input: "^gradients/add_88_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_88_grad/Reshape"
    }
  }
}
, name: "gradients/add_88_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_88_grad/Reshape_1"
input: "^gradients/add_88_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_88_grad/Reshape_1"
    }
  }
}
, name: "gradients/add_92_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/add_92_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/add_92_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/add_92_grad/Shape"
input: "gradients/add_92_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_92_grad/Sum"
op: "Sum"
input: "gradients/Sum_141_grad/Tile"
input: "gradients/add_92_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_92_grad/Reshape"
op: "Reshape"
input: "gradients/add_92_grad/Sum"
input: "gradients/add_92_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_92_grad/Sum_1"
op: "Sum"
input: "gradients/Sum_141_grad/Tile"
input: "gradients/add_92_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/add_92_grad/Reshape_1"
op: "Reshape"
input: "gradients/add_92_grad/Sum_1"
input: "gradients/add_92_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/add_92_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/add_92_grad/Reshape"
input: "^gradients/add_92_grad/Reshape_1"
, name: "gradients/add_92_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/add_92_grad/Reshape"
input: "^gradients/add_92_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_92_grad/Reshape"
    }
  }
}
, name: "gradients/add_92_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/add_92_grad/Reshape_1"
input: "^gradients/add_92_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/add_92_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_64"
op: "AddN"
input: "gradients/g_nnpriorZ/dropout_1/cond/Identity/Switch_grad/cond_grad"
input: "gradients/g_nnpriorZ/dropout_1/cond/dropout/div/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dropout_1/cond/Identity/Switch_grad/cond_grad"
    }
  }
}
, name: "gradients/g_nnpriorZ/dense/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "g_nnpriorZ/dense/Sigmoid"
input: "gradients/AddN_64"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/MatMul_16_grad/MatMul"
op: "MatMul"
input: "gradients/add_16_grad/tuple/control_dependency"
input: "strided_slice"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_16_grad/MatMul_1"
op: "MatMul"
input: "Diag_1"
input: "gradients/add_16_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_16_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_16_grad/MatMul"
input: "^gradients/MatMul_16_grad/MatMul_1"
, name: "gradients/MatMul_16_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_16_grad/MatMul"
input: "^gradients/MatMul_16_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_16_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_16_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_16_grad/MatMul_1"
input: "^gradients/MatMul_16_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_16_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_23_grad/MatMul"
op: "MatMul"
input: "gradients/add_20_grad/tuple/control_dependency"
input: "strided_slice_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_23_grad/MatMul_1"
op: "MatMul"
input: "Diag_4"
input: "gradients/add_20_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_23_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_23_grad/MatMul"
input: "^gradients/MatMul_23_grad/MatMul_1"
, name: "gradients/MatMul_23_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_23_grad/MatMul"
input: "^gradients/MatMul_23_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_23_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_23_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_23_grad/MatMul_1"
input: "^gradients/MatMul_23_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_23_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_30_grad/MatMul"
op: "MatMul"
input: "gradients/add_24_grad/tuple/control_dependency"
input: "strided_slice_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_30_grad/MatMul_1"
op: "MatMul"
input: "Diag_7"
input: "gradients/add_24_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_30_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_30_grad/MatMul"
input: "^gradients/MatMul_30_grad/MatMul_1"
, name: "gradients/MatMul_30_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_30_grad/MatMul"
input: "^gradients/MatMul_30_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_30_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_30_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_30_grad/MatMul_1"
input: "^gradients/MatMul_30_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_30_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_37_grad/MatMul"
op: "MatMul"
input: "gradients/add_28_grad/tuple/control_dependency"
input: "strided_slice_9"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_37_grad/MatMul_1"
op: "MatMul"
input: "Diag_10"
input: "gradients/add_28_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_37_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_37_grad/MatMul"
input: "^gradients/MatMul_37_grad/MatMul_1"
, name: "gradients/MatMul_37_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_37_grad/MatMul"
input: "^gradients/MatMul_37_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_37_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_37_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_37_grad/MatMul_1"
input: "^gradients/MatMul_37_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_37_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_44_grad/MatMul"
op: "MatMul"
input: "gradients/add_32_grad/tuple/control_dependency"
input: "strided_slice_12"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_44_grad/MatMul_1"
op: "MatMul"
input: "Diag_13"
input: "gradients/add_32_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_44_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_44_grad/MatMul"
input: "^gradients/MatMul_44_grad/MatMul_1"
, name: "gradients/MatMul_44_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_44_grad/MatMul"
input: "^gradients/MatMul_44_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_44_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_44_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_44_grad/MatMul_1"
input: "^gradients/MatMul_44_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_44_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_51_grad/MatMul"
op: "MatMul"
input: "gradients/add_36_grad/tuple/control_dependency"
input: "strided_slice_15"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_51_grad/MatMul_1"
op: "MatMul"
input: "Diag_16"
input: "gradients/add_36_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_51_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_51_grad/MatMul"
input: "^gradients/MatMul_51_grad/MatMul_1"
, name: "gradients/MatMul_51_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_51_grad/MatMul"
input: "^gradients/MatMul_51_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_51_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_51_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_51_grad/MatMul_1"
input: "^gradients/MatMul_51_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_51_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_58_grad/MatMul"
op: "MatMul"
input: "gradients/add_40_grad/tuple/control_dependency"
input: "strided_slice_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_58_grad/MatMul_1"
op: "MatMul"
input: "Diag_19"
input: "gradients/add_40_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_58_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_58_grad/MatMul"
input: "^gradients/MatMul_58_grad/MatMul_1"
, name: "gradients/MatMul_58_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_58_grad/MatMul"
input: "^gradients/MatMul_58_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_58_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_58_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_58_grad/MatMul_1"
input: "^gradients/MatMul_58_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_58_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_65_grad/MatMul"
op: "MatMul"
input: "gradients/add_44_grad/tuple/control_dependency"
input: "strided_slice_21"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_65_grad/MatMul_1"
op: "MatMul"
input: "Diag_22"
input: "gradients/add_44_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_65_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_65_grad/MatMul"
input: "^gradients/MatMul_65_grad/MatMul_1"
, name: "gradients/MatMul_65_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_65_grad/MatMul"
input: "^gradients/MatMul_65_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_65_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_65_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_65_grad/MatMul_1"
input: "^gradients/MatMul_65_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_65_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_72_grad/MatMul"
op: "MatMul"
input: "gradients/add_48_grad/tuple/control_dependency"
input: "strided_slice_24"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_72_grad/MatMul_1"
op: "MatMul"
input: "Diag_25"
input: "gradients/add_48_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_72_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_72_grad/MatMul"
input: "^gradients/MatMul_72_grad/MatMul_1"
, name: "gradients/MatMul_72_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_72_grad/MatMul"
input: "^gradients/MatMul_72_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_72_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_72_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_72_grad/MatMul_1"
input: "^gradients/MatMul_72_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_72_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_79_grad/MatMul"
op: "MatMul"
input: "gradients/add_52_grad/tuple/control_dependency"
input: "strided_slice_27"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_79_grad/MatMul_1"
op: "MatMul"
input: "Diag_28"
input: "gradients/add_52_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_79_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_79_grad/MatMul"
input: "^gradients/MatMul_79_grad/MatMul_1"
, name: "gradients/MatMul_79_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_79_grad/MatMul"
input: "^gradients/MatMul_79_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_79_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_79_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_79_grad/MatMul_1"
input: "^gradients/MatMul_79_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_79_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_86_grad/MatMul"
op: "MatMul"
input: "gradients/add_56_grad/tuple/control_dependency"
input: "strided_slice_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_86_grad/MatMul_1"
op: "MatMul"
input: "Diag_31"
input: "gradients/add_56_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_86_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_86_grad/MatMul"
input: "^gradients/MatMul_86_grad/MatMul_1"
, name: "gradients/MatMul_86_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_86_grad/MatMul"
input: "^gradients/MatMul_86_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_86_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_86_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_86_grad/MatMul_1"
input: "^gradients/MatMul_86_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_86_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_93_grad/MatMul"
op: "MatMul"
input: "gradients/add_60_grad/tuple/control_dependency"
input: "strided_slice_33"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_93_grad/MatMul_1"
op: "MatMul"
input: "Diag_34"
input: "gradients/add_60_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_93_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_93_grad/MatMul"
input: "^gradients/MatMul_93_grad/MatMul_1"
, name: "gradients/MatMul_93_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_93_grad/MatMul"
input: "^gradients/MatMul_93_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_93_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_93_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_93_grad/MatMul_1"
input: "^gradients/MatMul_93_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_93_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_100_grad/MatMul"
op: "MatMul"
input: "gradients/add_64_grad/tuple/control_dependency"
input: "strided_slice_36"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_100_grad/MatMul_1"
op: "MatMul"
input: "Diag_37"
input: "gradients/add_64_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_100_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_100_grad/MatMul"
input: "^gradients/MatMul_100_grad/MatMul_1"
, name: "gradients/MatMul_100_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_100_grad/MatMul"
input: "^gradients/MatMul_100_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_100_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_100_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_100_grad/MatMul_1"
input: "^gradients/MatMul_100_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_100_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_107_grad/MatMul"
op: "MatMul"
input: "gradients/add_68_grad/tuple/control_dependency"
input: "strided_slice_39"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_107_grad/MatMul_1"
op: "MatMul"
input: "Diag_40"
input: "gradients/add_68_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_107_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_107_grad/MatMul"
input: "^gradients/MatMul_107_grad/MatMul_1"
, name: "gradients/MatMul_107_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_107_grad/MatMul"
input: "^gradients/MatMul_107_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_107_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_107_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_107_grad/MatMul_1"
input: "^gradients/MatMul_107_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_107_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_114_grad/MatMul"
op: "MatMul"
input: "gradients/add_72_grad/tuple/control_dependency"
input: "strided_slice_42"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_114_grad/MatMul_1"
op: "MatMul"
input: "Diag_43"
input: "gradients/add_72_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_114_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_114_grad/MatMul"
input: "^gradients/MatMul_114_grad/MatMul_1"
, name: "gradients/MatMul_114_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_114_grad/MatMul"
input: "^gradients/MatMul_114_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_114_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_114_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_114_grad/MatMul_1"
input: "^gradients/MatMul_114_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_114_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_121_grad/MatMul"
op: "MatMul"
input: "gradients/add_76_grad/tuple/control_dependency"
input: "strided_slice_45"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_121_grad/MatMul_1"
op: "MatMul"
input: "Diag_46"
input: "gradients/add_76_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_121_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_121_grad/MatMul"
input: "^gradients/MatMul_121_grad/MatMul_1"
, name: "gradients/MatMul_121_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_121_grad/MatMul"
input: "^gradients/MatMul_121_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_121_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_121_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_121_grad/MatMul_1"
input: "^gradients/MatMul_121_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_121_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_128_grad/MatMul"
op: "MatMul"
input: "gradients/add_80_grad/tuple/control_dependency"
input: "strided_slice_48"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_128_grad/MatMul_1"
op: "MatMul"
input: "Diag_49"
input: "gradients/add_80_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_128_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_128_grad/MatMul"
input: "^gradients/MatMul_128_grad/MatMul_1"
, name: "gradients/MatMul_128_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_128_grad/MatMul"
input: "^gradients/MatMul_128_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_128_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_128_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_128_grad/MatMul_1"
input: "^gradients/MatMul_128_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_128_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_135_grad/MatMul"
op: "MatMul"
input: "gradients/add_84_grad/tuple/control_dependency"
input: "strided_slice_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_135_grad/MatMul_1"
op: "MatMul"
input: "Diag_52"
input: "gradients/add_84_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_135_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_135_grad/MatMul"
input: "^gradients/MatMul_135_grad/MatMul_1"
, name: "gradients/MatMul_135_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_135_grad/MatMul"
input: "^gradients/MatMul_135_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_135_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_135_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_135_grad/MatMul_1"
input: "^gradients/MatMul_135_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_135_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_142_grad/MatMul"
op: "MatMul"
input: "gradients/add_88_grad/tuple/control_dependency"
input: "strided_slice_54"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_142_grad/MatMul_1"
op: "MatMul"
input: "Diag_55"
input: "gradients/add_88_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_142_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_142_grad/MatMul"
input: "^gradients/MatMul_142_grad/MatMul_1"
, name: "gradients/MatMul_142_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_142_grad/MatMul"
input: "^gradients/MatMul_142_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_142_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_142_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_142_grad/MatMul_1"
input: "^gradients/MatMul_142_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_142_grad/MatMul_1"
    }
  }
}
, name: "gradients/MatMul_149_grad/MatMul"
op: "MatMul"
input: "gradients/add_92_grad/tuple/control_dependency"
input: "strided_slice_57"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/MatMul_149_grad/MatMul_1"
op: "MatMul"
input: "Diag_58"
input: "gradients/add_92_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/MatMul_149_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_149_grad/MatMul"
input: "^gradients/MatMul_149_grad/MatMul_1"
, name: "gradients/MatMul_149_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_149_grad/MatMul"
input: "^gradients/MatMul_149_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_149_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_149_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_149_grad/MatMul_1"
input: "^gradients/MatMul_149_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_149_grad/MatMul_1"
    }
  }
}
, name: "gradients/g_nnpriorZ/dense/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/g_nnpriorZ/dense/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/g_nnpriorZ/dense/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpriorZ/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/g_nnpriorZ/dense/Sigmoid_grad/SigmoidGrad"
, name: "gradients/g_nnpriorZ/dense/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpriorZ/dense/Sigmoid_grad/SigmoidGrad"
input: "^gradients/g_nnpriorZ/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dense/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/g_nnpriorZ/dense/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpriorZ/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/g_nnpriorZ/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dense/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/AddN_65"
op: "AddN"
input: "gradients/sub_4_grad/tuple/control_dependency"
input: "gradients/MatMul_16_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_4_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_grad/Shape"
input: "strided_slice/stack"
input: "strided_slice/stack_1"
input: "strided_slice/stack_2"
input: "gradients/AddN_65"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_66"
op: "AddN"
input: "gradients/sub_8_grad/tuple/control_dependency"
input: "gradients/MatMul_23_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_8_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_3_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_3_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_3_grad/Shape"
input: "strided_slice_3/stack"
input: "strided_slice_3/stack_1"
input: "strided_slice_3/stack_2"
input: "gradients/AddN_66"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_67"
op: "AddN"
input: "gradients/sub_12_grad/tuple/control_dependency"
input: "gradients/MatMul_30_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_12_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_6_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_6_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_6_grad/Shape"
input: "strided_slice_6/stack"
input: "strided_slice_6/stack_1"
input: "strided_slice_6/stack_2"
input: "gradients/AddN_67"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_68"
op: "AddN"
input: "gradients/sub_16_grad/tuple/control_dependency"
input: "gradients/MatMul_37_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_16_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_9_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_9_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_9_grad/Shape"
input: "strided_slice_9/stack"
input: "strided_slice_9/stack_1"
input: "strided_slice_9/stack_2"
input: "gradients/AddN_68"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_69"
op: "AddN"
input: "gradients/sub_20_grad/tuple/control_dependency"
input: "gradients/MatMul_44_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_20_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_12_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_12_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_12_grad/Shape"
input: "strided_slice_12/stack"
input: "strided_slice_12/stack_1"
input: "strided_slice_12/stack_2"
input: "gradients/AddN_69"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_70"
op: "AddN"
input: "gradients/sub_24_grad/tuple/control_dependency"
input: "gradients/MatMul_51_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_24_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_15_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_15_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_15_grad/Shape"
input: "strided_slice_15/stack"
input: "strided_slice_15/stack_1"
input: "strided_slice_15/stack_2"
input: "gradients/AddN_70"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_71"
op: "AddN"
input: "gradients/sub_28_grad/tuple/control_dependency"
input: "gradients/MatMul_58_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_28_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_18_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_18_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_18_grad/Shape"
input: "strided_slice_18/stack"
input: "strided_slice_18/stack_1"
input: "strided_slice_18/stack_2"
input: "gradients/AddN_71"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_72"
op: "AddN"
input: "gradients/sub_32_grad/tuple/control_dependency"
input: "gradients/MatMul_65_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_32_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_21_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_21_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_21_grad/Shape"
input: "strided_slice_21/stack"
input: "strided_slice_21/stack_1"
input: "strided_slice_21/stack_2"
input: "gradients/AddN_72"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_73"
op: "AddN"
input: "gradients/sub_36_grad/tuple/control_dependency"
input: "gradients/MatMul_72_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_36_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_24_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_24_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_24_grad/Shape"
input: "strided_slice_24/stack"
input: "strided_slice_24/stack_1"
input: "strided_slice_24/stack_2"
input: "gradients/AddN_73"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_74"
op: "AddN"
input: "gradients/sub_40_grad/tuple/control_dependency"
input: "gradients/MatMul_79_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_40_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_27_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_27_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_27_grad/Shape"
input: "strided_slice_27/stack"
input: "strided_slice_27/stack_1"
input: "strided_slice_27/stack_2"
input: "gradients/AddN_74"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_75"
op: "AddN"
input: "gradients/sub_44_grad/tuple/control_dependency"
input: "gradients/MatMul_86_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_44_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_30_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_30_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_30_grad/Shape"
input: "strided_slice_30/stack"
input: "strided_slice_30/stack_1"
input: "strided_slice_30/stack_2"
input: "gradients/AddN_75"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_76"
op: "AddN"
input: "gradients/sub_48_grad/tuple/control_dependency"
input: "gradients/MatMul_93_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_48_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_33_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_33_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_33_grad/Shape"
input: "strided_slice_33/stack"
input: "strided_slice_33/stack_1"
input: "strided_slice_33/stack_2"
input: "gradients/AddN_76"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_77"
op: "AddN"
input: "gradients/sub_52_grad/tuple/control_dependency"
input: "gradients/MatMul_100_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_52_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_36_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_36_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_36_grad/Shape"
input: "strided_slice_36/stack"
input: "strided_slice_36/stack_1"
input: "strided_slice_36/stack_2"
input: "gradients/AddN_77"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_78"
op: "AddN"
input: "gradients/sub_56_grad/tuple/control_dependency"
input: "gradients/MatMul_107_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_56_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_39_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_39_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_39_grad/Shape"
input: "strided_slice_39/stack"
input: "strided_slice_39/stack_1"
input: "strided_slice_39/stack_2"
input: "gradients/AddN_78"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_79"
op: "AddN"
input: "gradients/sub_60_grad/tuple/control_dependency"
input: "gradients/MatMul_114_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_60_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_42_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_42_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_42_grad/Shape"
input: "strided_slice_42/stack"
input: "strided_slice_42/stack_1"
input: "strided_slice_42/stack_2"
input: "gradients/AddN_79"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_80"
op: "AddN"
input: "gradients/sub_64_grad/tuple/control_dependency"
input: "gradients/MatMul_121_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_64_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_45_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_45_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_45_grad/Shape"
input: "strided_slice_45/stack"
input: "strided_slice_45/stack_1"
input: "strided_slice_45/stack_2"
input: "gradients/AddN_80"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_81"
op: "AddN"
input: "gradients/sub_68_grad/tuple/control_dependency"
input: "gradients/MatMul_128_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_68_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_48_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_48_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_48_grad/Shape"
input: "strided_slice_48/stack"
input: "strided_slice_48/stack_1"
input: "strided_slice_48/stack_2"
input: "gradients/AddN_81"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_82"
op: "AddN"
input: "gradients/sub_72_grad/tuple/control_dependency"
input: "gradients/MatMul_135_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_72_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_51_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_51_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_51_grad/Shape"
input: "strided_slice_51/stack"
input: "strided_slice_51/stack_1"
input: "strided_slice_51/stack_2"
input: "gradients/AddN_82"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_83"
op: "AddN"
input: "gradients/sub_76_grad/tuple/control_dependency"
input: "gradients/MatMul_142_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_76_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_54_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_54_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_54_grad/Shape"
input: "strided_slice_54/stack"
input: "strided_slice_54/stack_1"
input: "strided_slice_54/stack_2"
input: "gradients/AddN_83"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/AddN_84"
op: "AddN"
input: "gradients/sub_80_grad/tuple/control_dependency"
input: "gradients/MatMul_149_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/sub_80_grad/Reshape"
    }
  }
}
, name: "gradients/strided_slice_57_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/strided_slice_57_grad/StridedSliceGrad"
op: "StridedSliceGrad"
input: "gradients/strided_slice_57_grad/Shape"
input: "strided_slice_57/stack"
input: "strided_slice_57/stack_1"
input: "strided_slice_57/stack_2"
input: "gradients/AddN_84"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "begin_mask"
  value {
    i: 0
  }
}
attr {
  key: "ellipsis_mask"
  value {
    i: 0
  }
}
attr {
  key: "end_mask"
  value {
    i: 0
  }
}
attr {
  key: "new_axis_mask"
  value {
    i: 0
  }
}
attr {
  key: "shrink_axis_mask"
  value {
    i: 1
  }
}
, name: "gradients/g_nnpriorZ/dense/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/g_nnpriorZ/dense/BiasAdd_grad/tuple/control_dependency"
input: "g_nnpriorZ/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/g_nnpriorZ/dense/MatMul_grad/MatMul_1"
op: "MatMul"
input: "g_nnpriorZ/dropout/cond/Merge"
input: "gradients/g_nnpriorZ/dense/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/g_nnpriorZ/dense/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpriorZ/dense/MatMul_grad/MatMul"
input: "^gradients/g_nnpriorZ/dense/MatMul_grad/MatMul_1"
, name: "gradients/g_nnpriorZ/dense/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpriorZ/dense/MatMul_grad/MatMul"
input: "^gradients/g_nnpriorZ/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpriorZ/dense/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpriorZ/dense/MatMul_grad/MatMul_1"
input: "^gradients/g_nnpriorZ/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dense/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_85"
op: "AddN"
input: "gradients/strided_slice_grad/StridedSliceGrad"
input: "gradients/strided_slice_3_grad/StridedSliceGrad"
input: "gradients/strided_slice_6_grad/StridedSliceGrad"
input: "gradients/strided_slice_9_grad/StridedSliceGrad"
input: "gradients/strided_slice_12_grad/StridedSliceGrad"
input: "gradients/strided_slice_15_grad/StridedSliceGrad"
input: "gradients/strided_slice_18_grad/StridedSliceGrad"
input: "gradients/strided_slice_21_grad/StridedSliceGrad"
input: "gradients/strided_slice_24_grad/StridedSliceGrad"
input: "gradients/strided_slice_27_grad/StridedSliceGrad"
input: "gradients/strided_slice_30_grad/StridedSliceGrad"
input: "gradients/strided_slice_33_grad/StridedSliceGrad"
input: "gradients/strided_slice_36_grad/StridedSliceGrad"
input: "gradients/strided_slice_39_grad/StridedSliceGrad"
input: "gradients/strided_slice_42_grad/StridedSliceGrad"
input: "gradients/strided_slice_45_grad/StridedSliceGrad"
input: "gradients/strided_slice_48_grad/StridedSliceGrad"
input: "gradients/strided_slice_51_grad/StridedSliceGrad"
input: "gradients/strided_slice_54_grad/StridedSliceGrad"
input: "gradients/strided_slice_57_grad/StridedSliceGrad"
attr {
  key: "N"
  value {
    i: 20
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/strided_slice_grad/StridedSliceGrad"
    }
  }
}
, name: "gradients/g_nnpostX/Mul_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostX/Mul_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostX/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/g_nnpostX/Mul_grad/Shape"
input: "gradients/g_nnpostX/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/Mul_grad/Mul"
op: "Mul"
input: "gradients/AddN_85"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/Mul_grad/Sum"
op: "Sum"
input: "gradients/g_nnpostX/Mul_grad/Mul"
input: "gradients/g_nnpostX/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostX/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/g_nnpostX/Mul_grad/Sum"
input: "gradients/g_nnpostX/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/Mul_grad/Mul_1"
op: "Mul"
input: "g_nnpostX/Reshape_1"
input: "gradients/AddN_85"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/g_nnpostX/Mul_grad/Mul_1"
input: "gradients/g_nnpostX/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostX/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/g_nnpostX/Mul_grad/Sum_1"
input: "gradients/g_nnpostX/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostX/Mul_grad/Reshape"
input: "^gradients/g_nnpostX/Mul_grad/Reshape_1"
, name: "gradients/g_nnpostX/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostX/Mul_grad/Reshape"
input: "^gradients/g_nnpostX/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/Mul_grad/Reshape"
    }
  }
}
, name: "gradients/g_nnpostX/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostX/Mul_grad/Reshape_1"
input: "^gradients/g_nnpostX/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/Mul_grad/Reshape_1"
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/Merge_grad/cond_grad"
op: "Switch"
input: "gradients/g_nnpriorZ/dense/MatMul_grad/tuple/control_dependency"
input: "g_nnpriorZ/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/Merge_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpriorZ/dropout/cond/Merge_grad/cond_grad"
, name: "gradients/g_nnpriorZ/dropout/cond/Merge_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpriorZ/dropout/cond/Merge_grad/cond_grad"
input: "^gradients/g_nnpriorZ/dropout/cond/Merge_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/Merge_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpriorZ/dropout/cond/Merge_grad/cond_grad:1"
input: "^gradients/g_nnpriorZ/dropout/cond/Merge_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostX/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000\003\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostX/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/g_nnpostX/Mul_grad/tuple/control_dependency"
input: "gradients/g_nnpostX/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/g_nnpriorZ/dropout/cond/Merge_grad/tuple/control_dependency_1"
input: "g_nnpriorZ/dropout/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/Mul_1"
op: "Mul"
input: "gradients/g_nnpriorZ/dropout/cond/Merge_grad/tuple/control_dependency_1"
input: "g_nnpriorZ/dropout/cond/dropout/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/Mul"
input: "^gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/Mul_1"
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/Mul"
input: "^gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/Mul"
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/Mul_1"
input: "^gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/g_nnpostX/dense_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/g_nnpostX/Reshape_1_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/g_nnpostX/dense_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostX/Reshape_1_grad/Reshape"
input: "^gradients/g_nnpostX/dense_1/BiasAdd_grad/BiasAddGrad"
, name: "gradients/g_nnpostX/dense_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostX/Reshape_1_grad/Reshape"
input: "^gradients/g_nnpostX/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/Reshape_1_grad/Reshape"
    }
  }
}
, name: "gradients/g_nnpostX/dense_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostX/dense_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/g_nnpostX/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dense_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/Switch_60"
op: "Switch"
input: "g_nnpriorZ/Reshape"
input: "g_nnpriorZ/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_42"
op: "Identity"
input: "gradients/Switch_60:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_43"
op: "Shape"
input: "gradients/Switch_60:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_42/Const"
op: "Const"
input: "^gradients/Identity_42"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_42"
op: "Fill"
input: "gradients/Shape_43"
input: "gradients/zeros_42/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/Identity/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/g_nnpriorZ/dropout/cond/Merge_grad/tuple/control_dependency"
input: "gradients/zeros_42"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Shape"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/RealDiv"
op: "RealDiv"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/tuple/control_dependency"
input: "g_nnpriorZ/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Sum"
op: "Sum"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/RealDiv"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Reshape"
op: "Reshape"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Sum"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Neg"
op: "Neg"
input: "g_nnpriorZ/dropout/cond/dropout/div/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Neg"
input: "g_nnpriorZ/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/RealDiv_1"
input: "g_nnpriorZ/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/mul"
op: "Mul"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/mul_grad/tuple/control_dependency"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Sum_1"
op: "Sum"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/mul"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Reshape_1"
op: "Reshape"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Sum_1"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Reshape"
input: "^gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Reshape_1"
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Reshape"
input: "^gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Reshape"
    }
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Reshape_1"
input: "^gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/Reshape_1"
    }
  }
}
, name: "gradients/g_nnpostX/dense_1/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/g_nnpostX/dense_1/BiasAdd_grad/tuple/control_dependency"
input: "g_nnpostX/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/g_nnpostX/dense_1/MatMul_grad/MatMul_1"
op: "MatMul"
input: "g_nnpostX/dropout_1/cond/Merge"
input: "gradients/g_nnpostX/dense_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostX/dense_1/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostX/dense_1/MatMul_grad/MatMul"
input: "^gradients/g_nnpostX/dense_1/MatMul_grad/MatMul_1"
, name: "gradients/g_nnpostX/dense_1/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostX/dense_1/MatMul_grad/MatMul"
input: "^gradients/g_nnpostX/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostX/dense_1/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostX/dense_1/MatMul_grad/MatMul_1"
input: "^gradients/g_nnpostX/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dense_1/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/Switch_61"
op: "Switch"
input: "g_nnpriorZ/Reshape"
input: "g_nnpriorZ/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_43"
op: "Identity"
input: "gradients/Switch_61"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_44"
op: "Shape"
input: "gradients/Switch_61"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_43/Const"
op: "Const"
input: "^gradients/Identity_43"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_43"
op: "Fill"
input: "gradients/Shape_44"
input: "gradients/zeros_43/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/dropout/cond/dropout/div/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_43"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/Merge_grad/cond_grad"
op: "Switch"
input: "gradients/g_nnpostX/dense_1/MatMul_grad/tuple/control_dependency"
input: "g_nnpostX/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/Merge_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostX/dropout_1/cond/Merge_grad/cond_grad"
, name: "gradients/g_nnpostX/dropout_1/cond/Merge_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostX/dropout_1/cond/Merge_grad/cond_grad"
input: "^gradients/g_nnpostX/dropout_1/cond/Merge_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostX/dropout_1/cond/Merge_grad/cond_grad:1"
input: "^gradients/g_nnpostX/dropout_1/cond/Merge_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/AddN_86"
op: "AddN"
input: "gradients/g_nnpriorZ/dropout/cond/Identity/Switch_grad/cond_grad"
input: "gradients/g_nnpriorZ/dropout/cond/dropout/div/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/dropout/cond/Identity/Switch_grad/cond_grad"
    }
  }
}
, name: "gradients/g_nnpriorZ/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000d\000\000\000"
    }
  }
}
, name: "gradients/g_nnpriorZ/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/AddN_86"
input: "gradients/g_nnpriorZ/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/g_nnpostX/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
input: "g_nnpostX/dropout_1/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/Mul_1"
op: "Mul"
input: "gradients/g_nnpostX/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
input: "g_nnpostX/dropout_1/cond/dropout/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/Mul"
input: "^gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/Mul_1"
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/Mul"
input: "^gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/Mul"
    }
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/Mul_1"
input: "^gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/g_nnpriorZ/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "gradients/g_nnpriorZ/concat_grad/mod"
op: "FloorMod"
input: "g_nnpriorZ/concat/axis"
input: "gradients/g_nnpriorZ/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpriorZ/concat_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/g_nnpriorZ/concat_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/g_nnpriorZ/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/g_nnpriorZ/concat_grad/mod"
input: "gradients/g_nnpriorZ/concat_grad/Shape"
input: "gradients/g_nnpriorZ/concat_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/g_nnpriorZ/concat_grad/Slice"
op: "Slice"
input: "gradients/g_nnpriorZ/Reshape_grad/Reshape"
input: "gradients/g_nnpriorZ/concat_grad/ConcatOffset"
input: "gradients/g_nnpriorZ/concat_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/concat_grad/Slice_1"
op: "Slice"
input: "gradients/g_nnpriorZ/Reshape_grad/Reshape"
input: "gradients/g_nnpriorZ/concat_grad/ConcatOffset:1"
input: "gradients/g_nnpriorZ/concat_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpriorZ/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpriorZ/concat_grad/Slice"
input: "^gradients/g_nnpriorZ/concat_grad/Slice_1"
, name: "gradients/g_nnpriorZ/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpriorZ/concat_grad/Slice"
input: "^gradients/g_nnpriorZ/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/concat_grad/Slice"
    }
  }
}
, name: "gradients/g_nnpriorZ/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpriorZ/concat_grad/Slice_1"
input: "^gradients/g_nnpriorZ/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/concat_grad/Slice_1"
    }
  }
}
, name: "gradients/Switch_62"
op: "Switch"
input: "g_nnpostX/dense/Sigmoid"
input: "g_nnpostX/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_44"
op: "Identity"
input: "gradients/Switch_62:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_45"
op: "Shape"
input: "gradients/Switch_62:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_44/Const"
op: "Const"
input: "^gradients/Identity_44"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_44"
op: "Fill"
input: "gradients/Shape_45"
input: "gradients/zeros_44/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/Identity/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/g_nnpostX/dropout_1/cond/Merge_grad/tuple/control_dependency"
input: "gradients/zeros_44"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Shape"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/RealDiv"
op: "RealDiv"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
input: "g_nnpostX/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Sum"
op: "Sum"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/RealDiv"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Reshape"
op: "Reshape"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Sum"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Neg"
op: "Neg"
input: "g_nnpostX/dropout_1/cond/dropout/div/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Neg"
input: "g_nnpostX/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/RealDiv_1"
input: "g_nnpostX/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/mul"
op: "Mul"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Sum_1"
op: "Sum"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/mul"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Reshape_1"
op: "Reshape"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Sum_1"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Reshape"
input: "^gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Reshape_1"
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Reshape"
input: "^gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Reshape"
    }
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Reshape_1"
input: "^gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/Mul_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/Mul_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpriorZ_2/Mul_grad/Shape"
input: "gradients/update_GRUpriorZ_2/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/Mul_grad/Mul"
op: "Mul"
input: "gradients/g_nnpriorZ/concat_grad/tuple/control_dependency"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/Mul_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpriorZ_2/Mul_grad/Mul"
input: "gradients/update_GRUpriorZ_2/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ_2/Mul_grad/Sum"
input: "gradients/update_GRUpriorZ_2/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/Mul_grad/Mul_1"
op: "Mul"
input: "update_GRUpriorZ_2/Reshape_2"
input: "gradients/g_nnpriorZ/concat_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpriorZ_2/Mul_grad/Mul_1"
input: "gradients/update_GRUpriorZ_2/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpriorZ_2/Mul_grad/Sum_1"
input: "gradients/update_GRUpriorZ_2/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/Mul_grad/Reshape"
input: "^gradients/update_GRUpriorZ_2/Mul_grad/Reshape_1"
, name: "gradients/update_GRUpriorZ_2/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/Mul_grad/Reshape"
input: "^gradients/update_GRUpriorZ_2/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/Mul_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/Mul_grad/Reshape_1"
input: "^gradients/update_GRUpriorZ_2/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/Mul_grad/Reshape_1"
    }
  }
}
, name: "gradients/Switch_63"
op: "Switch"
input: "g_nnpostX/dense/Sigmoid"
input: "g_nnpostX/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_45"
op: "Identity"
input: "gradients/Switch_63"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_46"
op: "Shape"
input: "gradients/Switch_63"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_45/Const"
op: "Const"
input: "^gradients/Identity_45"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_45"
op: "Fill"
input: "gradients/Shape_46"
input: "gradients/zeros_45/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/dropout_1/cond/dropout/div/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_45"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/Reshape_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/Reshape_2_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ_2/Mul_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/Reshape_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_46"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/AddN_87"
op: "AddN"
input: "gradients/g_nnpostX/dropout_1/cond/Identity/Switch_grad/cond_grad"
input: "gradients/g_nnpostX/dropout_1/cond/dropout/div/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dropout_1/cond/Identity/Switch_grad/cond_grad"
    }
  }
}
, name: "gradients/g_nnpostX/dense/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "g_nnpostX/dense/Sigmoid"
input: "gradients/AddN_87"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/Exit_3_grad/b_exit"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/Reshape_2_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/Exit_2_grad/b_exit"
op: "Enter"
input: "gradients/zeros_46"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/g_nnpostX/dense/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/g_nnpostX/dense/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/g_nnpostX/dense/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostX/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/g_nnpostX/dense/Sigmoid_grad/SigmoidGrad"
, name: "gradients/g_nnpostX/dense/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostX/dense/Sigmoid_grad/SigmoidGrad"
input: "^gradients/g_nnpostX/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dense/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/g_nnpostX/dense/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostX/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/g_nnpostX/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dense/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/Switch_3_grad/b_switch"
op: "Merge"
input: "gradients/update_GRUpriorZ_2/rnn/while/Exit_3_grad/b_exit"
input: "gradients/update_GRUpriorZ_2/rnn/while/Switch_3_grad_1/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dense/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/g_nnpostX/dense/BiasAdd_grad/tuple/control_dependency"
input: "g_nnpostX/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/g_nnpostX/dense/MatMul_grad/MatMul_1"
op: "MatMul"
input: "g_nnpostX/dropout/cond/Merge"
input: "gradients/g_nnpostX/dense/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostX/dense/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostX/dense/MatMul_grad/MatMul"
input: "^gradients/g_nnpostX/dense/MatMul_grad/MatMul_1"
, name: "gradients/g_nnpostX/dense/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostX/dense/MatMul_grad/MatMul"
input: "^gradients/g_nnpostX/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostX/dense/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostX/dense/MatMul_grad/MatMul_1"
input: "^gradients/g_nnpostX/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dense/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/Merge_3_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ_2/rnn/while/Switch_3_grad/b_switch"
input: "gradients/b_count_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/Merge_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/rnn/while/Merge_3_grad/Switch"
, name: "gradients/update_GRUpriorZ_2/rnn/while/Merge_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/Merge_3_grad/Switch"
input: "^gradients/update_GRUpriorZ_2/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/Merge_3_grad/Switch:1"
input: "^gradients/update_GRUpriorZ_2/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/g_nnpostX/dropout/cond/Merge_grad/cond_grad"
op: "Switch"
input: "gradients/g_nnpostX/dense/MatMul_grad/tuple/control_dependency"
input: "g_nnpostX/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostX/dropout/cond/Merge_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostX/dropout/cond/Merge_grad/cond_grad"
, name: "gradients/g_nnpostX/dropout/cond/Merge_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostX/dropout/cond/Merge_grad/cond_grad"
input: "^gradients/g_nnpostX/dropout/cond/Merge_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostX/dropout/cond/Merge_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostX/dropout/cond/Merge_grad/cond_grad:1"
input: "^gradients/g_nnpostX/dropout/cond/Merge_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/Enter_3_grad/Exit"
op: "Exit"
input: "gradients/update_GRUpriorZ_2/rnn/while/Merge_3_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/g_nnpostX/dropout/cond/Merge_grad/tuple/control_dependency_1"
input: "g_nnpostX/dropout/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/mul_grad/Mul_1"
op: "Mul"
input: "gradients/g_nnpostX/dropout/cond/Merge_grad/tuple/control_dependency_1"
input: "g_nnpostX/dropout/cond/dropout/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostX/dropout/cond/dropout/mul_grad/Mul"
input: "^gradients/g_nnpostX/dropout/cond/dropout/mul_grad/Mul_1"
, name: "gradients/g_nnpostX/dropout/cond/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostX/dropout/cond/dropout/mul_grad/Mul"
input: "^gradients/g_nnpostX/dropout/cond/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dropout/cond/dropout/mul_grad/Mul"
    }
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostX/dropout/cond/dropout/mul_grad/Mul_1"
input: "^gradients/g_nnpostX/dropout/cond/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dropout/cond/dropout/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ_2/rnn/while/Enter_3_grad/Exit"
input: "gradients/update_GRUpriorZ_2/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/Switch_64"
op: "Switch"
input: "g_nnpostX/Reshape"
input: "g_nnpostX/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_46"
op: "Identity"
input: "gradients/Switch_64:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_47"
op: "Shape"
input: "gradients/Switch_64:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_47/Const"
op: "Const"
input: "^gradients/Identity_46"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_47"
op: "Fill"
input: "gradients/Shape_47"
input: "gradients/zeros_47/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/dropout/cond/Identity/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/g_nnpostX/dropout/cond/Merge_grad/tuple/control_dependency"
input: "gradients/zeros_47"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Shape"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/RealDiv"
op: "RealDiv"
input: "gradients/g_nnpostX/dropout/cond/dropout/mul_grad/tuple/control_dependency"
input: "g_nnpostX/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Sum"
op: "Sum"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/RealDiv"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Reshape"
op: "Reshape"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Sum"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Neg"
op: "Neg"
input: "g_nnpostX/dropout/cond/dropout/div/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Neg"
input: "g_nnpostX/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/RealDiv_1"
input: "g_nnpostX/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/mul"
op: "Mul"
input: "gradients/g_nnpostX/dropout/cond/dropout/mul_grad/tuple/control_dependency"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Sum_1"
op: "Sum"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/mul"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Reshape_1"
op: "Reshape"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Sum_1"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostX/dropout/cond/dropout/div_grad/Reshape"
input: "^gradients/g_nnpostX/dropout/cond/dropout/div_grad/Reshape_1"
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Reshape"
input: "^gradients/g_nnpostX/dropout/cond/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dropout/cond/dropout/div_grad/Reshape"
    }
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/Reshape_1"
input: "^gradients/g_nnpostX/dropout/cond/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dropout/cond/dropout/div_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
input: "update_GRUpriorZ_2/rnn/while/Identity_3"
input: "^gradients/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/split:1"
input: "^gradients/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/Tanh"
input: "^gradients/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/sub"
input: "^gradients/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1"
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_65"
op: "Switch"
input: "g_nnpostX/Reshape"
input: "g_nnpostX/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_47"
op: "Identity"
input: "gradients/Switch_65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_48"
op: "Shape"
input: "gradients/Switch_65"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_48/Const"
op: "Const"
input: "^gradients/Identity_47"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_48"
op: "Fill"
input: "gradients/Shape_48"
input: "gradients/zeros_48/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/dropout/cond/dropout/div/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_48"
input: "gradients/g_nnpostX/dropout/cond/dropout/div_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Shape"
op: "Const"
input: "^gradients/Sub"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Shape_1"
op: "Const"
input: "^gradients/Sub"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Shape"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Sum"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Neg"
op: "Neg"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Neg"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Reshape_1"
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Reshape_1"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
op: "TanhGrad"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_88"
op: "AddN"
input: "gradients/g_nnpostX/dropout/cond/Identity/Switch_grad/cond_grad"
input: "gradients/g_nnpostX/dropout/cond/dropout/div/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/dropout/cond/Identity/Switch_grad/cond_grad"
    }
  }
}
, name: "gradients/g_nnpostX/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000d\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostX/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/AddN_88"
input: "gradients/g_nnpostX/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/g_nnpostX/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "gradients/g_nnpostX/concat_grad/mod"
op: "FloorMod"
input: "g_nnpostX/concat/axis"
input: "gradients/g_nnpostX/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostX/concat_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostX/concat_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostX/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/g_nnpostX/concat_grad/mod"
input: "gradients/g_nnpostX/concat_grad/Shape"
input: "gradients/g_nnpostX/concat_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/g_nnpostX/concat_grad/Slice"
op: "Slice"
input: "gradients/g_nnpostX/Reshape_grad/Reshape"
input: "gradients/g_nnpostX/concat_grad/ConcatOffset"
input: "gradients/g_nnpostX/concat_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/concat_grad/Slice_1"
op: "Slice"
input: "gradients/g_nnpostX/Reshape_grad/Reshape"
input: "gradients/g_nnpostX/concat_grad/ConcatOffset:1"
input: "gradients/g_nnpostX/concat_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostX/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostX/concat_grad/Slice"
input: "^gradients/g_nnpostX/concat_grad/Slice_1"
, name: "gradients/g_nnpostX/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostX/concat_grad/Slice"
input: "^gradients/g_nnpostX/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/concat_grad/Slice"
    }
  }
}
, name: "gradients/g_nnpostX/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostX/concat_grad/Slice_1"
input: "^gradients/g_nnpostX/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostX/concat_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/concat_1"
input: "^gradients/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
input: "gradients/b_count_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/Mul_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_2/Mul_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_2/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpostX_2/Mul_grad/Shape"
input: "gradients/update_GRUpostX_2/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/Mul_grad/Mul"
op: "Mul"
input: "gradients/g_nnpostX/concat_grad/tuple/control_dependency"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/Mul_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpostX_2/Mul_grad/Mul"
input: "gradients/update_GRUpostX_2/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX_2/Mul_grad/Sum"
input: "gradients/update_GRUpostX_2/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/Mul_grad/Mul_1"
op: "Mul"
input: "update_GRUpostX_2/Reshape_2"
input: "gradients/g_nnpostX/concat_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpostX_2/Mul_grad/Mul_1"
input: "gradients/update_GRUpostX_2/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpostX_2/Mul_grad/Sum_1"
input: "gradients/update_GRUpostX_2/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/Mul_grad/Reshape"
input: "^gradients/update_GRUpostX_2/Mul_grad/Reshape_1"
, name: "gradients/update_GRUpostX_2/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/Mul_grad/Reshape"
input: "^gradients/update_GRUpostX_2/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/Mul_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostX_2/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/Mul_grad/Reshape_1"
input: "^gradients/update_GRUpostX_2/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/Mul_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Const"
op: "Const"
input: "^gradients/Sub"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Rank"
op: "Const"
input: "^gradients/Sub"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Const"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Shape"
op: "Const"
input: "^gradients/Sub"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Shape_1"
op: "Const"
input: "^gradients/Sub"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/mod"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Shape"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/ConcatOffset:1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Slice_1"
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Slice_1"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
input: "gradients/b_count_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/Reshape_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_2/Reshape_2_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX_2/Mul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/Reshape_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_49"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/split"
input: "^gradients/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1"
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/Exit_3_grad/b_exit"
op: "Enter"
input: "gradients/update_GRUpostX_2/Reshape_2_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/Exit_2_grad/b_exit"
op: "Enter"
input: "gradients/zeros_49"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/AddN_89"
op: "AddN"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/split_grad/concat/Const"
op: "Const"
input: "^gradients/Sub"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/split_grad/concat"
op: "ConcatV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
input: "gradients/AddN_89"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/split_grad/concat/Const"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/Switch_3_grad/b_switch"
op: "Merge"
input: "gradients/update_GRUpostX_2/rnn/while/Exit_3_grad/b_exit"
input: "gradients/update_GRUpostX_2/rnn/while/Switch_3_grad_1/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid"
input: "^gradients/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
input: "^gradients/Sub"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/split_grad/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/Merge_3_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX_2/rnn/while/Switch_3_grad/b_switch"
input: "gradients/b_count_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/Merge_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/rnn/while/Merge_3_grad/Switch"
, name: "gradients/update_GRUpostX_2/rnn/while/Merge_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/Merge_3_grad/Switch"
input: "^gradients/update_GRUpostX_2/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/Merge_3_grad/Switch:1"
input: "^gradients/update_GRUpostX_2/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/Enter_3_grad/Exit"
op: "Exit"
input: "gradients/update_GRUpostX_2/rnn/while/Merge_3_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
input: "update_GRUpriorZ_2/rnn/while/gru_cell/concat"
input: "^gradients/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1"
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
input: "gradients/b_count_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_2/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX_2/rnn/while/Enter_3_grad/Exit"
input: "gradients/update_GRUpostX_2/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Const"
op: "Const"
input: "^gradients/Sub"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Rank"
op: "Const"
input: "^gradients/Sub"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Const"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Shape"
op: "Const"
input: "^gradients/Sub"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Shape_1"
op: "Const"
input: "^gradients/Sub"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/mod"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Shape"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/ConcatOffset"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/ConcatOffset:1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Slice_1"
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Slice_1"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
input: "gradients/b_count_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/Switch:1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
input: "update_GRUpostX_2/rnn/while/Identity_3"
input: "^gradients/Add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_1"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
input: "update_GRUpostX_2/rnn/while/gru_cell/split:1"
input: "^gradients/Add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_1"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
input: "update_GRUpostX_2/rnn/while/gru_cell/Tanh"
input: "^gradients/Add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_1"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
input: "update_GRUpostX_2/rnn/while/gru_cell/sub"
input: "^gradients/Add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_1"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1"
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_90"
op: "AddN"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
op: "Enter"
input: "update_GRUpriorZ_2/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
op: "Enter"
input: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/Sub"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpriorZ_2/rnn/while/Identity_1"
input: "^gradients/Add"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/NextIteration"
op: "NextIteration"
input: "gradients/Add"
input: "^gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
input: "^gradients/Sub"
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
op: "ControlTrigger"
input: "^gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
, name: "gradients/NextIteration_1"
op: "NextIteration"
input: "gradients/Sub"
input: "^gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "gradients/AddN_90"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_91"
op: "AddN"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Shape"
op: "Const"
input: "^gradients/Sub_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Shape"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Sum"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Neg"
op: "Neg"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Neg"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Reshape_1"
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Reshape_1"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
op: "TanhGrad"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
input: "gradients/b_count_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/while/Switch_3_grad_1/NextIteration"
op: "NextIteration"
input: "gradients/AddN_91"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "update_GRUpriorZ_2/rnn/TensorArray_1"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/TensorArray_1"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_2/rnn/TensorArray_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "update_GRUpriorZ_2/rnn/TensorArrayUnstack/range"
input: "gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      unknown_rank: true
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
, name: "gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
input: "update_GRUpostX_2/rnn/while/gru_cell/concat_1"
input: "^gradients/Add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_1"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
input: "gradients/b_count_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "update_GRUpriorZ_2/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_2/rnn/transpose_grad/transpose"
op: "Transpose"
input: "gradients/update_GRUpriorZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_2/rnn/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Const"
op: "Const"
input: "^gradients/Sub_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Rank"
op: "Const"
input: "^gradients/Sub_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Const"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Shape"
op: "Const"
input: "^gradients/Sub_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/mod"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Shape"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/ConcatOffset:1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Slice_1"
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Slice_1"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
input: "gradients/b_count_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_2/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_2/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ_2/rnn/transpose_grad/transpose"
input: "gradients/update_GRUpriorZ_2/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
input: "update_GRUpostX_2/rnn/while/gru_cell/split"
input: "^gradients/Add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_1"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1"
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/truediv_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/truediv_2_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_2_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_2_grad/Shape"
input: "gradients/truediv_2_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_2_grad/RealDiv"
op: "RealDiv"
input: "gradients/update_GRUpriorZ_2/Reshape_grad/Reshape"
input: "truediv_2/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_2_grad/Sum"
op: "Sum"
input: "gradients/truediv_2_grad/RealDiv"
input: "gradients/truediv_2_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_2_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_2_grad/Sum"
input: "gradients/truediv_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_2_grad/Neg"
op: "Neg"
input: "Mean_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_2_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_2_grad/Neg"
input: "truediv_2/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_2_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_2_grad/RealDiv_1"
input: "truediv_2/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_2_grad/mul"
op: "Mul"
input: "gradients/update_GRUpriorZ_2/Reshape_grad/Reshape"
input: "gradients/truediv_2_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_2_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_2_grad/mul"
input: "gradients/truediv_2_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_2_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_2_grad/Sum_1"
input: "gradients/truediv_2_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_2_grad/Reshape"
input: "^gradients/truediv_2_grad/Reshape_1"
, name: "gradients/truediv_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_2_grad/Reshape"
input: "^gradients/truediv_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_2_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_2_grad/Reshape_1"
input: "^gradients/truediv_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_2_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_92"
op: "AddN"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/split_grad/concat/Const"
op: "Const"
input: "^gradients/Sub_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/split_grad/concat"
op: "ConcatV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
input: "gradients/AddN_92"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/split_grad/concat/Const"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000\t\000\000\000"
    }
  }
}
, name: "gradients/Mean_2_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_2_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}
, name: "gradients/Mean_2_grad/add"
op: "Add"
input: "Mean_2/reduction_indices"
input: "gradients/Mean_2_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_2_grad/Shape"
    }
  }
}
, name: "gradients/Mean_2_grad/mod"
op: "FloorMod"
input: "gradients/Mean_2_grad/add"
input: "gradients/Mean_2_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_2_grad/Shape"
    }
  }
}
, name: "gradients/Mean_2_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_2_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Mean_2_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_2_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Mean_2_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_2_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_2_grad/range"
op: "Range"
input: "gradients/Mean_2_grad/range/start"
input: "gradients/Mean_2_grad/Size"
input: "gradients/Mean_2_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_2_grad/Shape"
    }
  }
}
, name: "gradients/Mean_2_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_2_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_2_grad/Fill"
op: "Fill"
input: "gradients/Mean_2_grad/Shape_1"
input: "gradients/Mean_2_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_2_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_2_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Mean_2_grad/range"
input: "gradients/Mean_2_grad/mod"
input: "gradients/Mean_2_grad/Shape"
input: "gradients/Mean_2_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_2_grad/Shape"
    }
  }
}
, name: "gradients/Mean_2_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_2_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_2_grad/Maximum"
op: "Maximum"
input: "gradients/Mean_2_grad/DynamicStitch"
input: "gradients/Mean_2_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_2_grad/Shape"
    }
  }
}
, name: "gradients/Mean_2_grad/floordiv"
op: "FloorDiv"
input: "gradients/Mean_2_grad/Shape"
input: "gradients/Mean_2_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_2_grad/Shape"
    }
  }
}
, name: "gradients/Mean_2_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_2_grad/tuple/control_dependency"
input: "gradients/Mean_2_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_2_grad/Tile"
op: "Tile"
input: "gradients/Mean_2_grad/Reshape"
input: "gradients/Mean_2_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_2_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "gradients/Mean_2_grad/truediv"
op: "RealDiv"
input: "gradients/Mean_2_grad/Tile"
input: "gradients/Mean_2_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
input: "update_GRUpostX_2/rnn/while/gru_cell/Sigmoid"
input: "^gradients/Add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
input: "^gradients/Sub_1"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/split_grad/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/transpose_3_grad/InvertPermutation"
op: "InvertPermutation"
input: "transpose_3/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/transpose_3_grad/transpose"
op: "Transpose"
input: "gradients/Mean_2_grad/truediv"
input: "gradients/transpose_3_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/Reshape_11_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Reshape_11_grad/Reshape"
op: "Reshape"
input: "gradients/transpose_3_grad/transpose"
input: "gradients/Reshape_11_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
input: "update_GRUpostX_2/rnn/while/gru_cell/concat"
input: "^gradients/Add_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_1"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1"
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
input: "gradients/b_count_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/MatMul_2_grad/MatMul"
op: "BatchMatMul"
input: "gradients/Reshape_11_grad/Reshape"
input: "Reshape_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: true
  }
}
, name: "gradients/MatMul_2_grad/MatMul_1"
op: "BatchMatMul"
input: "Reshape_9"
input: "gradients/Reshape_11_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: true
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "gradients/MatMul_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_2_grad/MatMul"
input: "^gradients/MatMul_2_grad/MatMul_1"
, name: "gradients/MatMul_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_2_grad/MatMul"
input: "^gradients/MatMul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_2_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_2_grad/MatMul_1"
input: "^gradients/MatMul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_2_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Const"
op: "Const"
input: "^gradients/Sub_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Rank"
op: "Const"
input: "^gradients/Sub_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Const"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Shape"
op: "Const"
input: "^gradients/Sub_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_1"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/mod"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Shape"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/ConcatOffset"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/ConcatOffset:1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Slice_1"
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Slice_1"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
input: "gradients/b_count_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/Switch:1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Reshape_9_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_9_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_2_grad/tuple/control_dependency"
input: "gradients/Reshape_9_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Reshape_10_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_10_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_2_grad/tuple/control_dependency_1"
input: "gradients/Reshape_10_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/AddN_93"
op: "AddN"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
op: "Enter"
input: "update_GRUpostX_2/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
op: "Enter"
input: "update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/Sub_1"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostX_2/rnn/while/Identity_1"
input: "^gradients/Add_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/NextIteration_2"
op: "NextIteration"
input: "gradients/Add_1"
input: "^gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
input: "^gradients/Sub_1"
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
op: "ControlTrigger"
input: "^gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
, name: "gradients/NextIteration_3"
op: "NextIteration"
input: "gradients/Sub_1"
input: "^gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "gradients/AddN_93"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_94"
op: "AddN"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_95"
op: "AddN"
input: "gradients/update_GRUpriorZ_2/Reshape_1_grad/Reshape"
input: "gradients/Reshape_10_grad/Reshape"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/Reshape_1_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/Mul_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/Mul_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpriorZ_1/Mul_grad/Shape"
input: "gradients/update_GRUpriorZ_1/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/Mul_grad/Mul"
op: "Mul"
input: "gradients/AddN_95"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/Mul_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpriorZ_1/Mul_grad/Mul"
input: "gradients/update_GRUpriorZ_1/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ_1/Mul_grad/Sum"
input: "gradients/update_GRUpriorZ_1/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/Mul_grad/Mul_1"
op: "Mul"
input: "update_GRUpriorZ_1/Reshape_2"
input: "gradients/AddN_95"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpriorZ_1/Mul_grad/Mul_1"
input: "gradients/update_GRUpriorZ_1/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpriorZ_1/Mul_grad/Sum_1"
input: "gradients/update_GRUpriorZ_1/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/Mul_grad/Reshape"
input: "^gradients/update_GRUpriorZ_1/Mul_grad/Reshape_1"
, name: "gradients/update_GRUpriorZ_1/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/Mul_grad/Reshape"
input: "^gradients/update_GRUpriorZ_1/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/Mul_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/Mul_grad/Reshape_1"
input: "^gradients/update_GRUpriorZ_1/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/Mul_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
input: "gradients/b_count_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/rnn/while/Switch_3_grad_1/NextIteration"
op: "NextIteration"
input: "gradients/AddN_94"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/Reshape_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/Reshape_2_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ_1/Mul_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/Reshape_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_50"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "update_GRUpostX_2/rnn/TensorArray_1"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/TensorArray_1"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_2/rnn/TensorArray_1"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "update_GRUpostX_2/rnn/TensorArrayUnstack/range"
input: "gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      unknown_rank: true
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
, name: "gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
    }
  }
}
, name: "gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/Exit_3_grad/b_exit"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/Reshape_2_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/Exit_2_grad/b_exit"
op: "Enter"
input: "gradients/zeros_50"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "update_GRUpostX_2/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_2/rnn/transpose_grad/transpose"
op: "Transpose"
input: "gradients/update_GRUpostX_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_2/rnn/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/Switch_3_grad/b_switch"
op: "Merge"
input: "gradients/update_GRUpriorZ_1/rnn/while/Exit_3_grad/b_exit"
input: "gradients/update_GRUpriorZ_1/rnn/while/Switch_3_grad_1/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_2/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_2/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX_2/rnn/transpose_grad/transpose"
input: "gradients/update_GRUpostX_2/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/Merge_3_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ_1/rnn/while/Switch_3_grad/b_switch"
input: "gradients/b_count_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/Merge_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/rnn/while/Merge_3_grad/Switch"
, name: "gradients/update_GRUpriorZ_1/rnn/while/Merge_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/Merge_3_grad/Switch"
input: "^gradients/update_GRUpriorZ_1/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/Merge_3_grad/Switch:1"
input: "^gradients/update_GRUpriorZ_1/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/truediv_8_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/truediv_8_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_8_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_8_grad/Shape"
input: "gradients/truediv_8_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_8_grad/RealDiv"
op: "RealDiv"
input: "gradients/update_GRUpostX_2/Reshape_grad/Reshape"
input: "truediv_8/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_8_grad/Sum"
op: "Sum"
input: "gradients/truediv_8_grad/RealDiv"
input: "gradients/truediv_8_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_8_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_8_grad/Sum"
input: "gradients/truediv_8_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_8_grad/Neg"
op: "Neg"
input: "Mean_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_8_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_8_grad/Neg"
input: "truediv_8/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_8_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_8_grad/RealDiv_1"
input: "truediv_8/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_8_grad/mul"
op: "Mul"
input: "gradients/update_GRUpostX_2/Reshape_grad/Reshape"
input: "gradients/truediv_8_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_8_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_8_grad/mul"
input: "gradients/truediv_8_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_8_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_8_grad/Sum_1"
input: "gradients/truediv_8_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_8_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_8_grad/Reshape"
input: "^gradients/truediv_8_grad/Reshape_1"
, name: "gradients/truediv_8_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_8_grad/Reshape"
input: "^gradients/truediv_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_8_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_8_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_8_grad/Reshape_1"
input: "^gradients/truediv_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_8_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/Enter_3_grad/Exit"
op: "Exit"
input: "gradients/update_GRUpriorZ_1/rnn/while/Merge_3_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Mean_8_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000\t\000\000\000"
    }
  }
}
, name: "gradients/Mean_8_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_8_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}
, name: "gradients/Mean_8_grad/add"
op: "Add"
input: "Mean_8/reduction_indices"
input: "gradients/Mean_8_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_8_grad/Shape"
    }
  }
}
, name: "gradients/Mean_8_grad/mod"
op: "FloorMod"
input: "gradients/Mean_8_grad/add"
input: "gradients/Mean_8_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_8_grad/Shape"
    }
  }
}
, name: "gradients/Mean_8_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_8_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Mean_8_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_8_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Mean_8_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_8_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_8_grad/range"
op: "Range"
input: "gradients/Mean_8_grad/range/start"
input: "gradients/Mean_8_grad/Size"
input: "gradients/Mean_8_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_8_grad/Shape"
    }
  }
}
, name: "gradients/Mean_8_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_8_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_8_grad/Fill"
op: "Fill"
input: "gradients/Mean_8_grad/Shape_1"
input: "gradients/Mean_8_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_8_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_8_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Mean_8_grad/range"
input: "gradients/Mean_8_grad/mod"
input: "gradients/Mean_8_grad/Shape"
input: "gradients/Mean_8_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_8_grad/Shape"
    }
  }
}
, name: "gradients/Mean_8_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_8_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_8_grad/Maximum"
op: "Maximum"
input: "gradients/Mean_8_grad/DynamicStitch"
input: "gradients/Mean_8_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_8_grad/Shape"
    }
  }
}
, name: "gradients/Mean_8_grad/floordiv"
op: "FloorDiv"
input: "gradients/Mean_8_grad/Shape"
input: "gradients/Mean_8_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_8_grad/Shape"
    }
  }
}
, name: "gradients/Mean_8_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_8_grad/tuple/control_dependency"
input: "gradients/Mean_8_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_8_grad/Tile"
op: "Tile"
input: "gradients/Mean_8_grad/Reshape"
input: "gradients/Mean_8_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_8_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "gradients/Mean_8_grad/truediv"
op: "RealDiv"
input: "gradients/Mean_8_grad/Tile"
input: "gradients/Mean_8_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ_1/rnn/while/Enter_3_grad/Exit"
input: "gradients/update_GRUpriorZ_1/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/transpose_9_grad/InvertPermutation"
op: "InvertPermutation"
input: "transpose_9/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/transpose_9_grad/transpose"
op: "Transpose"
input: "gradients/Mean_8_grad/truediv"
input: "gradients/transpose_9_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
input: "update_GRUpriorZ_1/rnn/while/Identity_3"
input: "^gradients/Add_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_3"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/split:1"
input: "^gradients/Add_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_3"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/Tanh"
input: "^gradients/Add_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_3"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/sub"
input: "^gradients/Add_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_3"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1"
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1"
    }
  }
}
, name: "gradients/Reshape_30_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Reshape_30_grad/Reshape"
op: "Reshape"
input: "gradients/transpose_9_grad/transpose"
input: "gradients/Reshape_30_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Shape"
op: "Const"
input: "^gradients/Sub_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Shape"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Sum"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Neg"
op: "Neg"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Neg"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Reshape_1"
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Reshape_1"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
op: "TanhGrad"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/MatMul_8_grad/MatMul"
op: "BatchMatMul"
input: "gradients/Reshape_30_grad/Reshape"
input: "Reshape_29"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: true
  }
}
, name: "gradients/MatMul_8_grad/MatMul_1"
op: "BatchMatMul"
input: "Reshape_28"
input: "gradients/Reshape_30_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: true
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "gradients/MatMul_8_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_8_grad/MatMul"
input: "^gradients/MatMul_8_grad/MatMul_1"
, name: "gradients/MatMul_8_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_8_grad/MatMul"
input: "^gradients/MatMul_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_8_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_8_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_8_grad/MatMul_1"
input: "^gradients/MatMul_8_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_8_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/Reshape_28_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_28_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_8_grad/tuple/control_dependency"
input: "gradients/Reshape_28_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Reshape_29_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_29_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_8_grad/tuple/control_dependency_1"
input: "gradients/Reshape_29_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/concat_1"
input: "^gradients/Add_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_3"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
input: "gradients/b_count_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_96"
op: "AddN"
input: "gradients/update_GRUpostX_2/Reshape_1_grad/Reshape"
input: "gradients/Reshape_29_grad/Reshape"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/Reshape_1_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostX_1/Mul_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_1/Mul_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_1/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpostX_1/Mul_grad/Shape"
input: "gradients/update_GRUpostX_1/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/Mul_grad/Mul"
op: "Mul"
input: "gradients/AddN_96"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/Mul_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpostX_1/Mul_grad/Mul"
input: "gradients/update_GRUpostX_1/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX_1/Mul_grad/Sum"
input: "gradients/update_GRUpostX_1/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/Mul_grad/Mul_1"
op: "Mul"
input: "update_GRUpostX_1/Reshape_2"
input: "gradients/AddN_96"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpostX_1/Mul_grad/Mul_1"
input: "gradients/update_GRUpostX_1/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpostX_1/Mul_grad/Sum_1"
input: "gradients/update_GRUpostX_1/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/Mul_grad/Reshape"
input: "^gradients/update_GRUpostX_1/Mul_grad/Reshape_1"
, name: "gradients/update_GRUpostX_1/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/Mul_grad/Reshape"
input: "^gradients/update_GRUpostX_1/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/Mul_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostX_1/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/Mul_grad/Reshape_1"
input: "^gradients/update_GRUpostX_1/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/Mul_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Const"
op: "Const"
input: "^gradients/Sub_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Rank"
op: "Const"
input: "^gradients/Sub_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Const"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Shape"
op: "Const"
input: "^gradients/Sub_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/mod"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Shape"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/ConcatOffset:1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Slice_1"
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Slice_1"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
input: "gradients/b_count_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/Reshape_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_1/Reshape_2_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX_1/Mul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/Reshape_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_51"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/split"
input: "^gradients/Add_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_3"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1"
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/Exit_3_grad/b_exit"
op: "Enter"
input: "gradients/update_GRUpostX_1/Reshape_2_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/Exit_2_grad/b_exit"
op: "Enter"
input: "gradients/zeros_51"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/AddN_97"
op: "AddN"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/split_grad/concat/Const"
op: "Const"
input: "^gradients/Sub_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/split_grad/concat"
op: "ConcatV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
input: "gradients/AddN_97"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/split_grad/concat/Const"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/Switch_3_grad/b_switch"
op: "Merge"
input: "gradients/update_GRUpostX_1/rnn/while/Exit_3_grad/b_exit"
input: "gradients/update_GRUpostX_1/rnn/while/Switch_3_grad_1/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid"
input: "^gradients/Add_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
input: "^gradients/Sub_3"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/split_grad/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/Merge_3_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX_1/rnn/while/Switch_3_grad/b_switch"
input: "gradients/b_count_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/Merge_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/rnn/while/Merge_3_grad/Switch"
, name: "gradients/update_GRUpostX_1/rnn/while/Merge_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/Merge_3_grad/Switch"
input: "^gradients/update_GRUpostX_1/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/Merge_3_grad/Switch:1"
input: "^gradients/update_GRUpostX_1/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/Enter_3_grad/Exit"
op: "Exit"
input: "gradients/update_GRUpostX_1/rnn/while/Merge_3_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
input: "update_GRUpriorZ_1/rnn/while/gru_cell/concat"
input: "^gradients/Add_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_3"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1"
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
input: "gradients/b_count_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_1/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX_1/rnn/while/Enter_3_grad/Exit"
input: "gradients/update_GRUpostX_1/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Const"
op: "Const"
input: "^gradients/Sub_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Rank"
op: "Const"
input: "^gradients/Sub_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Const"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Shape"
op: "Const"
input: "^gradients/Sub_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_3"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/mod"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Shape"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/ConcatOffset"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/ConcatOffset:1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Slice_1"
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Slice_1"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
input: "gradients/b_count_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/Switch:1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
input: "update_GRUpostX_1/rnn/while/Identity_3"
input: "^gradients/Add_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_4"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
input: "update_GRUpostX_1/rnn/while/gru_cell/split:1"
input: "^gradients/Add_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_4"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
input: "update_GRUpostX_1/rnn/while/gru_cell/Tanh"
input: "^gradients/Add_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_4"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
input: "update_GRUpostX_1/rnn/while/gru_cell/sub"
input: "^gradients/Add_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_4"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1"
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_98"
op: "AddN"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
op: "Enter"
input: "update_GRUpriorZ_1/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
op: "Enter"
input: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/Sub_3"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpriorZ_1/rnn/while/Identity_1"
input: "^gradients/Add_3"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/NextIteration_6"
op: "NextIteration"
input: "gradients/Add_3"
input: "^gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
input: "^gradients/Sub_3"
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
op: "ControlTrigger"
input: "^gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
, name: "gradients/NextIteration_7"
op: "NextIteration"
input: "gradients/Sub_3"
input: "^gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "gradients/AddN_98"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_99"
op: "AddN"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Shape"
op: "Const"
input: "^gradients/Sub_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Shape"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Sum"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Neg"
op: "Neg"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Neg"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Reshape_1"
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Reshape_1"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
op: "TanhGrad"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
input: "gradients/b_count_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/while/Switch_3_grad_1/NextIteration"
op: "NextIteration"
input: "gradients/AddN_99"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "update_GRUpriorZ_1/rnn/TensorArray_1"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/TensorArray_1"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ_1/rnn/TensorArray_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "update_GRUpriorZ_1/rnn/TensorArrayUnstack/range"
input: "gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      unknown_rank: true
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
, name: "gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
input: "update_GRUpostX_1/rnn/while/gru_cell/concat_1"
input: "^gradients/Add_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_4"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
input: "gradients/b_count_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "update_GRUpriorZ_1/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ_1/rnn/transpose_grad/transpose"
op: "Transpose"
input: "gradients/update_GRUpriorZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ_1/rnn/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Const"
op: "Const"
input: "^gradients/Sub_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Rank"
op: "Const"
input: "^gradients/Sub_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Const"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Shape"
op: "Const"
input: "^gradients/Sub_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/mod"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Shape"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/ConcatOffset:1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Slice_1"
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Slice_1"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
input: "gradients/b_count_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ_1/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ_1/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ_1/rnn/transpose_grad/transpose"
input: "gradients/update_GRUpriorZ_1/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
input: "update_GRUpostX_1/rnn/while/gru_cell/split"
input: "^gradients/Add_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_4"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1"
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/truediv_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/truediv_1_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_1_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_1_grad/Shape"
input: "gradients/truediv_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_1_grad/RealDiv"
op: "RealDiv"
input: "gradients/update_GRUpriorZ_1/Reshape_grad/Reshape"
input: "truediv_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_1_grad/Sum"
op: "Sum"
input: "gradients/truediv_1_grad/RealDiv"
input: "gradients/truediv_1_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_1_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_1_grad/Sum"
input: "gradients/truediv_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_1_grad/Neg"
op: "Neg"
input: "Mean_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_1_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_1_grad/Neg"
input: "truediv_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_1_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_1_grad/RealDiv_1"
input: "truediv_1/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_1_grad/mul"
op: "Mul"
input: "gradients/update_GRUpriorZ_1/Reshape_grad/Reshape"
input: "gradients/truediv_1_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_1_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_1_grad/mul"
input: "gradients/truediv_1_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_1_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_1_grad/Sum_1"
input: "gradients/truediv_1_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_1_grad/Reshape"
input: "^gradients/truediv_1_grad/Reshape_1"
, name: "gradients/truediv_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_1_grad/Reshape"
input: "^gradients/truediv_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_1_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_1_grad/Reshape_1"
input: "^gradients/truediv_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_1_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_100"
op: "AddN"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/split_grad/concat/Const"
op: "Const"
input: "^gradients/Sub_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/split_grad/concat"
op: "ConcatV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
input: "gradients/AddN_100"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/split_grad/concat/Const"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000\t\000\000\000"
    }
  }
}
, name: "gradients/Mean_1_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_1_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}
, name: "gradients/Mean_1_grad/add"
op: "Add"
input: "Mean_1/reduction_indices"
input: "gradients/Mean_1_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_1_grad/Shape"
    }
  }
}
, name: "gradients/Mean_1_grad/mod"
op: "FloorMod"
input: "gradients/Mean_1_grad/add"
input: "gradients/Mean_1_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_1_grad/Shape"
    }
  }
}
, name: "gradients/Mean_1_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_1_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Mean_1_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_1_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Mean_1_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_1_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_1_grad/range"
op: "Range"
input: "gradients/Mean_1_grad/range/start"
input: "gradients/Mean_1_grad/Size"
input: "gradients/Mean_1_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_1_grad/Shape"
    }
  }
}
, name: "gradients/Mean_1_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_1_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_1_grad/Fill"
op: "Fill"
input: "gradients/Mean_1_grad/Shape_1"
input: "gradients/Mean_1_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_1_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_1_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Mean_1_grad/range"
input: "gradients/Mean_1_grad/mod"
input: "gradients/Mean_1_grad/Shape"
input: "gradients/Mean_1_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_1_grad/Shape"
    }
  }
}
, name: "gradients/Mean_1_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_1_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_1_grad/Maximum"
op: "Maximum"
input: "gradients/Mean_1_grad/DynamicStitch"
input: "gradients/Mean_1_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_1_grad/Shape"
    }
  }
}
, name: "gradients/Mean_1_grad/floordiv"
op: "FloorDiv"
input: "gradients/Mean_1_grad/Shape"
input: "gradients/Mean_1_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_1_grad/Shape"
    }
  }
}
, name: "gradients/Mean_1_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_1_grad/tuple/control_dependency"
input: "gradients/Mean_1_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_1_grad/Tile"
op: "Tile"
input: "gradients/Mean_1_grad/Reshape"
input: "gradients/Mean_1_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_1_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "gradients/Mean_1_grad/truediv"
op: "RealDiv"
input: "gradients/Mean_1_grad/Tile"
input: "gradients/Mean_1_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
input: "update_GRUpostX_1/rnn/while/gru_cell/Sigmoid"
input: "^gradients/Add_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
input: "^gradients/Sub_4"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/split_grad/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/transpose_2_grad/InvertPermutation"
op: "InvertPermutation"
input: "transpose_2/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/transpose_2_grad/transpose"
op: "Transpose"
input: "gradients/Mean_1_grad/truediv"
input: "gradients/transpose_2_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/Reshape_8_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Reshape_8_grad/Reshape"
op: "Reshape"
input: "gradients/transpose_2_grad/transpose"
input: "gradients/Reshape_8_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
input: "update_GRUpostX_1/rnn/while/gru_cell/concat"
input: "^gradients/Add_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_4"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1"
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
input: "gradients/b_count_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/MatMul_1_grad/MatMul"
op: "BatchMatMul"
input: "gradients/Reshape_8_grad/Reshape"
input: "Reshape_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: true
  }
}
, name: "gradients/MatMul_1_grad/MatMul_1"
op: "BatchMatMul"
input: "Reshape_6"
input: "gradients/Reshape_8_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: true
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "gradients/MatMul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_1_grad/MatMul"
input: "^gradients/MatMul_1_grad/MatMul_1"
, name: "gradients/MatMul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_1_grad/MatMul"
input: "^gradients/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_1_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_1_grad/MatMul_1"
input: "^gradients/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_1_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Const"
op: "Const"
input: "^gradients/Sub_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Rank"
op: "Const"
input: "^gradients/Sub_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Const"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Shape"
op: "Const"
input: "^gradients/Sub_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_4"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/mod"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Shape"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/ConcatOffset"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/ConcatOffset:1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Slice_1"
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Slice_1"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
input: "gradients/b_count_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/Switch:1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Reshape_6_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_6_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_1_grad/tuple/control_dependency"
input: "gradients/Reshape_6_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Reshape_7_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_7_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_1_grad/tuple/control_dependency_1"
input: "gradients/Reshape_7_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/AddN_101"
op: "AddN"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
op: "Enter"
input: "update_GRUpostX_1/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
op: "Enter"
input: "update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/Sub_4"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostX_1/rnn/while/Identity_1"
input: "^gradients/Add_4"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/NextIteration_8"
op: "NextIteration"
input: "gradients/Add_4"
input: "^gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
input: "^gradients/Sub_4"
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
op: "ControlTrigger"
input: "^gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
, name: "gradients/NextIteration_9"
op: "NextIteration"
input: "gradients/Sub_4"
input: "^gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "gradients/AddN_101"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_102"
op: "AddN"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_103"
op: "AddN"
input: "gradients/update_GRUpriorZ_1/Reshape_1_grad/Reshape"
input: "gradients/Reshape_7_grad/Reshape"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_1/Reshape_1_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpriorZ/Mul_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ/Mul_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpriorZ/Mul_grad/Shape"
input: "gradients/update_GRUpriorZ/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/Mul_grad/Mul"
op: "Mul"
input: "gradients/AddN_103"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/Mul_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpriorZ/Mul_grad/Mul"
input: "gradients/update_GRUpriorZ/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ/Mul_grad/Sum"
input: "gradients/update_GRUpriorZ/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/Mul_grad/Mul_1"
op: "Mul"
input: "update_GRUpriorZ/Reshape_2"
input: "gradients/AddN_103"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpriorZ/Mul_grad/Mul_1"
input: "gradients/update_GRUpriorZ/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpriorZ/Mul_grad/Sum_1"
input: "gradients/update_GRUpriorZ/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/Mul_grad/Reshape"
input: "^gradients/update_GRUpriorZ/Mul_grad/Reshape_1"
, name: "gradients/update_GRUpriorZ/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/Mul_grad/Reshape"
input: "^gradients/update_GRUpriorZ/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/Mul_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpriorZ/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/Mul_grad/Reshape_1"
input: "^gradients/update_GRUpriorZ/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/Mul_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
input: "gradients/b_count_18"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/rnn/while/Switch_3_grad_1/NextIteration"
op: "NextIteration"
input: "gradients/AddN_102"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/Reshape_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ/Reshape_2_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ/Mul_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/Reshape_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_52"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "update_GRUpostX_1/rnn/TensorArray_1"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/TensorArray_1"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX_1/rnn/TensorArray_1"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "update_GRUpostX_1/rnn/TensorArrayUnstack/range"
input: "gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      unknown_rank: true
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
, name: "gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
    }
  }
}
, name: "gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/Exit_3_grad/b_exit"
op: "Enter"
input: "gradients/update_GRUpriorZ/Reshape_2_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/Exit_2_grad/b_exit"
op: "Enter"
input: "gradients/zeros_52"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "update_GRUpostX_1/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX_1/rnn/transpose_grad/transpose"
op: "Transpose"
input: "gradients/update_GRUpostX_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX_1/rnn/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/Switch_3_grad/b_switch"
op: "Merge"
input: "gradients/update_GRUpriorZ/rnn/while/Exit_3_grad/b_exit"
input: "gradients/update_GRUpriorZ/rnn/while/Switch_3_grad_1/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX_1/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX_1/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX_1/rnn/transpose_grad/transpose"
input: "gradients/update_GRUpostX_1/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/Merge_3_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ/rnn/while/Switch_3_grad/b_switch"
input: "gradients/b_count_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/Merge_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/rnn/while/Merge_3_grad/Switch"
, name: "gradients/update_GRUpriorZ/rnn/while/Merge_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/Merge_3_grad/Switch"
input: "^gradients/update_GRUpriorZ/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/Merge_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/Merge_3_grad/Switch:1"
input: "^gradients/update_GRUpriorZ/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/truediv_7_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/truediv_7_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_7_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_7_grad/Shape"
input: "gradients/truediv_7_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_7_grad/RealDiv"
op: "RealDiv"
input: "gradients/update_GRUpostX_1/Reshape_grad/Reshape"
input: "truediv_7/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_7_grad/Sum"
op: "Sum"
input: "gradients/truediv_7_grad/RealDiv"
input: "gradients/truediv_7_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_7_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_7_grad/Sum"
input: "gradients/truediv_7_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_7_grad/Neg"
op: "Neg"
input: "Mean_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_7_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_7_grad/Neg"
input: "truediv_7/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_7_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_7_grad/RealDiv_1"
input: "truediv_7/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_7_grad/mul"
op: "Mul"
input: "gradients/update_GRUpostX_1/Reshape_grad/Reshape"
input: "gradients/truediv_7_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_7_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_7_grad/mul"
input: "gradients/truediv_7_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_7_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_7_grad/Sum_1"
input: "gradients/truediv_7_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_7_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_7_grad/Reshape"
input: "^gradients/truediv_7_grad/Reshape_1"
, name: "gradients/truediv_7_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_7_grad/Reshape"
input: "^gradients/truediv_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_7_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_7_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_7_grad/Reshape_1"
input: "^gradients/truediv_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_7_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/Enter_3_grad/Exit"
op: "Exit"
input: "gradients/update_GRUpriorZ/rnn/while/Merge_3_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Mean_7_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000\t\000\000\000"
    }
  }
}
, name: "gradients/Mean_7_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_7_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}
, name: "gradients/Mean_7_grad/add"
op: "Add"
input: "Mean_7/reduction_indices"
input: "gradients/Mean_7_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_7_grad/Shape"
    }
  }
}
, name: "gradients/Mean_7_grad/mod"
op: "FloorMod"
input: "gradients/Mean_7_grad/add"
input: "gradients/Mean_7_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_7_grad/Shape"
    }
  }
}
, name: "gradients/Mean_7_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_7_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Mean_7_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_7_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Mean_7_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_7_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_7_grad/range"
op: "Range"
input: "gradients/Mean_7_grad/range/start"
input: "gradients/Mean_7_grad/Size"
input: "gradients/Mean_7_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_7_grad/Shape"
    }
  }
}
, name: "gradients/Mean_7_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_7_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_7_grad/Fill"
op: "Fill"
input: "gradients/Mean_7_grad/Shape_1"
input: "gradients/Mean_7_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_7_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_7_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Mean_7_grad/range"
input: "gradients/Mean_7_grad/mod"
input: "gradients/Mean_7_grad/Shape"
input: "gradients/Mean_7_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_7_grad/Shape"
    }
  }
}
, name: "gradients/Mean_7_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_7_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_7_grad/Maximum"
op: "Maximum"
input: "gradients/Mean_7_grad/DynamicStitch"
input: "gradients/Mean_7_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_7_grad/Shape"
    }
  }
}
, name: "gradients/Mean_7_grad/floordiv"
op: "FloorDiv"
input: "gradients/Mean_7_grad/Shape"
input: "gradients/Mean_7_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_7_grad/Shape"
    }
  }
}
, name: "gradients/Mean_7_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_7_grad/tuple/control_dependency"
input: "gradients/Mean_7_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_7_grad/Tile"
op: "Tile"
input: "gradients/Mean_7_grad/Reshape"
input: "gradients/Mean_7_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_7_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "gradients/Mean_7_grad/truediv"
op: "RealDiv"
input: "gradients/Mean_7_grad/Tile"
input: "gradients/Mean_7_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ/rnn/while/Enter_3_grad/Exit"
input: "gradients/update_GRUpriorZ/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/rnn/while/Merge_3_grad/tuple/control_dependency_1"
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/transpose_8_grad/InvertPermutation"
op: "InvertPermutation"
input: "transpose_8/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/transpose_8_grad/transpose"
op: "Transpose"
input: "gradients/Mean_7_grad/truediv"
input: "gradients/transpose_8_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
input: "update_GRUpriorZ/rnn/while/Identity_3"
input: "^gradients/Add_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_6"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
input: "update_GRUpriorZ/rnn/while/gru_cell/split:1"
input: "^gradients/Add_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_6"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1"
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
input: "update_GRUpriorZ/rnn/while/gru_cell/Tanh"
input: "^gradients/Add_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_6"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
input: "update_GRUpriorZ/rnn/while/gru_cell/sub"
input: "^gradients/Add_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_6"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1"
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1"
    }
  }
}
, name: "gradients/Reshape_27_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Reshape_27_grad/Reshape"
op: "Reshape"
input: "gradients/transpose_8_grad/transpose"
input: "gradients/Reshape_27_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Shape"
op: "Const"
input: "^gradients/Sub_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Shape"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Sum"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Neg"
op: "Neg"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Neg"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Reshape_1"
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Reshape_1"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Tanh_grad/TanhGrad"
op: "TanhGrad"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/MatMul_7_grad/MatMul"
op: "BatchMatMul"
input: "gradients/Reshape_27_grad/Reshape"
input: "Reshape_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: true
  }
}
, name: "gradients/MatMul_7_grad/MatMul_1"
op: "BatchMatMul"
input: "Reshape_25"
input: "gradients/Reshape_27_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: true
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "gradients/MatMul_7_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_7_grad/MatMul"
input: "^gradients/MatMul_7_grad/MatMul_1"
, name: "gradients/MatMul_7_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_7_grad/MatMul"
input: "^gradients/MatMul_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_7_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_7_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_7_grad/MatMul_1"
input: "^gradients/MatMul_7_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_7_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Tanh_grad/TanhGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/Tanh_grad/TanhGrad"
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Tanh_grad/TanhGrad"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/Tanh_grad/TanhGrad"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/Reshape_25_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_25_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_7_grad/tuple/control_dependency"
input: "gradients/Reshape_25_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Reshape_26_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_26_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_7_grad/tuple/control_dependency_1"
input: "gradients/Reshape_26_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
input: "update_GRUpriorZ/rnn/while/gru_cell/concat_1"
input: "^gradients/Add_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_6"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
input: "gradients/b_count_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_104"
op: "AddN"
input: "gradients/update_GRUpostX_1/Reshape_1_grad/Reshape"
input: "gradients/Reshape_26_grad/Reshape"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_1/Reshape_1_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostX/Mul_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX/Mul_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpostX/Mul_grad/Shape"
input: "gradients/update_GRUpostX/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/Mul_grad/Mul"
op: "Mul"
input: "gradients/AddN_104"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/Mul_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpostX/Mul_grad/Mul"
input: "gradients/update_GRUpostX/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX/Mul_grad/Sum"
input: "gradients/update_GRUpostX/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/Mul_grad/Mul_1"
op: "Mul"
input: "update_GRUpostX/Reshape_2"
input: "gradients/AddN_104"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpostX/Mul_grad/Mul_1"
input: "gradients/update_GRUpostX/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpostX/Mul_grad/Sum_1"
input: "gradients/update_GRUpostX/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/Mul_grad/Reshape"
input: "^gradients/update_GRUpostX/Mul_grad/Reshape_1"
, name: "gradients/update_GRUpostX/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/Mul_grad/Reshape"
input: "^gradients/update_GRUpostX/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/Mul_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostX/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/Mul_grad/Reshape_1"
input: "^gradients/update_GRUpostX/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/Mul_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Const"
op: "Const"
input: "^gradients/Sub_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Rank"
op: "Const"
input: "^gradients/Sub_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Const"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Shape"
op: "Const"
input: "^gradients/Sub_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/mod"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Shape"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/ConcatOffset:1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Slice_1"
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Slice_1"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
input: "gradients/b_count_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_105"
op: "AddN"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpostX/Reshape_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX/Reshape_2_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX/Mul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/Reshape_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_53"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
input: "update_GRUpriorZ/rnn/while/gru_cell/split"
input: "^gradients/Add_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_6"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1"
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_106"
op: "AddN"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/Exit_3_grad/b_exit"
op: "Enter"
input: "gradients/update_GRUpostX/Reshape_2_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/Exit_2_grad/b_exit"
op: "Enter"
input: "gradients/zeros_53"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/AddN_107"
op: "AddN"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/split_grad/concat/Const"
op: "Const"
input: "^gradients/Sub_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/split_grad/concat"
op: "ConcatV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
input: "gradients/AddN_107"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/split_grad/concat/Const"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/Switch_3_grad/b_switch"
op: "Merge"
input: "gradients/update_GRUpostX/rnn/while/Exit_3_grad/b_exit"
input: "gradients/update_GRUpostX/rnn/while/Switch_3_grad_1/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
input: "update_GRUpriorZ/rnn/while/gru_cell/Sigmoid"
input: "^gradients/Add_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
input: "^gradients/Sub_6"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/split_grad/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/Merge_3_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX/rnn/while/Switch_3_grad/b_switch"
input: "gradients/b_count_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/Merge_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/rnn/while/Merge_3_grad/Switch"
, name: "gradients/update_GRUpostX/rnn/while/Merge_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/Merge_3_grad/Switch"
input: "^gradients/update_GRUpostX/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/Merge_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/Merge_3_grad/Switch:1"
input: "^gradients/update_GRUpostX/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/Enter_3_grad/Exit"
op: "Exit"
input: "gradients/update_GRUpostX/rnn/while/Merge_3_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
input: "update_GRUpriorZ/rnn/while/gru_cell/concat"
input: "^gradients/Add_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_6"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1"
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
input: "gradients/b_count_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX/rnn/while/Enter_3_grad/Exit"
input: "gradients/update_GRUpostX/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/rnn/while/Merge_3_grad/tuple/control_dependency_1"
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Const"
op: "Const"
input: "^gradients/Sub_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Rank"
op: "Const"
input: "^gradients/Sub_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Const"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Shape"
op: "Const"
input: "^gradients/Sub_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_6"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/mod"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Shape"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/ConcatOffset"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/ConcatOffset:1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Slice_1"
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Slice_1"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
input: "gradients/b_count_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/Switch:1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_108"
op: "AddN"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
input: "update_GRUpostX/rnn/while/Identity_3"
input: "^gradients/Add_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_7"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
input: "update_GRUpostX/rnn/while/gru_cell/split:1"
input: "^gradients/Add_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_7"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1"
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
input: "update_GRUpostX/rnn/while/gru_cell/Tanh"
input: "^gradients/Add_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_7"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
input: "update_GRUpostX/rnn/while/gru_cell/sub"
input: "^gradients/Add_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_7"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1"
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_109"
op: "AddN"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
op: "Enter"
input: "update_GRUpriorZ/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
op: "Enter"
input: "update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/Sub_6"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
op: "StackV2"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpriorZ/rnn/while/Identity_1"
input: "^gradients/Add_6"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/NextIteration_12"
op: "NextIteration"
input: "gradients/Add_6"
input: "^gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
input: "^gradients/Sub_6"
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
op: "ControlTrigger"
input: "^gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
, name: "gradients/NextIteration_13"
op: "NextIteration"
input: "gradients/Sub_6"
input: "^gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "gradients/AddN_109"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_110"
op: "AddN"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_111"
op: "AddN"
input: "gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
input: "gradients/update_GRUpriorZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
input: "gradients/update_GRUpriorZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Shape"
op: "Const"
input: "^gradients/Sub_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Shape"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Sum"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Neg"
op: "Neg"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Neg"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Reshape_1"
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Reshape_1"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/Tanh_grad/TanhGrad"
op: "TanhGrad"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpriorZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
input: "gradients/b_count_26"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
op: "Add"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/while/Switch_3_grad_1/NextIteration"
op: "NextIteration"
input: "gradients/AddN_110"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/Tanh_grad/TanhGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/Tanh_grad/TanhGrad"
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/Tanh_grad/TanhGrad"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/Tanh_grad/TanhGrad"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "update_GRUpriorZ/rnn/TensorArray_1"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/TensorArray_1"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/TensorArray_1"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "update_GRUpriorZ/rnn/TensorArrayUnstack/range"
input: "gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      unknown_rank: true
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
, name: "gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
    }
  }
}
, name: "gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpriorZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
input: "update_GRUpostX/rnn/while/gru_cell/concat_1"
input: "^gradients/Add_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_7"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
input: "gradients/b_count_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpriorZ/rnn/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "update_GRUpriorZ/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpriorZ/rnn/transpose_grad/transpose"
op: "Transpose"
input: "gradients/update_GRUpriorZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
input: "gradients/update_GRUpriorZ/rnn/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Const"
op: "Const"
input: "^gradients/Sub_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Rank"
op: "Const"
input: "^gradients/Sub_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Const"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Shape"
op: "Const"
input: "^gradients/Sub_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/mod"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Shape"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/ConcatOffset:1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Slice_1"
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Slice_1"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
input: "gradients/b_count_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_112"
op: "AddN"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpriorZ/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpriorZ/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpriorZ/rnn/transpose_grad/transpose"
input: "gradients/update_GRUpriorZ/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
input: "update_GRUpostX/rnn/while/gru_cell/split"
input: "^gradients/Add_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_7"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1"
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_113"
op: "AddN"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
    }
  }
}
, name: "gradients/truediv_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/truediv_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_grad/Shape"
input: "gradients/truediv_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_grad/RealDiv"
op: "RealDiv"
input: "gradients/update_GRUpriorZ/Reshape_grad/Reshape"
input: "truediv/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_grad/Sum"
op: "Sum"
input: "gradients/truediv_grad/RealDiv"
input: "gradients/truediv_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_grad/Sum"
input: "gradients/truediv_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_grad/Neg"
op: "Neg"
input: "Mean"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_grad/Neg"
input: "truediv/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_grad/RealDiv_1"
input: "truediv/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_grad/mul"
op: "Mul"
input: "gradients/update_GRUpriorZ/Reshape_grad/Reshape"
input: "gradients/truediv_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_grad/mul"
input: "gradients/truediv_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_grad/Sum_1"
input: "gradients/truediv_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_grad/Reshape"
input: "^gradients/truediv_grad/Reshape_1"
, name: "gradients/truediv_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_grad/Reshape"
input: "^gradients/truediv_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_grad/Reshape_1"
input: "^gradients/truediv_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_grad/Reshape_1"
    }
  }
}
, name: "gradients/AddN_114"
op: "AddN"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/split_grad/concat/Const"
op: "Const"
input: "^gradients/Sub_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/split_grad/concat"
op: "ConcatV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
input: "gradients/AddN_114"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/split_grad/concat/Const"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000\t\000\000\000"
    }
  }
}
, name: "gradients/Mean_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}
, name: "gradients/Mean_grad/add"
op: "Add"
input: "Mean/reduction_indices"
input: "gradients/Mean_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_grad/Shape"
    }
  }
}
, name: "gradients/Mean_grad/mod"
op: "FloorMod"
input: "gradients/Mean_grad/add"
input: "gradients/Mean_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_grad/Shape"
    }
  }
}
, name: "gradients/Mean_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Mean_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Mean_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_grad/range"
op: "Range"
input: "gradients/Mean_grad/range/start"
input: "gradients/Mean_grad/Size"
input: "gradients/Mean_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_grad/Shape"
    }
  }
}
, name: "gradients/Mean_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_grad/Fill"
op: "Fill"
input: "gradients/Mean_grad/Shape_1"
input: "gradients/Mean_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Mean_grad/range"
input: "gradients/Mean_grad/mod"
input: "gradients/Mean_grad/Shape"
input: "gradients/Mean_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_grad/Shape"
    }
  }
}
, name: "gradients/Mean_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_grad/Maximum"
op: "Maximum"
input: "gradients/Mean_grad/DynamicStitch"
input: "gradients/Mean_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_grad/Shape"
    }
  }
}
, name: "gradients/Mean_grad/floordiv"
op: "FloorDiv"
input: "gradients/Mean_grad/Shape"
input: "gradients/Mean_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_grad/Shape"
    }
  }
}
, name: "gradients/Mean_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_grad/tuple/control_dependency"
input: "gradients/Mean_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_grad/Tile"
op: "Tile"
input: "gradients/Mean_grad/Reshape"
input: "gradients/Mean_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "gradients/Mean_grad/truediv"
op: "RealDiv"
input: "gradients/Mean_grad/Tile"
input: "gradients/Mean_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
input: "update_GRUpostX/rnn/while/gru_cell/Sigmoid"
input: "^gradients/Add_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
input: "^gradients/Sub_7"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/split_grad/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/transpose_1_grad/InvertPermutation"
op: "InvertPermutation"
input: "transpose_1/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/transpose_1_grad/transpose"
op: "Transpose"
input: "gradients/Mean_grad/truediv"
input: "gradients/transpose_1_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/Reshape_5_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Reshape_5_grad/Reshape"
op: "Reshape"
input: "gradients/transpose_1_grad/transpose"
input: "gradients/Reshape_5_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
input: "update_GRUpostX/rnn/while/gru_cell/concat"
input: "^gradients/Add_7"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_7"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1"
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
input: "gradients/b_count_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/MatMul_grad/MatMul"
op: "BatchMatMul"
input: "gradients/Reshape_5_grad/Reshape"
input: "Reshape_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: true
  }
}
, name: "gradients/MatMul_grad/MatMul_1"
op: "BatchMatMul"
input: "Reshape_3"
input: "gradients/Reshape_5_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: true
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "gradients/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_grad/MatMul"
input: "^gradients/MatMul_grad/MatMul_1"
, name: "gradients/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_grad/MatMul"
input: "^gradients/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_grad/MatMul_1"
input: "^gradients/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Const"
op: "Const"
input: "^gradients/Sub_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Rank"
op: "Const"
input: "^gradients/Sub_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Const"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Shape"
op: "Const"
input: "^gradients/Sub_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_7"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/mod"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Shape"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/ConcatOffset"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/ConcatOffset:1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Slice_1"
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Slice_1"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
input: "gradients/b_count_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/Switch:1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_115"
op: "AddN"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
    }
  }
}
, name: "gradients/Reshape_3_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_3_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_grad/tuple/control_dependency"
input: "gradients/Reshape_3_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Reshape_4_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_4_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_grad/tuple/control_dependency_1"
input: "gradients/Reshape_4_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/AddN_116"
op: "AddN"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
op: "Enter"
input: "update_GRUpostX/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
op: "Enter"
input: "update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/Sub_7"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostX/rnn/while/Identity_1"
input: "^gradients/Add_7"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/NextIteration_14"
op: "NextIteration"
input: "gradients/Add_7"
input: "^gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
input: "^gradients/Sub_7"
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
op: "ControlTrigger"
input: "^gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
, name: "gradients/NextIteration_15"
op: "NextIteration"
input: "gradients/Sub_7"
input: "^gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "gradients/AddN_116"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_117"
op: "AddN"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_118"
op: "AddN"
input: "gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostX_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostX/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
    }
  }
}
, name: "gradients/AddN_119"
op: "AddN"
input: "gradients/Reshape_9_grad/Reshape"
input: "gradients/Reshape_6_grad/Reshape"
input: "gradients/Reshape_3_grad/Reshape"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Reshape_9_grad/Reshape"
    }
  }
}
, name: "gradients/edge_nnpriorZ/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "T\006\000\000\304\t\000\000"
    }
  }
}
, name: "gradients/edge_nnpriorZ/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/AddN_119"
input: "gradients/edge_nnpriorZ/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostX/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
input: "gradients/b_count_30"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
op: "Add"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/while/Switch_3_grad_1/NextIteration"
op: "NextIteration"
input: "gradients/AddN_117"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/edge_nnpriorZ/dense_1/Tanh_grad/TanhGrad"
op: "TanhGrad"
input: "edge_nnpriorZ/dense_1/Tanh"
input: "gradients/edge_nnpriorZ/Reshape_1_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "update_GRUpostX/rnn/TensorArray_1"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/TensorArray_1"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/TensorArray_1"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "update_GRUpostX/rnn/TensorArrayUnstack/range"
input: "gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      unknown_rank: true
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
, name: "gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
    }
  }
}
, name: "gradients/edge_nnpriorZ/dense_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/edge_nnpriorZ/dense_1/Tanh_grad/TanhGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/edge_nnpriorZ/dense_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/edge_nnpriorZ/dense_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/edge_nnpriorZ/dense_1/Tanh_grad/TanhGrad"
, name: "gradients/edge_nnpriorZ/dense_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/edge_nnpriorZ/dense_1/Tanh_grad/TanhGrad"
input: "^gradients/edge_nnpriorZ/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpriorZ/dense_1/Tanh_grad/TanhGrad"
    }
  }
}
, name: "gradients/edge_nnpriorZ/dense_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/edge_nnpriorZ/dense_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/edge_nnpriorZ/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpriorZ/dense_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpostX/rnn/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "update_GRUpostX/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostX/rnn/transpose_grad/transpose"
op: "Transpose"
input: "gradients/update_GRUpostX/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
input: "gradients/update_GRUpostX/rnn/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/edge_nnpriorZ/dense_1/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/edge_nnpriorZ/dense_1/BiasAdd_grad/tuple/control_dependency"
input: "edge_nnpriorZ/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/edge_nnpriorZ/dense_1/MatMul_grad/MatMul_1"
op: "MatMul"
input: "edge_nnpriorZ/dense/Sigmoid"
input: "gradients/edge_nnpriorZ/dense_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/edge_nnpriorZ/dense_1/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/edge_nnpriorZ/dense_1/MatMul_grad/MatMul"
input: "^gradients/edge_nnpriorZ/dense_1/MatMul_grad/MatMul_1"
, name: "gradients/edge_nnpriorZ/dense_1/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/edge_nnpriorZ/dense_1/MatMul_grad/MatMul"
input: "^gradients/edge_nnpriorZ/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpriorZ/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/edge_nnpriorZ/dense_1/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/edge_nnpriorZ/dense_1/MatMul_grad/MatMul_1"
input: "^gradients/edge_nnpriorZ/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpriorZ/dense_1/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostX/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostX/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostX/rnn/transpose_grad/transpose"
input: "gradients/update_GRUpostX/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/edge_nnpriorZ/dense/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "edge_nnpriorZ/dense/Sigmoid"
input: "gradients/edge_nnpriorZ/dense_1/MatMul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_6_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/truediv_6_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_6_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_6_grad/Shape"
input: "gradients/truediv_6_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_6_grad/RealDiv"
op: "RealDiv"
input: "gradients/update_GRUpostX/Reshape_grad/Reshape"
input: "truediv_6/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_6_grad/Sum"
op: "Sum"
input: "gradients/truediv_6_grad/RealDiv"
input: "gradients/truediv_6_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_6_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_6_grad/Sum"
input: "gradients/truediv_6_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_6_grad/Neg"
op: "Neg"
input: "Mean_6"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_6_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_6_grad/Neg"
input: "truediv_6/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_6_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_6_grad/RealDiv_1"
input: "truediv_6/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_6_grad/mul"
op: "Mul"
input: "gradients/update_GRUpostX/Reshape_grad/Reshape"
input: "gradients/truediv_6_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_6_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_6_grad/mul"
input: "gradients/truediv_6_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_6_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_6_grad/Sum_1"
input: "gradients/truediv_6_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_6_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_6_grad/Reshape"
input: "^gradients/truediv_6_grad/Reshape_1"
, name: "gradients/truediv_6_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_6_grad/Reshape"
input: "^gradients/truediv_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_6_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_6_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_6_grad/Reshape_1"
input: "^gradients/truediv_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_6_grad/Reshape_1"
    }
  }
}
, name: "gradients/edge_nnpriorZ/dense/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/edge_nnpriorZ/dense/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/edge_nnpriorZ/dense/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/edge_nnpriorZ/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/edge_nnpriorZ/dense/Sigmoid_grad/SigmoidGrad"
, name: "gradients/edge_nnpriorZ/dense/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/edge_nnpriorZ/dense/Sigmoid_grad/SigmoidGrad"
input: "^gradients/edge_nnpriorZ/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpriorZ/dense/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/edge_nnpriorZ/dense/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/edge_nnpriorZ/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/edge_nnpriorZ/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpriorZ/dense/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/Mean_6_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000\t\000\000\000"
    }
  }
}
, name: "gradients/Mean_6_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_6_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}
, name: "gradients/Mean_6_grad/add"
op: "Add"
input: "Mean_6/reduction_indices"
input: "gradients/Mean_6_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_6_grad/Shape"
    }
  }
}
, name: "gradients/Mean_6_grad/mod"
op: "FloorMod"
input: "gradients/Mean_6_grad/add"
input: "gradients/Mean_6_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_6_grad/Shape"
    }
  }
}
, name: "gradients/Mean_6_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_6_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Mean_6_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_6_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Mean_6_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_6_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_6_grad/range"
op: "Range"
input: "gradients/Mean_6_grad/range/start"
input: "gradients/Mean_6_grad/Size"
input: "gradients/Mean_6_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_6_grad/Shape"
    }
  }
}
, name: "gradients/Mean_6_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_6_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_6_grad/Fill"
op: "Fill"
input: "gradients/Mean_6_grad/Shape_1"
input: "gradients/Mean_6_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_6_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_6_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Mean_6_grad/range"
input: "gradients/Mean_6_grad/mod"
input: "gradients/Mean_6_grad/Shape"
input: "gradients/Mean_6_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_6_grad/Shape"
    }
  }
}
, name: "gradients/Mean_6_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_6_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_6_grad/Maximum"
op: "Maximum"
input: "gradients/Mean_6_grad/DynamicStitch"
input: "gradients/Mean_6_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_6_grad/Shape"
    }
  }
}
, name: "gradients/Mean_6_grad/floordiv"
op: "FloorDiv"
input: "gradients/Mean_6_grad/Shape"
input: "gradients/Mean_6_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_6_grad/Shape"
    }
  }
}
, name: "gradients/Mean_6_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_6_grad/tuple/control_dependency"
input: "gradients/Mean_6_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_6_grad/Tile"
op: "Tile"
input: "gradients/Mean_6_grad/Reshape"
input: "gradients/Mean_6_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_6_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "gradients/Mean_6_grad/truediv"
op: "RealDiv"
input: "gradients/Mean_6_grad/Tile"
input: "gradients/Mean_6_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/edge_nnpriorZ/dense/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/edge_nnpriorZ/dense/BiasAdd_grad/tuple/control_dependency"
input: "edge_nnpriorZ/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/edge_nnpriorZ/dense/MatMul_grad/MatMul_1"
op: "MatMul"
input: "edge_nnpriorZ/Reshape"
input: "gradients/edge_nnpriorZ/dense/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/edge_nnpriorZ/dense/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/edge_nnpriorZ/dense/MatMul_grad/MatMul"
input: "^gradients/edge_nnpriorZ/dense/MatMul_grad/MatMul_1"
, name: "gradients/edge_nnpriorZ/dense/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/edge_nnpriorZ/dense/MatMul_grad/MatMul"
input: "^gradients/edge_nnpriorZ/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpriorZ/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/edge_nnpriorZ/dense/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/edge_nnpriorZ/dense/MatMul_grad/MatMul_1"
input: "^gradients/edge_nnpriorZ/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpriorZ/dense/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/transpose_7_grad/InvertPermutation"
op: "InvertPermutation"
input: "transpose_7/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/transpose_7_grad/transpose"
op: "Transpose"
input: "gradients/Mean_6_grad/truediv"
input: "gradients/transpose_7_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Reshape_24_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Reshape_24_grad/Reshape"
op: "Reshape"
input: "gradients/transpose_7_grad/transpose"
input: "gradients/Reshape_24_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/MatMul_6_grad/MatMul"
op: "BatchMatMul"
input: "gradients/Reshape_24_grad/Reshape"
input: "Reshape_23"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: true
  }
}
, name: "gradients/MatMul_6_grad/MatMul_1"
op: "BatchMatMul"
input: "Reshape_22"
input: "gradients/Reshape_24_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: true
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "gradients/MatMul_6_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_6_grad/MatMul"
input: "^gradients/MatMul_6_grad/MatMul_1"
, name: "gradients/MatMul_6_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_6_grad/MatMul"
input: "^gradients/MatMul_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_6_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_6_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_6_grad/MatMul_1"
input: "^gradients/MatMul_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_6_grad/MatMul_1"
    }
  }
}
, name: "gradients/Reshape_22_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_22_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_6_grad/tuple/control_dependency"
input: "gradients/Reshape_22_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Reshape_23_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_23_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_6_grad/tuple/control_dependency_1"
input: "gradients/Reshape_23_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/AddN_120"
op: "AddN"
input: "gradients/Reshape_28_grad/Reshape"
input: "gradients/Reshape_25_grad/Reshape"
input: "gradients/Reshape_22_grad/Reshape"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Reshape_28_grad/Reshape"
    }
  }
}
, name: "gradients/edge_nnpostX/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "T\006\000\000\304\t\000\000"
    }
  }
}
, name: "gradients/edge_nnpostX/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/AddN_120"
input: "gradients/edge_nnpostX/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/AddN_121"
op: "AddN"
input: "gradients/update_GRUpostX/Reshape_1_grad/Reshape"
input: "gradients/Reshape_23_grad/Reshape"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/Reshape_1_grad/Reshape"
    }
  }
}
, name: "gradients/add_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/AddN_121"
, name: "gradients/add_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/AddN_121"
input: "^gradients/add_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/Reshape_1_grad/Reshape"
    }
  }
}
, name: "gradients/add_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/AddN_121"
input: "^gradients/add_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostX/Reshape_1_grad/Reshape"
    }
  }
}
, name: "gradients/edge_nnpostX/dense_1/Tanh_grad/TanhGrad"
op: "TanhGrad"
input: "edge_nnpostX/dense_1/Tanh"
input: "gradients/edge_nnpostX/Reshape_1_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Mul_6_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Mul_6_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Mul_6_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Mul_6_grad/Shape"
input: "gradients/Mul_6_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mul_6_grad/Mul"
op: "Mul"
input: "gradients/add_2_grad/tuple/control_dependency"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Mul_6_grad/Sum"
op: "Sum"
input: "gradients/Mul_6_grad/Mul"
input: "gradients/Mul_6_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/Mul_6_grad/Reshape"
op: "Reshape"
input: "gradients/Mul_6_grad/Sum"
input: "gradients/Mul_6_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mul_6_grad/Mul_1"
op: "Mul"
input: "Add_1"
input: "gradients/add_2_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Mul_6_grad/Sum_1"
op: "Sum"
input: "gradients/Mul_6_grad/Mul_1"
input: "gradients/Mul_6_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/Mul_6_grad/Reshape_1"
op: "Reshape"
input: "gradients/Mul_6_grad/Sum_1"
input: "gradients/Mul_6_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mul_6_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Mul_6_grad/Reshape"
input: "^gradients/Mul_6_grad/Reshape_1"
, name: "gradients/Mul_6_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Mul_6_grad/Reshape"
input: "^gradients/Mul_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mul_6_grad/Reshape"
    }
  }
}
, name: "gradients/Mul_6_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Mul_6_grad/Reshape_1"
input: "^gradients/Mul_6_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mul_6_grad/Reshape_1"
    }
  }
}
, name: "gradients/edge_nnpostX/dense_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/edge_nnpostX/dense_1/Tanh_grad/TanhGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/edge_nnpostX/dense_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/edge_nnpostX/dense_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/edge_nnpostX/dense_1/Tanh_grad/TanhGrad"
, name: "gradients/edge_nnpostX/dense_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/edge_nnpostX/dense_1/Tanh_grad/TanhGrad"
input: "^gradients/edge_nnpostX/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostX/dense_1/Tanh_grad/TanhGrad"
    }
  }
}
, name: "gradients/edge_nnpostX/dense_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/edge_nnpostX/dense_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/edge_nnpostX/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostX/dense_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/Add_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Mul_6_grad/tuple/control_dependency"
, name: "gradients/Add_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Mul_6_grad/tuple/control_dependency"
input: "^gradients/Add_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mul_6_grad/Reshape"
    }
  }
}
, name: "gradients/Add_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Mul_6_grad/tuple/control_dependency"
input: "^gradients/Add_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mul_6_grad/Reshape"
    }
  }
}
, name: "gradients/edge_nnpostX/dense_1/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/edge_nnpostX/dense_1/BiasAdd_grad/tuple/control_dependency"
input: "edge_nnpostX/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/edge_nnpostX/dense_1/MatMul_grad/MatMul_1"
op: "MatMul"
input: "edge_nnpostX/dense/Sigmoid"
input: "gradients/edge_nnpostX/dense_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/edge_nnpostX/dense_1/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/edge_nnpostX/dense_1/MatMul_grad/MatMul"
input: "^gradients/edge_nnpostX/dense_1/MatMul_grad/MatMul_1"
, name: "gradients/edge_nnpostX/dense_1/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/edge_nnpostX/dense_1/MatMul_grad/MatMul"
input: "^gradients/edge_nnpostX/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostX/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/edge_nnpostX/dense_1/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/edge_nnpostX/dense_1/MatMul_grad/MatMul_1"
input: "^gradients/edge_nnpostX/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostX/dense_1/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/Mul_5_grad/Mul"
op: "Mul"
input: "gradients/Add_1_grad/tuple/control_dependency_1"
input: "random_normal_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Mul_5_grad/Mul_1"
op: "Mul"
input: "gradients/Add_1_grad/tuple/control_dependency_1"
input: "Exp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Mul_5_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Mul_5_grad/Mul"
input: "^gradients/Mul_5_grad/Mul_1"
, name: "gradients/Mul_5_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Mul_5_grad/Mul"
input: "^gradients/Mul_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mul_5_grad/Mul"
    }
  }
}
, name: "gradients/Mul_5_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Mul_5_grad/Mul_1"
input: "^gradients/Mul_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mul_5_grad/Mul_1"
    }
  }
}
, name: "gradients/edge_nnpostX/dense/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "edge_nnpostX/dense/Sigmoid"
input: "gradients/edge_nnpostX/dense_1/MatMul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Exp_1_grad/mul"
op: "Mul"
input: "gradients/Mul_5_grad/tuple/control_dependency"
input: "Exp_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/edge_nnpostX/dense/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/edge_nnpostX/dense/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/edge_nnpostX/dense/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/edge_nnpostX/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/edge_nnpostX/dense/Sigmoid_grad/SigmoidGrad"
, name: "gradients/edge_nnpostX/dense/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/edge_nnpostX/dense/Sigmoid_grad/SigmoidGrad"
input: "^gradients/edge_nnpostX/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostX/dense/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/edge_nnpostX/dense/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/edge_nnpostX/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/edge_nnpostX/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostX/dense/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/mul_4_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/mul_4_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/mul_4_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/mul_4_grad/Shape"
input: "gradients/mul_4_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/mul_4_grad/Mul"
op: "Mul"
input: "gradients/Exp_1_grad/mul"
input: "split_1:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_4_grad/Sum"
op: "Sum"
input: "gradients/mul_4_grad/Mul"
input: "gradients/mul_4_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/mul_4_grad/Reshape"
op: "Reshape"
input: "gradients/mul_4_grad/Sum"
input: "gradients/mul_4_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/mul_4_grad/Mul_1"
op: "Mul"
input: "mul_4/x"
input: "gradients/Exp_1_grad/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/mul_4_grad/Sum_1"
op: "Sum"
input: "gradients/mul_4_grad/Mul_1"
input: "gradients/mul_4_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/mul_4_grad/Reshape_1"
op: "Reshape"
input: "gradients/mul_4_grad/Sum_1"
input: "gradients/mul_4_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/mul_4_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/mul_4_grad/Reshape"
input: "^gradients/mul_4_grad/Reshape_1"
, name: "gradients/mul_4_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/mul_4_grad/Reshape"
input: "^gradients/mul_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_4_grad/Reshape"
    }
  }
}
, name: "gradients/mul_4_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/mul_4_grad/Reshape_1"
input: "^gradients/mul_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/mul_4_grad/Reshape_1"
    }
  }
}
, name: "gradients/edge_nnpostX/dense/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/edge_nnpostX/dense/BiasAdd_grad/tuple/control_dependency"
input: "edge_nnpostX/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/edge_nnpostX/dense/MatMul_grad/MatMul_1"
op: "MatMul"
input: "edge_nnpostX/Reshape"
input: "gradients/edge_nnpostX/dense/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/edge_nnpostX/dense/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/edge_nnpostX/dense/MatMul_grad/MatMul"
input: "^gradients/edge_nnpostX/dense/MatMul_grad/MatMul_1"
, name: "gradients/edge_nnpostX/dense/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/edge_nnpostX/dense/MatMul_grad/MatMul"
input: "^gradients/edge_nnpostX/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostX/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/edge_nnpostX/dense/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/edge_nnpostX/dense/MatMul_grad/MatMul_1"
input: "^gradients/edge_nnpostX/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostX/dense/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/AddN_122"
op: "AddN"
input: "gradients/Sub_grad/tuple/control_dependency_1"
input: "gradients/Add_1_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Sub_grad/Neg"
    }
  }
}
, name: "gradients/AddN_123"
op: "AddN"
input: "gradients/Exp_2_grad/mul"
input: "gradients/mul_4_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Exp_2_grad/mul"
    }
  }
}
, name: "gradients/split_1_grad/concat"
op: "ConcatV2"
input: "gradients/AddN_122"
input: "gradients/AddN_123"
input: "split_1/split_dim"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/Mul_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000d\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostZ/Mul_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostZ/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/g_nnpostZ/Mul_grad/Shape"
input: "gradients/g_nnpostZ/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/Mul_grad/Mul"
op: "Mul"
input: "gradients/split_1_grad/concat"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/Mul_grad/Sum"
op: "Sum"
input: "gradients/g_nnpostZ/Mul_grad/Mul"
input: "gradients/g_nnpostZ/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostZ/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/g_nnpostZ/Mul_grad/Sum"
input: "gradients/g_nnpostZ/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/Mul_grad/Mul_1"
op: "Mul"
input: "g_nnpostZ/Reshape_1"
input: "gradients/split_1_grad/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/g_nnpostZ/Mul_grad/Mul_1"
input: "gradients/g_nnpostZ/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostZ/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/g_nnpostZ/Mul_grad/Sum_1"
input: "gradients/g_nnpostZ/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostZ/Mul_grad/Reshape"
input: "^gradients/g_nnpostZ/Mul_grad/Reshape_1"
, name: "gradients/g_nnpostZ/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostZ/Mul_grad/Reshape"
input: "^gradients/g_nnpostZ/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/Mul_grad/Reshape"
    }
  }
}
, name: "gradients/g_nnpostZ/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostZ/Mul_grad/Reshape_1"
input: "^gradients/g_nnpostZ/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/Mul_grad/Reshape_1"
    }
  }
}
, name: "gradients/g_nnpostZ/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostZ/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/g_nnpostZ/Mul_grad/tuple/control_dependency"
input: "gradients/g_nnpostZ/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/dense_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/g_nnpostZ/Reshape_1_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/g_nnpostZ/dense_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostZ/Reshape_1_grad/Reshape"
input: "^gradients/g_nnpostZ/dense_1/BiasAdd_grad/BiasAddGrad"
, name: "gradients/g_nnpostZ/dense_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostZ/Reshape_1_grad/Reshape"
input: "^gradients/g_nnpostZ/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/Reshape_1_grad/Reshape"
    }
  }
}
, name: "gradients/g_nnpostZ/dense_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostZ/dense_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/g_nnpostZ/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dense_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/g_nnpostZ/dense_1/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/g_nnpostZ/dense_1/BiasAdd_grad/tuple/control_dependency"
input: "g_nnpostZ/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/g_nnpostZ/dense_1/MatMul_grad/MatMul_1"
op: "MatMul"
input: "g_nnpostZ/dropout_1/cond/Merge"
input: "gradients/g_nnpostZ/dense_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostZ/dense_1/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostZ/dense_1/MatMul_grad/MatMul"
input: "^gradients/g_nnpostZ/dense_1/MatMul_grad/MatMul_1"
, name: "gradients/g_nnpostZ/dense_1/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostZ/dense_1/MatMul_grad/MatMul"
input: "^gradients/g_nnpostZ/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostZ/dense_1/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostZ/dense_1/MatMul_grad/MatMul_1"
input: "^gradients/g_nnpostZ/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dense_1/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/Merge_grad/cond_grad"
op: "Switch"
input: "gradients/g_nnpostZ/dense_1/MatMul_grad/tuple/control_dependency"
input: "g_nnpostZ/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/Merge_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostZ/dropout_1/cond/Merge_grad/cond_grad"
, name: "gradients/g_nnpostZ/dropout_1/cond/Merge_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostZ/dropout_1/cond/Merge_grad/cond_grad"
input: "^gradients/g_nnpostZ/dropout_1/cond/Merge_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostZ/dropout_1/cond/Merge_grad/cond_grad:1"
input: "^gradients/g_nnpostZ/dropout_1/cond/Merge_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/g_nnpostZ/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
input: "g_nnpostZ/dropout_1/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/Mul_1"
op: "Mul"
input: "gradients/g_nnpostZ/dropout_1/cond/Merge_grad/tuple/control_dependency_1"
input: "g_nnpostZ/dropout_1/cond/dropout/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/Mul"
input: "^gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/Mul_1"
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/Mul"
input: "^gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/Mul"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/Mul_1"
input: "^gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_66"
op: "Switch"
input: "g_nnpostZ/dense/Sigmoid"
input: "g_nnpostZ/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_48"
op: "Identity"
input: "gradients/Switch_66:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_49"
op: "Shape"
input: "gradients/Switch_66:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_54/Const"
op: "Const"
input: "^gradients/Identity_48"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_54"
op: "Fill"
input: "gradients/Shape_49"
input: "gradients/zeros_54/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/Identity/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/g_nnpostZ/dropout_1/cond/Merge_grad/tuple/control_dependency"
input: "gradients/zeros_54"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Shape"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/RealDiv"
op: "RealDiv"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
input: "g_nnpostZ/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Sum"
op: "Sum"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/RealDiv"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Reshape"
op: "Reshape"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Sum"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Neg"
op: "Neg"
input: "g_nnpostZ/dropout_1/cond/dropout/div/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Neg"
input: "g_nnpostZ/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/RealDiv_1"
input: "g_nnpostZ/dropout_1/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/mul"
op: "Mul"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/mul_grad/tuple/control_dependency"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Sum_1"
op: "Sum"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/mul"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Reshape_1"
op: "Reshape"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Sum_1"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Reshape"
input: "^gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Reshape_1"
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Reshape"
input: "^gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Reshape"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Reshape_1"
input: "^gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/Reshape_1"
    }
  }
}
, name: "gradients/Switch_67"
op: "Switch"
input: "g_nnpostZ/dense/Sigmoid"
input: "g_nnpostZ/dropout_1/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_49"
op: "Identity"
input: "gradients/Switch_67"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_50"
op: "Shape"
input: "gradients/Switch_67"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_55/Const"
op: "Const"
input: "^gradients/Identity_49"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_55"
op: "Fill"
input: "gradients/Shape_50"
input: "gradients/zeros_55/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/dropout_1/cond/dropout/div/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_55"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_124"
op: "AddN"
input: "gradients/g_nnpostZ/dropout_1/cond/Identity/Switch_grad/cond_grad"
input: "gradients/g_nnpostZ/dropout_1/cond/dropout/div/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dropout_1/cond/Identity/Switch_grad/cond_grad"
    }
  }
}
, name: "gradients/g_nnpostZ/dense/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "g_nnpostZ/dense/Sigmoid"
input: "gradients/AddN_124"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dense/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/g_nnpostZ/dense/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/g_nnpostZ/dense/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostZ/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/g_nnpostZ/dense/Sigmoid_grad/SigmoidGrad"
, name: "gradients/g_nnpostZ/dense/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostZ/dense/Sigmoid_grad/SigmoidGrad"
input: "^gradients/g_nnpostZ/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dense/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/g_nnpostZ/dense/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostZ/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/g_nnpostZ/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dense/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/g_nnpostZ/dense/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/g_nnpostZ/dense/BiasAdd_grad/tuple/control_dependency"
input: "g_nnpostZ/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/g_nnpostZ/dense/MatMul_grad/MatMul_1"
op: "MatMul"
input: "g_nnpostZ/dropout/cond/Merge"
input: "gradients/g_nnpostZ/dense/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostZ/dense/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostZ/dense/MatMul_grad/MatMul"
input: "^gradients/g_nnpostZ/dense/MatMul_grad/MatMul_1"
, name: "gradients/g_nnpostZ/dense/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostZ/dense/MatMul_grad/MatMul"
input: "^gradients/g_nnpostZ/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostZ/dense/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostZ/dense/MatMul_grad/MatMul_1"
input: "^gradients/g_nnpostZ/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dense/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/Merge_grad/cond_grad"
op: "Switch"
input: "gradients/g_nnpostZ/dense/MatMul_grad/tuple/control_dependency"
input: "g_nnpostZ/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/Merge_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostZ/dropout/cond/Merge_grad/cond_grad"
, name: "gradients/g_nnpostZ/dropout/cond/Merge_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostZ/dropout/cond/Merge_grad/cond_grad"
input: "^gradients/g_nnpostZ/dropout/cond/Merge_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/Merge_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostZ/dropout/cond/Merge_grad/cond_grad:1"
input: "^gradients/g_nnpostZ/dropout/cond/Merge_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/Mul"
op: "Mul"
input: "gradients/g_nnpostZ/dropout/cond/Merge_grad/tuple/control_dependency_1"
input: "g_nnpostZ/dropout/cond/dropout/Floor"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/Mul_1"
op: "Mul"
input: "gradients/g_nnpostZ/dropout/cond/Merge_grad/tuple/control_dependency_1"
input: "g_nnpostZ/dropout/cond/dropout/div"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/Mul"
input: "^gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/Mul_1"
, name: "gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/Mul"
input: "^gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/Mul"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/Mul_1"
input: "^gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/Switch_68"
op: "Switch"
input: "g_nnpostZ/Reshape"
input: "g_nnpostZ/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_50"
op: "Identity"
input: "gradients/Switch_68:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_51"
op: "Shape"
input: "gradients/Switch_68:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_56/Const"
op: "Const"
input: "^gradients/Identity_50"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_56"
op: "Fill"
input: "gradients/Shape_51"
input: "gradients/zeros_56/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/Identity/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/g_nnpostZ/dropout/cond/Merge_grad/tuple/control_dependency"
input: "gradients/zeros_56"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\000d\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Shape"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/RealDiv"
op: "RealDiv"
input: "gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/tuple/control_dependency"
input: "g_nnpostZ/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Sum"
op: "Sum"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/RealDiv"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Reshape"
op: "Reshape"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Sum"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Neg"
op: "Neg"
input: "g_nnpostZ/dropout/cond/dropout/div/Switch:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Neg"
input: "g_nnpostZ/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/RealDiv_1"
input: "g_nnpostZ/dropout/cond/dropout/keep_prob"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/mul"
op: "Mul"
input: "gradients/g_nnpostZ/dropout/cond/dropout/mul_grad/tuple/control_dependency"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Sum_1"
op: "Sum"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/mul"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Reshape_1"
op: "Reshape"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Sum_1"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Reshape"
input: "^gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Reshape_1"
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Reshape"
input: "^gradients/g_nnpostZ/dropout/cond/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Reshape"
    }
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Reshape_1"
input: "^gradients/g_nnpostZ/dropout/cond/dropout/div_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dropout/cond/dropout/div_grad/Reshape_1"
    }
  }
}
, name: "gradients/Switch_69"
op: "Switch"
input: "g_nnpostZ/Reshape"
input: "g_nnpostZ/dropout/cond/pred_id"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Identity_51"
op: "Identity"
input: "gradients/Switch_69"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Shape_52"
op: "Shape"
input: "gradients/Switch_69"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "out_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_57/Const"
op: "Const"
input: "^gradients/Identity_51"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/zeros_57"
op: "Fill"
input: "gradients/Shape_52"
input: "gradients/zeros_57/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/dropout/cond/dropout/div/Switch_grad/cond_grad"
op: "Merge"
input: "gradients/zeros_57"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_125"
op: "AddN"
input: "gradients/g_nnpostZ/dropout/cond/Identity/Switch_grad/cond_grad"
input: "gradients/g_nnpostZ/dropout/cond/dropout/div/Switch_grad/cond_grad"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/dropout/cond/Identity/Switch_grad/cond_grad"
    }
  }
}
, name: "gradients/g_nnpostZ/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000d\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostZ/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/AddN_125"
input: "gradients/g_nnpostZ/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/concat_grad/Rank"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 3
    }
  }
}
, name: "gradients/g_nnpostZ/concat_grad/mod"
op: "FloorMod"
input: "g_nnpostZ/concat/axis"
input: "gradients/g_nnpostZ/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/g_nnpostZ/concat_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostZ/concat_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/g_nnpostZ/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/g_nnpostZ/concat_grad/mod"
input: "gradients/g_nnpostZ/concat_grad/Shape"
input: "gradients/g_nnpostZ/concat_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/g_nnpostZ/concat_grad/Slice"
op: "Slice"
input: "gradients/g_nnpostZ/Reshape_grad/Reshape"
input: "gradients/g_nnpostZ/concat_grad/ConcatOffset"
input: "gradients/g_nnpostZ/concat_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/concat_grad/Slice_1"
op: "Slice"
input: "gradients/g_nnpostZ/Reshape_grad/Reshape"
input: "gradients/g_nnpostZ/concat_grad/ConcatOffset:1"
input: "gradients/g_nnpostZ/concat_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/g_nnpostZ/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/g_nnpostZ/concat_grad/Slice"
input: "^gradients/g_nnpostZ/concat_grad/Slice_1"
, name: "gradients/g_nnpostZ/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/g_nnpostZ/concat_grad/Slice"
input: "^gradients/g_nnpostZ/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/concat_grad/Slice"
    }
  }
}
, name: "gradients/g_nnpostZ/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/g_nnpostZ/concat_grad/Slice_1"
input: "^gradients/g_nnpostZ/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpostZ/concat_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/Mul_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/Mul_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpostZ_2/Mul_grad/Shape"
input: "gradients/update_GRUpostZ_2/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/Mul_grad/Mul"
op: "Mul"
input: "gradients/g_nnpostZ/concat_grad/tuple/control_dependency"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/Mul_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpostZ_2/Mul_grad/Mul"
input: "gradients/update_GRUpostZ_2/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ_2/Mul_grad/Sum"
input: "gradients/update_GRUpostZ_2/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/Mul_grad/Mul_1"
op: "Mul"
input: "update_GRUpostZ_2/Reshape_2"
input: "gradients/g_nnpostZ/concat_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpostZ_2/Mul_grad/Mul_1"
input: "gradients/update_GRUpostZ_2/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpostZ_2/Mul_grad/Sum_1"
input: "gradients/update_GRUpostZ_2/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/Mul_grad/Reshape"
input: "^gradients/update_GRUpostZ_2/Mul_grad/Reshape_1"
, name: "gradients/update_GRUpostZ_2/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/Mul_grad/Reshape"
input: "^gradients/update_GRUpostZ_2/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/Mul_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/Mul_grad/Reshape_1"
input: "^gradients/update_GRUpostZ_2/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/Mul_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/Reshape_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/Reshape_2_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ_2/Mul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/Reshape_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_58"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/Exit_3_grad/b_exit"
op: "Enter"
input: "gradients/update_GRUpostZ_2/Reshape_2_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/Exit_2_grad/b_exit"
op: "Enter"
input: "gradients/zeros_58"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/Switch_3_grad/b_switch"
op: "Merge"
input: "gradients/update_GRUpostZ_2/rnn/while/Exit_3_grad/b_exit"
input: "gradients/update_GRUpostZ_2/rnn/while/Switch_3_grad_1/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/Merge_3_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ_2/rnn/while/Switch_3_grad/b_switch"
input: "gradients/b_count_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/Merge_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/rnn/while/Merge_3_grad/Switch"
, name: "gradients/update_GRUpostZ_2/rnn/while/Merge_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/Merge_3_grad/Switch"
input: "^gradients/update_GRUpostZ_2/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/Merge_3_grad/Switch:1"
input: "^gradients/update_GRUpostZ_2/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/Enter_3_grad/Exit"
op: "Exit"
input: "gradients/update_GRUpostZ_2/rnn/while/Merge_3_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ_2/rnn/while/Enter_3_grad/Exit"
input: "gradients/update_GRUpostZ_2/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
input: "update_GRUpostZ_2/rnn/while/Identity_3"
input: "^gradients/Add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_2"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
input: "update_GRUpostZ_2/rnn/while/gru_cell/split:1"
input: "^gradients/Add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_2"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
input: "update_GRUpostZ_2/rnn/while/gru_cell/Tanh"
input: "^gradients/Add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_2"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
input: "update_GRUpostZ_2/rnn/while/gru_cell/sub"
input: "^gradients/Add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_2"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1"
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Shape"
op: "Const"
input: "^gradients/Sub_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Shape"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Sum"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Neg"
op: "Neg"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Neg"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Reshape_1"
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Reshape_1"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
op: "TanhGrad"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/Tanh_grad/TanhGrad"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
input: "update_GRUpostZ_2/rnn/while/gru_cell/concat_1"
input: "^gradients/Add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_2"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
input: "gradients/b_count_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Const"
op: "Const"
input: "^gradients/Sub_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Rank"
op: "Const"
input: "^gradients/Sub_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Const"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Shape"
op: "Const"
input: "^gradients/Sub_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/mod"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Shape"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/ConcatOffset:1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Slice_1"
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Slice_1"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
input: "gradients/b_count_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
input: "update_GRUpostZ_2/rnn/while/gru_cell/split"
input: "^gradients/Add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_2"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1"
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_126"
op: "AddN"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/split_grad/concat/Const"
op: "Const"
input: "^gradients/Sub_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/split_grad/concat"
op: "ConcatV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
input: "gradients/AddN_126"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/split_grad/concat/Const"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
input: "update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid"
input: "^gradients/Add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
input: "^gradients/Sub_2"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/split_grad/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
input: "update_GRUpostZ_2/rnn/while/gru_cell/concat"
input: "^gradients/Add_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_2"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1"
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
input: "gradients/b_count_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Const"
op: "Const"
input: "^gradients/Sub_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Rank"
op: "Const"
input: "^gradients/Sub_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Const"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Shape"
op: "Const"
input: "^gradients/Sub_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_2"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/mod"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Shape"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/ConcatOffset"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/ConcatOffset:1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Slice_1"
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Slice_1"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
input: "gradients/b_count_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/Switch:1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_127"
op: "AddN"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
op: "Enter"
input: "update_GRUpostZ_2/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
op: "Enter"
input: "update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/Sub_2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostZ_2/rnn/while/Identity_1"
input: "^gradients/Add_2"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/NextIteration_4"
op: "NextIteration"
input: "gradients/Add_2"
input: "^gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
input: "^gradients/Sub_2"
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
op: "ControlTrigger"
input: "^gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
, name: "gradients/NextIteration_5"
op: "NextIteration"
input: "gradients/Sub_2"
input: "^gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "gradients/AddN_127"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_128"
op: "AddN"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_2/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
input: "gradients/b_count_10"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/while/Switch_3_grad_1/NextIteration"
op: "NextIteration"
input: "gradients/AddN_128"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "update_GRUpostZ_2/rnn/TensorArray_1"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/TensorArray_1"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_2/rnn/TensorArray_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "update_GRUpostZ_2/rnn/TensorArrayUnstack/range"
input: "gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      unknown_rank: true
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
, name: "gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "update_GRUpostZ_2/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/rnn/transpose_grad/transpose"
op: "Transpose"
input: "gradients/update_GRUpostZ_2/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_2/rnn/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_2/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_2/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ_2/rnn/transpose_grad/transpose"
input: "gradients/update_GRUpostZ_2/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_5_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/truediv_5_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_5_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_5_grad/Shape"
input: "gradients/truediv_5_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_5_grad/RealDiv"
op: "RealDiv"
input: "gradients/update_GRUpostZ_2/Reshape_grad/Reshape"
input: "truediv_5/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_5_grad/Sum"
op: "Sum"
input: "gradients/truediv_5_grad/RealDiv"
input: "gradients/truediv_5_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_5_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_5_grad/Sum"
input: "gradients/truediv_5_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_5_grad/Neg"
op: "Neg"
input: "Mean_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_5_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_5_grad/Neg"
input: "truediv_5/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_5_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_5_grad/RealDiv_1"
input: "truediv_5/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_5_grad/mul"
op: "Mul"
input: "gradients/update_GRUpostZ_2/Reshape_grad/Reshape"
input: "gradients/truediv_5_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_5_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_5_grad/mul"
input: "gradients/truediv_5_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_5_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_5_grad/Sum_1"
input: "gradients/truediv_5_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_5_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_5_grad/Reshape"
input: "^gradients/truediv_5_grad/Reshape_1"
, name: "gradients/truediv_5_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_5_grad/Reshape"
input: "^gradients/truediv_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_5_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_5_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_5_grad/Reshape_1"
input: "^gradients/truediv_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_5_grad/Reshape_1"
    }
  }
}
, name: "gradients/Mean_5_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000\t\000\000\000"
    }
  }
}
, name: "gradients/Mean_5_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_5_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}
, name: "gradients/Mean_5_grad/add"
op: "Add"
input: "Mean_5/reduction_indices"
input: "gradients/Mean_5_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_5_grad/Shape"
    }
  }
}
, name: "gradients/Mean_5_grad/mod"
op: "FloorMod"
input: "gradients/Mean_5_grad/add"
input: "gradients/Mean_5_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_5_grad/Shape"
    }
  }
}
, name: "gradients/Mean_5_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_5_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Mean_5_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_5_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Mean_5_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_5_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_5_grad/range"
op: "Range"
input: "gradients/Mean_5_grad/range/start"
input: "gradients/Mean_5_grad/Size"
input: "gradients/Mean_5_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_5_grad/Shape"
    }
  }
}
, name: "gradients/Mean_5_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_5_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_5_grad/Fill"
op: "Fill"
input: "gradients/Mean_5_grad/Shape_1"
input: "gradients/Mean_5_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_5_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_5_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Mean_5_grad/range"
input: "gradients/Mean_5_grad/mod"
input: "gradients/Mean_5_grad/Shape"
input: "gradients/Mean_5_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_5_grad/Shape"
    }
  }
}
, name: "gradients/Mean_5_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_5_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_5_grad/Maximum"
op: "Maximum"
input: "gradients/Mean_5_grad/DynamicStitch"
input: "gradients/Mean_5_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_5_grad/Shape"
    }
  }
}
, name: "gradients/Mean_5_grad/floordiv"
op: "FloorDiv"
input: "gradients/Mean_5_grad/Shape"
input: "gradients/Mean_5_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_5_grad/Shape"
    }
  }
}
, name: "gradients/Mean_5_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_5_grad/tuple/control_dependency"
input: "gradients/Mean_5_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_5_grad/Tile"
op: "Tile"
input: "gradients/Mean_5_grad/Reshape"
input: "gradients/Mean_5_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_5_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "gradients/Mean_5_grad/truediv"
op: "RealDiv"
input: "gradients/Mean_5_grad/Tile"
input: "gradients/Mean_5_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/transpose_6_grad/InvertPermutation"
op: "InvertPermutation"
input: "transpose_6/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/transpose_6_grad/transpose"
op: "Transpose"
input: "gradients/Mean_5_grad/truediv"
input: "gradients/transpose_6_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Reshape_21_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Reshape_21_grad/Reshape"
op: "Reshape"
input: "gradients/transpose_6_grad/transpose"
input: "gradients/Reshape_21_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/MatMul_5_grad/MatMul"
op: "BatchMatMul"
input: "gradients/Reshape_21_grad/Reshape"
input: "Reshape_20"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: true
  }
}
, name: "gradients/MatMul_5_grad/MatMul_1"
op: "BatchMatMul"
input: "Reshape_19"
input: "gradients/Reshape_21_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: true
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "gradients/MatMul_5_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_5_grad/MatMul"
input: "^gradients/MatMul_5_grad/MatMul_1"
, name: "gradients/MatMul_5_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_5_grad/MatMul"
input: "^gradients/MatMul_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_5_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_5_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_5_grad/MatMul_1"
input: "^gradients/MatMul_5_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_5_grad/MatMul_1"
    }
  }
}
, name: "gradients/Reshape_19_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_19_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_5_grad/tuple/control_dependency"
input: "gradients/Reshape_19_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Reshape_20_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_20_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_5_grad/tuple/control_dependency_1"
input: "gradients/Reshape_20_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/AddN_129"
op: "AddN"
input: "gradients/update_GRUpostZ_2/Reshape_1_grad/Reshape"
input: "gradients/Reshape_20_grad/Reshape"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/Reshape_1_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/Mul_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/Mul_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpostZ_1/Mul_grad/Shape"
input: "gradients/update_GRUpostZ_1/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/Mul_grad/Mul"
op: "Mul"
input: "gradients/AddN_129"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/Mul_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpostZ_1/Mul_grad/Mul"
input: "gradients/update_GRUpostZ_1/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ_1/Mul_grad/Sum"
input: "gradients/update_GRUpostZ_1/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/Mul_grad/Mul_1"
op: "Mul"
input: "update_GRUpostZ_1/Reshape_2"
input: "gradients/AddN_129"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpostZ_1/Mul_grad/Mul_1"
input: "gradients/update_GRUpostZ_1/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpostZ_1/Mul_grad/Sum_1"
input: "gradients/update_GRUpostZ_1/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/Mul_grad/Reshape"
input: "^gradients/update_GRUpostZ_1/Mul_grad/Reshape_1"
, name: "gradients/update_GRUpostZ_1/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/Mul_grad/Reshape"
input: "^gradients/update_GRUpostZ_1/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/Mul_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/Mul_grad/Reshape_1"
input: "^gradients/update_GRUpostZ_1/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/Mul_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/Reshape_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/Reshape_2_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ_1/Mul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/Reshape_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_59"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/Exit_3_grad/b_exit"
op: "Enter"
input: "gradients/update_GRUpostZ_1/Reshape_2_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/Exit_2_grad/b_exit"
op: "Enter"
input: "gradients/zeros_59"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/Switch_3_grad/b_switch"
op: "Merge"
input: "gradients/update_GRUpostZ_1/rnn/while/Exit_3_grad/b_exit"
input: "gradients/update_GRUpostZ_1/rnn/while/Switch_3_grad_1/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/Merge_3_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ_1/rnn/while/Switch_3_grad/b_switch"
input: "gradients/b_count_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/Merge_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/rnn/while/Merge_3_grad/Switch"
, name: "gradients/update_GRUpostZ_1/rnn/while/Merge_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/Merge_3_grad/Switch"
input: "^gradients/update_GRUpostZ_1/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/Merge_3_grad/Switch:1"
input: "^gradients/update_GRUpostZ_1/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/Enter_3_grad/Exit"
op: "Exit"
input: "gradients/update_GRUpostZ_1/rnn/while/Merge_3_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ_1/rnn/while/Enter_3_grad/Exit"
input: "gradients/update_GRUpostZ_1/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
input: "update_GRUpostZ_1/rnn/while/Identity_3"
input: "^gradients/Add_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_5"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
input: "update_GRUpostZ_1/rnn/while/gru_cell/split:1"
input: "^gradients/Add_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_5"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
input: "update_GRUpostZ_1/rnn/while/gru_cell/Tanh"
input: "^gradients/Add_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_5"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
input: "update_GRUpostZ_1/rnn/while/gru_cell/sub"
input: "^gradients/Add_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_5"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1"
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Shape"
op: "Const"
input: "^gradients/Sub_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Shape"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Sum"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Neg"
op: "Neg"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Neg"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Reshape_1"
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Reshape_1"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
op: "TanhGrad"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/Tanh_grad/TanhGrad"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
input: "update_GRUpostZ_1/rnn/while/gru_cell/concat_1"
input: "^gradients/Add_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_5"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
input: "gradients/b_count_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Const"
op: "Const"
input: "^gradients/Sub_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Rank"
op: "Const"
input: "^gradients/Sub_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Const"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Shape"
op: "Const"
input: "^gradients/Sub_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/mod"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Shape"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/ConcatOffset:1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Slice_1"
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Slice_1"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
input: "gradients/b_count_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
input: "update_GRUpostZ_1/rnn/while/gru_cell/split"
input: "^gradients/Add_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_5"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1"
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_130"
op: "AddN"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/split_grad/concat/Const"
op: "Const"
input: "^gradients/Sub_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/split_grad/concat"
op: "ConcatV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
input: "gradients/AddN_130"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/split_grad/concat/Const"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
input: "update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid"
input: "^gradients/Add_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
input: "^gradients/Sub_5"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/split_grad/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
input: "update_GRUpostZ_1/rnn/while/gru_cell/concat"
input: "^gradients/Add_5"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_5"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1"
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
input: "gradients/b_count_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Const"
op: "Const"
input: "^gradients/Sub_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Rank"
op: "Const"
input: "^gradients/Sub_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Const"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Shape"
op: "Const"
input: "^gradients/Sub_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_5"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/mod"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Shape"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/ConcatOffset"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/ConcatOffset:1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Slice_1"
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Slice_1"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
input: "gradients/b_count_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/Switch:1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_131"
op: "AddN"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
op: "Enter"
input: "update_GRUpostZ_1/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
op: "Enter"
input: "update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/Sub_5"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostZ_1/rnn/while/Identity_1"
input: "^gradients/Add_5"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/NextIteration_10"
op: "NextIteration"
input: "gradients/Add_5"
input: "^gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
input: "^gradients/Sub_5"
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
op: "ControlTrigger"
input: "^gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
, name: "gradients/NextIteration_11"
op: "NextIteration"
input: "gradients/Sub_5"
input: "^gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "gradients/AddN_131"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_132"
op: "AddN"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ_1/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
input: "gradients/b_count_22"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/while/Switch_3_grad_1/NextIteration"
op: "NextIteration"
input: "gradients/AddN_132"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "update_GRUpostZ_1/rnn/TensorArray_1"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/TensorArray_1"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ_1/rnn/TensorArray_1"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "update_GRUpostZ_1/rnn/TensorArrayUnstack/range"
input: "gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      unknown_rank: true
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
, name: "gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "update_GRUpostZ_1/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/rnn/transpose_grad/transpose"
op: "Transpose"
input: "gradients/update_GRUpostZ_1/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ_1/rnn/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ_1/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ_1/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ_1/rnn/transpose_grad/transpose"
input: "gradients/update_GRUpostZ_1/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_4_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/truediv_4_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_4_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_4_grad/Shape"
input: "gradients/truediv_4_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_4_grad/RealDiv"
op: "RealDiv"
input: "gradients/update_GRUpostZ_1/Reshape_grad/Reshape"
input: "truediv_4/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_4_grad/Sum"
op: "Sum"
input: "gradients/truediv_4_grad/RealDiv"
input: "gradients/truediv_4_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_4_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_4_grad/Sum"
input: "gradients/truediv_4_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_4_grad/Neg"
op: "Neg"
input: "Mean_4"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_4_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_4_grad/Neg"
input: "truediv_4/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_4_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_4_grad/RealDiv_1"
input: "truediv_4/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_4_grad/mul"
op: "Mul"
input: "gradients/update_GRUpostZ_1/Reshape_grad/Reshape"
input: "gradients/truediv_4_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_4_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_4_grad/mul"
input: "gradients/truediv_4_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_4_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_4_grad/Sum_1"
input: "gradients/truediv_4_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_4_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_4_grad/Reshape"
input: "^gradients/truediv_4_grad/Reshape_1"
, name: "gradients/truediv_4_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_4_grad/Reshape"
input: "^gradients/truediv_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_4_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_4_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_4_grad/Reshape_1"
input: "^gradients/truediv_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_4_grad/Reshape_1"
    }
  }
}
, name: "gradients/Mean_4_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000\t\000\000\000"
    }
  }
}
, name: "gradients/Mean_4_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_4_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}
, name: "gradients/Mean_4_grad/add"
op: "Add"
input: "Mean_4/reduction_indices"
input: "gradients/Mean_4_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_4_grad/Shape"
    }
  }
}
, name: "gradients/Mean_4_grad/mod"
op: "FloorMod"
input: "gradients/Mean_4_grad/add"
input: "gradients/Mean_4_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_4_grad/Shape"
    }
  }
}
, name: "gradients/Mean_4_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_4_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Mean_4_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_4_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Mean_4_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_4_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_4_grad/range"
op: "Range"
input: "gradients/Mean_4_grad/range/start"
input: "gradients/Mean_4_grad/Size"
input: "gradients/Mean_4_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_4_grad/Shape"
    }
  }
}
, name: "gradients/Mean_4_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_4_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_4_grad/Fill"
op: "Fill"
input: "gradients/Mean_4_grad/Shape_1"
input: "gradients/Mean_4_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_4_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_4_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Mean_4_grad/range"
input: "gradients/Mean_4_grad/mod"
input: "gradients/Mean_4_grad/Shape"
input: "gradients/Mean_4_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_4_grad/Shape"
    }
  }
}
, name: "gradients/Mean_4_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_4_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_4_grad/Maximum"
op: "Maximum"
input: "gradients/Mean_4_grad/DynamicStitch"
input: "gradients/Mean_4_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_4_grad/Shape"
    }
  }
}
, name: "gradients/Mean_4_grad/floordiv"
op: "FloorDiv"
input: "gradients/Mean_4_grad/Shape"
input: "gradients/Mean_4_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_4_grad/Shape"
    }
  }
}
, name: "gradients/Mean_4_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_4_grad/tuple/control_dependency"
input: "gradients/Mean_4_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_4_grad/Tile"
op: "Tile"
input: "gradients/Mean_4_grad/Reshape"
input: "gradients/Mean_4_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_4_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "gradients/Mean_4_grad/truediv"
op: "RealDiv"
input: "gradients/Mean_4_grad/Tile"
input: "gradients/Mean_4_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/transpose_5_grad/InvertPermutation"
op: "InvertPermutation"
input: "transpose_5/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/transpose_5_grad/transpose"
op: "Transpose"
input: "gradients/Mean_4_grad/truediv"
input: "gradients/transpose_5_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Reshape_18_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Reshape_18_grad/Reshape"
op: "Reshape"
input: "gradients/transpose_5_grad/transpose"
input: "gradients/Reshape_18_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/MatMul_4_grad/MatMul"
op: "BatchMatMul"
input: "gradients/Reshape_18_grad/Reshape"
input: "Reshape_17"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: true
  }
}
, name: "gradients/MatMul_4_grad/MatMul_1"
op: "BatchMatMul"
input: "Reshape_16"
input: "gradients/Reshape_18_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: true
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "gradients/MatMul_4_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_4_grad/MatMul"
input: "^gradients/MatMul_4_grad/MatMul_1"
, name: "gradients/MatMul_4_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_4_grad/MatMul"
input: "^gradients/MatMul_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_4_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_4_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_4_grad/MatMul_1"
input: "^gradients/MatMul_4_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_4_grad/MatMul_1"
    }
  }
}
, name: "gradients/Reshape_16_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_16_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_4_grad/tuple/control_dependency"
input: "gradients/Reshape_16_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Reshape_17_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_17_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_4_grad/tuple/control_dependency_1"
input: "gradients/Reshape_17_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/AddN_133"
op: "AddN"
input: "gradients/update_GRUpostZ_1/Reshape_1_grad/Reshape"
input: "gradients/Reshape_17_grad/Reshape"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_1/Reshape_1_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostZ/Mul_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ/Mul_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpostZ/Mul_grad/Shape"
input: "gradients/update_GRUpostZ/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/Mul_grad/Mul"
op: "Mul"
input: "gradients/AddN_133"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/Mul_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpostZ/Mul_grad/Mul"
input: "gradients/update_GRUpostZ/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ/Mul_grad/Sum"
input: "gradients/update_GRUpostZ/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/Mul_grad/Mul_1"
op: "Mul"
input: "update_GRUpostZ/Reshape_2"
input: "gradients/AddN_133"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpostZ/Mul_grad/Mul_1"
input: "gradients/update_GRUpostZ/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpostZ/Mul_grad/Sum_1"
input: "gradients/update_GRUpostZ/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/Mul_grad/Reshape"
input: "^gradients/update_GRUpostZ/Mul_grad/Reshape_1"
, name: "gradients/update_GRUpostZ/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/Mul_grad/Reshape"
input: "^gradients/update_GRUpostZ/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/Mul_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostZ/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/Mul_grad/Reshape_1"
input: "^gradients/update_GRUpostZ/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/Mul_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpostZ/Reshape_2_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ/Reshape_2_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ/Mul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/Reshape_2_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/zeros_60"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/Exit_3_grad/b_exit"
op: "Enter"
input: "gradients/update_GRUpostZ/Reshape_2_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/Exit_2_grad/b_exit"
op: "Enter"
input: "gradients/zeros_60"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/Switch_3_grad/b_switch"
op: "Merge"
input: "gradients/update_GRUpostZ/rnn/while/Exit_3_grad/b_exit"
input: "gradients/update_GRUpostZ/rnn/while/Switch_3_grad_1/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/Merge_3_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ/rnn/while/Switch_3_grad/b_switch"
input: "gradients/b_count_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/Merge_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/rnn/while/Merge_3_grad/Switch"
, name: "gradients/update_GRUpostZ/rnn/while/Merge_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/Merge_3_grad/Switch"
input: "^gradients/update_GRUpostZ/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/Merge_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/Merge_3_grad/Switch:1"
input: "^gradients/update_GRUpostZ/rnn/while/Merge_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/Enter_3_grad/Exit"
op: "Exit"
input: "gradients/update_GRUpostZ/rnn/while/Merge_3_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ/rnn/while/Enter_3_grad/Exit"
input: "gradients/update_GRUpostZ/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/add_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/rnn/while/Merge_3_grad/tuple/control_dependency_1"
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/add_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/Merge_3_grad/tuple/control_dependency_1"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/add_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/Switch_3_grad/b_switch"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/Identity_3"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/Enter"
input: "update_GRUpostZ/rnn/while/Identity_3"
input: "^gradients/Add_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_8"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/Enter"
input: "update_GRUpostZ/rnn/while/gru_cell/split:1"
input: "^gradients/Add_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_8"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/add_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1"
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/Tanh"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/Enter"
input: "update_GRUpostZ/rnn/while/gru_cell/Tanh"
input: "^gradients/Add_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2/Enter"
input: "^gradients/Sub_8"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/sub"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/Enter"
input: "update_GRUpostZ/rnn/while/gru_cell/sub"
input: "^gradients/Add_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_8"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/add_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1"
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Shape"
op: "Const"
input: "^gradients/Sub_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Shape"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Sum"
op: "Sum"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Sum"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Sum_1"
op: "Sum"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Neg"
op: "Neg"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Sum_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Reshape_1"
op: "Reshape"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Neg"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Reshape_1"
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Reshape"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Reshape"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Reshape_1"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/Reshape_1"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/Tanh_grad/TanhGrad"
op: "TanhGrad"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/Tanh_grad/TanhGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/Tanh_grad/TanhGrad"
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/Tanh_grad/TanhGrad"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/Tanh_grad/TanhGrad"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/concat_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/Enter"
input: "update_GRUpostZ/rnn/while/gru_cell/concat_1"
input: "^gradients/Add_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_8"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_2"
input: "gradients/b_count_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Const"
op: "Const"
input: "^gradients/Sub_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Rank"
op: "Const"
input: "^gradients/Sub_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Const"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Shape"
op: "Const"
input: "^gradients/Sub_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/mod"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Shape"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/ConcatOffset"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/ConcatOffset:1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Slice_1"
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Slice"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Slice_1"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_2"
input: "gradients/b_count_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch:1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_134"
op: "AddN"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd_1/Enter_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul"
op: "Mul"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/split"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/Enter"
input: "update_GRUpostZ/rnn/while/gru_cell/split"
input: "^gradients/Add_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2/Enter"
input: "^gradients/Sub_8"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1"
op: "Mul"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1"
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_135"
op: "AddN"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul_1/Enter_grad/b_acc_3"
    }
  }
}
, name: "gradients/AddN_136"
op: "AddN"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/sub_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/split_grad/concat/Const"
op: "Const"
input: "^gradients/Sub_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/split_grad/concat"
op: "ConcatV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/tuple/control_dependency"
input: "gradients/AddN_136"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/split_grad/concat/Const"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/Sigmoid"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/Enter"
input: "update_GRUpostZ/rnn/while/gru_cell/Sigmoid"
input: "^gradients/Add_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2/Enter"
input: "^gradients/Sub_8"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/split_grad/concat"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul/Enter"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/gru_cell/concat"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/Enter"
input: "update_GRUpostZ/rnn/while/gru_cell/concat"
input: "^gradients/Add_8"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2/Enter"
input: "^gradients/Sub_8"
attr {
  key: "elem_type"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1"
op: "MatMul"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1"
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_2"
input: "gradients/b_count_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch:1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Const"
op: "Const"
input: "^gradients/Sub_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Rank"
op: "Const"
input: "^gradients/Sub_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 2
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/mod"
op: "FloorMod"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Const"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Rank"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Shape"
op: "Const"
input: "^gradients/Sub_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Shape_1"
op: "Const"
input: "^gradients/Sub_8"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/ConcatOffset"
op: "ConcatOffset"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/mod"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Shape"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "N"
  value {
    i: 2
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Slice"
op: "Slice"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/ConcatOffset"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Shape"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Slice_1"
op: "Slice"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/ConcatOffset:1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Shape_1"
attr {
  key: "Index"
  value {
    type: DT_INT32
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Slice_1"
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Slice"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Slice_1"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/Slice_1"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_2"
input: "gradients/b_count_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/Switch:1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_137"
op: "AddN"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/BiasAdd/Enter_grad/b_acc_3"
    }
  }
}
, name: "gradients/AddN_138"
op: "AddN"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/tuple/control_dependency"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/concat_1_grad/Slice"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
op: "Enter"
input: "update_GRUpostZ/rnn/TensorArray_1"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
op: "Enter"
input: "update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/Sub_8"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
input: "^gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: -1
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
op: "StackV2"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/while/Identity_1"
    }
  }
}
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
attr {
  key: "stack_name"
  value {
    s: ""
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
op: "StackPushV2"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Enter"
input: "update_GRUpostZ/rnn/while/Identity_1"
input: "^gradients/Add_8"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "swap_memory"
  value {
    b: false
  }
}
, name: "gradients/NextIteration_16"
op: "NextIteration"
input: "gradients/Add_8"
input: "^gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPushV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPushV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPushV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPushV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPushV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPushV2"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
attr {
  key: "T"
  value {
    type: DT_RESOURCE
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: true
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
op: "StackPopV2"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2/Enter"
input: "^gradients/Sub_8"
attr {
  key: "elem_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
op: "ControlTrigger"
input: "^gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_1_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul_grad/MatMul_1/StackPopV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/Sigmoid_grad/SigmoidGrad/StackPopV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul/StackPopV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_2_grad/Mul_1/StackPopV2"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/Mul_1/StackPopV2"
, name: "gradients/NextIteration_17"
op: "NextIteration"
input: "gradients/Sub_8"
input: "^gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul/b_sync"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
op: "TensorArrayWriteV3"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPopV2"
input: "gradients/AddN_138"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/AddN_139"
op: "AddN"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/mul_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/concat_grad/tuple/control_dependency_1"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/gru_cell/mul_1_grad/Mul_1"
    }
  }
}
, name: "gradients/AddN_140"
op: "AddN"
input: "gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostZ_1/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
input: "gradients/update_GRUpostZ/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ_2/rnn/while/gru_cell/MatMul/Enter_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
op: "Enter"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "frame_name"
  value {
    s: "gradients/update_GRUpostZ/rnn/while/while_context"
  }
}
attr {
  key: "is_constant"
  value {
    b: false
  }
}
attr {
  key: "parallel_iterations"
  value {
    i: 32
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
op: "Merge"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
op: "Switch"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
input: "gradients/b_count_34"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
op: "Add"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
op: "NextIteration"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/Add"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
op: "Exit"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/Switch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/while/Switch_3_grad_1/NextIteration"
op: "NextIteration"
input: "gradients/AddN_139"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
op: "TensorArrayGradV3"
input: "update_GRUpostZ/rnn/TensorArray_1"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/TensorArray_1"
    }
  }
}
attr {
  key: "source"
  value {
    s: "gradients"
  }
}
, name: "gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/TensorArray_1"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
op: "TensorArrayGatherV3"
input: "gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
input: "update_GRUpostZ/rnn/TensorArrayUnstack/range"
input: "gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "element_shape"
  value {
    shape {
      unknown_rank: true
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
, name: "gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
input: "^gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
input: "^gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/update_GRUpostZ/rnn/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
    }
  }
}
, name: "gradients/update_GRUpostZ/rnn/transpose_grad/InvertPermutation"
op: "InvertPermutation"
input: "update_GRUpostZ/rnn/concat"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/rnn/transpose_grad/transpose"
op: "Transpose"
input: "gradients/update_GRUpostZ/rnn/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
input: "gradients/update_GRUpostZ/rnn/transpose_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/update_GRUpostZ/Reshape_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/update_GRUpostZ/Reshape_grad/Reshape"
op: "Reshape"
input: "gradients/update_GRUpostZ/rnn/transpose_grad/transpose"
input: "gradients/update_GRUpostZ/Reshape_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_3_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/truediv_3_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/truediv_3_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/truediv_3_grad/Shape"
input: "gradients/truediv_3_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_3_grad/RealDiv"
op: "RealDiv"
input: "gradients/update_GRUpostZ/Reshape_grad/Reshape"
input: "truediv_3/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_3_grad/Sum"
op: "Sum"
input: "gradients/truediv_3_grad/RealDiv"
input: "gradients/truediv_3_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_3_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_3_grad/Sum"
input: "gradients/truediv_3_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_3_grad/Neg"
op: "Neg"
input: "Mean_3"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_3_grad/RealDiv_1"
op: "RealDiv"
input: "gradients/truediv_3_grad/Neg"
input: "truediv_3/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_3_grad/RealDiv_2"
op: "RealDiv"
input: "gradients/truediv_3_grad/RealDiv_1"
input: "truediv_3/y"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_3_grad/mul"
op: "Mul"
input: "gradients/update_GRUpostZ/Reshape_grad/Reshape"
input: "gradients/truediv_3_grad/RealDiv_2"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/truediv_3_grad/Sum_1"
op: "Sum"
input: "gradients/truediv_3_grad/mul"
input: "gradients/truediv_3_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/truediv_3_grad/Reshape_1"
op: "Reshape"
input: "gradients/truediv_3_grad/Sum_1"
input: "gradients/truediv_3_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/truediv_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/truediv_3_grad/Reshape"
input: "^gradients/truediv_3_grad/Reshape_1"
, name: "gradients/truediv_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/truediv_3_grad/Reshape"
input: "^gradients/truediv_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_3_grad/Reshape"
    }
  }
}
, name: "gradients/truediv_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/truediv_3_grad/Reshape_1"
input: "^gradients/truediv_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/truediv_3_grad/Reshape_1"
    }
  }
}
, name: "gradients/Mean_3_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 4
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000\t\000\000\000"
    }
  }
}
, name: "gradients/Mean_3_grad/Size"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_3_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 4
    }
  }
}
, name: "gradients/Mean_3_grad/add"
op: "Add"
input: "Mean_3/reduction_indices"
input: "gradients/Mean_3_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_3_grad/Shape"
    }
  }
}
, name: "gradients/Mean_3_grad/mod"
op: "FloorMod"
input: "gradients/Mean_3_grad/add"
input: "gradients/Mean_3_grad/Size"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_3_grad/Shape"
    }
  }
}
, name: "gradients/Mean_3_grad/Shape_1"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_3_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
        }
      }
    }
  }
}
, name: "gradients/Mean_3_grad/range/start"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_3_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 0
    }
  }
}
, name: "gradients/Mean_3_grad/range/delta"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_3_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_3_grad/range"
op: "Range"
input: "gradients/Mean_3_grad/range/start"
input: "gradients/Mean_3_grad/Size"
input: "gradients/Mean_3_grad/range/delta"
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_3_grad/Shape"
    }
  }
}
, name: "gradients/Mean_3_grad/Fill/value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_3_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_3_grad/Fill"
op: "Fill"
input: "gradients/Mean_3_grad/Shape_1"
input: "gradients/Mean_3_grad/Fill/value"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_3_grad/Shape"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_3_grad/DynamicStitch"
op: "DynamicStitch"
input: "gradients/Mean_3_grad/range"
input: "gradients/Mean_3_grad/mod"
input: "gradients/Mean_3_grad/Shape"
input: "gradients/Mean_3_grad/Fill"
attr {
  key: "N"
  value {
    i: 2
  }
}
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_3_grad/Shape"
    }
  }
}
, name: "gradients/Mean_3_grad/Maximum/y"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_3_grad/Shape"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
      }
      int_val: 1
    }
  }
}
, name: "gradients/Mean_3_grad/Maximum"
op: "Maximum"
input: "gradients/Mean_3_grad/DynamicStitch"
input: "gradients/Mean_3_grad/Maximum/y"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_3_grad/Shape"
    }
  }
}
, name: "gradients/Mean_3_grad/floordiv"
op: "FloorDiv"
input: "gradients/Mean_3_grad/Shape"
input: "gradients/Mean_3_grad/Maximum"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mean_3_grad/Shape"
    }
  }
}
, name: "gradients/Mean_3_grad/Reshape"
op: "Reshape"
input: "gradients/truediv_3_grad/tuple/control_dependency"
input: "gradients/Mean_3_grad/DynamicStitch"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_3_grad/Tile"
op: "Tile"
input: "gradients/Mean_3_grad/Reshape"
input: "gradients/Mean_3_grad/floordiv"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tmultiples"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mean_3_grad/Const"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.0
    }
  }
}
, name: "gradients/Mean_3_grad/truediv"
op: "RealDiv"
input: "gradients/Mean_3_grad/Tile"
input: "gradients/Mean_3_grad/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/transpose_4_grad/InvertPermutation"
op: "InvertPermutation"
input: "transpose_4/perm"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/transpose_4_grad/transpose"
op: "Transpose"
input: "gradients/Mean_3_grad/truediv"
input: "gradients/transpose_4_grad/InvertPermutation"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tperm"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Reshape_15_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\264\000\000\000\302\001\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Reshape_15_grad/Reshape"
op: "Reshape"
input: "gradients/transpose_4_grad/transpose"
input: "gradients/Reshape_15_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/MatMul_3_grad/MatMul"
op: "BatchMatMul"
input: "gradients/Reshape_15_grad/Reshape"
input: "Reshape_14"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: false
  }
}
attr {
  key: "adj_y"
  value {
    b: true
  }
}
, name: "gradients/MatMul_3_grad/MatMul_1"
op: "BatchMatMul"
input: "Reshape_13"
input: "gradients/Reshape_15_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "adj_x"
  value {
    b: true
  }
}
attr {
  key: "adj_y"
  value {
    b: false
  }
}
, name: "gradients/MatMul_3_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/MatMul_3_grad/MatMul"
input: "^gradients/MatMul_3_grad/MatMul_1"
, name: "gradients/MatMul_3_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/MatMul_3_grad/MatMul"
input: "^gradients/MatMul_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_3_grad/MatMul"
    }
  }
}
, name: "gradients/MatMul_3_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/MatMul_3_grad/MatMul_1"
input: "^gradients/MatMul_3_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/MatMul_3_grad/MatMul_1"
    }
  }
}
, name: "gradients/Reshape_13_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 5
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\t\000\000\0002\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_13_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_3_grad/tuple/control_dependency"
input: "gradients/Reshape_13_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Reshape_14_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_14_grad/Reshape"
op: "Reshape"
input: "gradients/MatMul_3_grad/tuple/control_dependency_1"
input: "gradients/Reshape_14_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/AddN_141"
op: "AddN"
input: "gradients/Reshape_19_grad/Reshape"
input: "gradients/Reshape_16_grad/Reshape"
input: "gradients/Reshape_13_grad/Reshape"
attr {
  key: "N"
  value {
    i: 3
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Reshape_19_grad/Reshape"
    }
  }
}
, name: "gradients/edge_nnpostZ/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "T\006\000\000\304\t\000\000"
    }
  }
}
, name: "gradients/edge_nnpostZ/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/AddN_141"
input: "gradients/edge_nnpostZ/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/AddN_142"
op: "AddN"
input: "gradients/g_nnpriorZ/concat_grad/tuple/control_dependency_1"
input: "gradients/g_nnpostX/concat_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpriorZ/Reshape_1_grad/Reshape"
input: "gradients/Reshape_4_grad/Reshape"
input: "gradients/add_2_grad/tuple/control_dependency_1"
input: "gradients/g_nnpostZ/concat_grad/tuple/control_dependency_1"
input: "gradients/update_GRUpostZ/Reshape_1_grad/Reshape"
input: "gradients/Reshape_14_grad/Reshape"
attr {
  key: "N"
  value {
    i: 8
  }
}
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/g_nnpriorZ/concat_grad/Slice_1"
    }
  }
}
, name: "gradients/Mul_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Mul_grad/Shape_1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 3
        }
      }
      tensor_content: "\024\000\000\000\t\000\000\000\001\000\000\000"
    }
  }
}
, name: "gradients/Mul_grad/BroadcastGradientArgs"
op: "BroadcastGradientArgs"
input: "gradients/Mul_grad/Shape"
input: "gradients/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mul_grad/Mul"
op: "Mul"
input: "gradients/AddN_142"
input: "Placeholder_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Mul_grad/Sum"
op: "Sum"
input: "gradients/Mul_grad/Mul"
input: "gradients/Mul_grad/BroadcastGradientArgs"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/Mul_grad/Reshape"
op: "Reshape"
input: "gradients/Mul_grad/Sum"
input: "gradients/Mul_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mul_grad/Mul_1"
op: "Mul"
input: "Reshape_1"
input: "gradients/AddN_142"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Mul_grad/Sum_1"
op: "Sum"
input: "gradients/Mul_grad/Mul_1"
input: "gradients/Mul_grad/BroadcastGradientArgs:1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tidx"
  value {
    type: DT_INT32
  }
}
attr {
  key: "keep_dims"
  value {
    b: false
  }
}
, name: "gradients/Mul_grad/Reshape_1"
op: "Reshape"
input: "gradients/Mul_grad/Sum_1"
input: "gradients/Mul_grad/Shape_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/Mul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/Mul_grad/Reshape"
input: "^gradients/Mul_grad/Reshape_1"
, name: "gradients/Mul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/Mul_grad/Reshape"
input: "^gradients/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mul_grad/Reshape"
    }
  }
}
, name: "gradients/Mul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/Mul_grad/Reshape_1"
input: "^gradients/Mul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/Mul_grad/Reshape_1"
    }
  }
}
, name: "gradients/edge_nnpostZ/dense_1/Tanh_grad/TanhGrad"
op: "TanhGrad"
input: "edge_nnpostZ/dense_1/Tanh"
input: "gradients/edge_nnpostZ/Reshape_1_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/Reshape_1_grad/Shape"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\264\000\000\0002\000\000\000"
    }
  }
}
, name: "gradients/Reshape_1_grad/Reshape"
op: "Reshape"
input: "gradients/Mul_grad/tuple/control_dependency"
input: "gradients/Reshape_1_grad/Shape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "Tshape"
  value {
    type: DT_INT32
  }
}
, name: "gradients/edge_nnpostZ/dense_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/edge_nnpostZ/dense_1/Tanh_grad/TanhGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/edge_nnpostZ/dense_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/edge_nnpostZ/dense_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/edge_nnpostZ/dense_1/Tanh_grad/TanhGrad"
, name: "gradients/edge_nnpostZ/dense_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/edge_nnpostZ/dense_1/Tanh_grad/TanhGrad"
input: "^gradients/edge_nnpostZ/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostZ/dense_1/Tanh_grad/TanhGrad"
    }
  }
}
, name: "gradients/edge_nnpostZ/dense_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/edge_nnpostZ/dense_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/edge_nnpostZ/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostZ/dense_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/dense_1/Tanh_grad/TanhGrad"
op: "TanhGrad"
input: "dense_1/Tanh"
input: "gradients/Reshape_1_grad/Reshape"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/edge_nnpostZ/dense_1/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/edge_nnpostZ/dense_1/BiasAdd_grad/tuple/control_dependency"
input: "edge_nnpostZ/dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/edge_nnpostZ/dense_1/MatMul_grad/MatMul_1"
op: "MatMul"
input: "edge_nnpostZ/dense/Sigmoid"
input: "gradients/edge_nnpostZ/dense_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/edge_nnpostZ/dense_1/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/edge_nnpostZ/dense_1/MatMul_grad/MatMul"
input: "^gradients/edge_nnpostZ/dense_1/MatMul_grad/MatMul_1"
, name: "gradients/edge_nnpostZ/dense_1/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/edge_nnpostZ/dense_1/MatMul_grad/MatMul"
input: "^gradients/edge_nnpostZ/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostZ/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/edge_nnpostZ/dense_1/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/edge_nnpostZ/dense_1/MatMul_grad/MatMul_1"
input: "^gradients/edge_nnpostZ/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostZ/dense_1/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/dense_1/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/dense_1/Tanh_grad/TanhGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/dense_1/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/dense_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/dense_1/Tanh_grad/TanhGrad"
, name: "gradients/dense_1/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/dense_1/Tanh_grad/TanhGrad"
input: "^gradients/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/dense_1/Tanh_grad/TanhGrad"
    }
  }
}
, name: "gradients/dense_1/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/dense_1/BiasAdd_grad/BiasAddGrad"
input: "^gradients/dense_1/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/dense_1/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/edge_nnpostZ/dense/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "edge_nnpostZ/dense/Sigmoid"
input: "gradients/edge_nnpostZ/dense_1/MatMul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/dense_1/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/dense_1/BiasAdd_grad/tuple/control_dependency"
input: "dense_1/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/dense_1/MatMul_grad/MatMul_1"
op: "MatMul"
input: "dense/Sigmoid"
input: "gradients/dense_1/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/dense_1/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/dense_1/MatMul_grad/MatMul"
input: "^gradients/dense_1/MatMul_grad/MatMul_1"
, name: "gradients/dense_1/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/dense_1/MatMul_grad/MatMul"
input: "^gradients/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/dense_1/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/dense_1/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/dense_1/MatMul_grad/MatMul_1"
input: "^gradients/dense_1/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/dense_1/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/edge_nnpostZ/dense/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/edge_nnpostZ/dense/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/edge_nnpostZ/dense/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/edge_nnpostZ/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/edge_nnpostZ/dense/Sigmoid_grad/SigmoidGrad"
, name: "gradients/edge_nnpostZ/dense/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/edge_nnpostZ/dense/Sigmoid_grad/SigmoidGrad"
input: "^gradients/edge_nnpostZ/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostZ/dense/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/edge_nnpostZ/dense/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/edge_nnpostZ/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/edge_nnpostZ/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostZ/dense/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/dense/Sigmoid_grad/SigmoidGrad"
op: "SigmoidGrad"
input: "dense/Sigmoid"
input: "gradients/dense_1/MatMul_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
, name: "gradients/edge_nnpostZ/dense/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/edge_nnpostZ/dense/BiasAdd_grad/tuple/control_dependency"
input: "edge_nnpostZ/dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/edge_nnpostZ/dense/MatMul_grad/MatMul_1"
op: "MatMul"
input: "edge_nnpostZ/Reshape"
input: "gradients/edge_nnpostZ/dense/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/edge_nnpostZ/dense/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/edge_nnpostZ/dense/MatMul_grad/MatMul"
input: "^gradients/edge_nnpostZ/dense/MatMul_grad/MatMul_1"
, name: "gradients/edge_nnpostZ/dense/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/edge_nnpostZ/dense/MatMul_grad/MatMul"
input: "^gradients/edge_nnpostZ/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostZ/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/edge_nnpostZ/dense/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/edge_nnpostZ/dense/MatMul_grad/MatMul_1"
input: "^gradients/edge_nnpostZ/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/edge_nnpostZ/dense/MatMul_grad/MatMul_1"
    }
  }
}
, name: "gradients/dense/BiasAdd_grad/BiasAddGrad"
op: "BiasAddGrad"
input: "gradients/dense/Sigmoid_grad/SigmoidGrad"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "data_format"
  value {
    s: "NHWC"
  }
}
, name: "gradients/dense/BiasAdd_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/dense/Sigmoid_grad/SigmoidGrad"
, name: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/dense/Sigmoid_grad/SigmoidGrad"
input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/dense/Sigmoid_grad/SigmoidGrad"
    }
  }
}
, name: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/dense/BiasAdd_grad/BiasAddGrad"
input: "^gradients/dense/BiasAdd_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/dense/BiasAdd_grad/BiasAddGrad"
    }
  }
}
, name: "gradients/dense/MatMul_grad/MatMul"
op: "MatMul"
input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
input: "dense/kernel/read"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: false
  }
}
attr {
  key: "transpose_b"
  value {
    b: true
  }
}
, name: "gradients/dense/MatMul_grad/MatMul_1"
op: "MatMul"
input: "Reshape"
input: "gradients/dense/BiasAdd_grad/tuple/control_dependency"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "transpose_a"
  value {
    b: true
  }
}
attr {
  key: "transpose_b"
  value {
    b: false
  }
}
, name: "gradients/dense/MatMul_grad/tuple/group_deps"
op: "NoOp"
input: "^gradients/dense/MatMul_grad/MatMul"
input: "^gradients/dense/MatMul_grad/MatMul_1"
, name: "gradients/dense/MatMul_grad/tuple/control_dependency"
op: "Identity"
input: "gradients/dense/MatMul_grad/MatMul"
input: "^gradients/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/dense/MatMul_grad/MatMul"
    }
  }
}
, name: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
op: "Identity"
input: "gradients/dense/MatMul_grad/MatMul_1"
input: "^gradients/dense/MatMul_grad/tuple/group_deps"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@gradients/dense/MatMul_grad/MatMul_1"
    }
  }
}
, name: "beta1_power/initial_value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.8999999761581421
    }
  }
}
, name: "beta1_power"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "beta1_power/Assign"
op: "Assign"
input: "beta1_power"
input: "beta1_power/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "beta1_power/read"
op: "Identity"
input: "beta1_power"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
, name: "beta2_power/initial_value"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}
, name: "beta2_power"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "beta2_power/Assign"
op: "Assign"
input: "beta2_power"
input: "beta2_power/initial_value"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "beta2_power/read"
op: "Identity"
input: "beta2_power"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
, name: "dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\026\000\000\0002\000\000\000"
    }
  }
}
, name: "dense/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "dense/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "dense/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "dense/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 22
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "dense/kernel/Adam/Assign"
op: "Assign"
input: "dense/kernel/Adam"
input: "dense/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "dense/kernel/Adam/read"
op: "Identity"
input: "dense/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
, name: "dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\026\000\000\0002\000\000\000"
    }
  }
}
, name: "dense/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "dense/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "dense/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "dense/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 22
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "dense/kernel/Adam_1/Assign"
op: "Assign"
input: "dense/kernel/Adam_1"
input: "dense/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "dense/kernel/Adam_1/read"
op: "Identity"
input: "dense/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
, name: "dense/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "dense/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "dense/bias/Adam/Assign"
op: "Assign"
input: "dense/bias/Adam"
input: "dense/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "dense/bias/Adam/read"
op: "Identity"
input: "dense/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
, name: "dense/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "dense/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "dense/bias/Adam_1/Assign"
op: "Assign"
input: "dense/bias/Adam_1"
input: "dense/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "dense/bias/Adam_1/read"
op: "Identity"
input: "dense/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
, name: "dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "2\000\000\0002\000\000\000"
    }
  }
}
, name: "dense_1/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "dense_1/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "dense_1/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "dense_1/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "dense_1/kernel/Adam/Assign"
op: "Assign"
input: "dense_1/kernel/Adam"
input: "dense_1/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "dense_1/kernel/Adam/read"
op: "Identity"
input: "dense_1/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
, name: "dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "2\000\000\0002\000\000\000"
    }
  }
}
, name: "dense_1/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "dense_1/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "dense_1/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "dense_1/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "dense_1/kernel/Adam_1/Assign"
op: "Assign"
input: "dense_1/kernel/Adam_1"
input: "dense_1/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "dense_1/kernel/Adam_1/read"
op: "Identity"
input: "dense_1/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
, name: "dense_1/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "dense_1/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "dense_1/bias/Adam/Assign"
op: "Assign"
input: "dense_1/bias/Adam"
input: "dense_1/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "dense_1/bias/Adam/read"
op: "Identity"
input: "dense_1/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
, name: "dense_1/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "dense_1/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "dense_1/bias/Adam_1/Assign"
op: "Assign"
input: "dense_1/bias/Adam_1"
input: "dense_1/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "dense_1/bias/Adam_1/read"
op: "Identity"
input: "dense_1/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
, name: "edge_nnpriorZ/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\013\000\000\000d\000\000\000"
    }
  }
}
, name: "edge_nnpriorZ/dense/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpriorZ/dense/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "edge_nnpriorZ/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "edge_nnpriorZ/dense/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpriorZ/dense/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 11
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpriorZ/dense/kernel/Adam/Assign"
op: "Assign"
input: "edge_nnpriorZ/dense/kernel/Adam"
input: "edge_nnpriorZ/dense/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpriorZ/dense/kernel/Adam/read"
op: "Identity"
input: "edge_nnpriorZ/dense/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
, name: "edge_nnpriorZ/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\013\000\000\000d\000\000\000"
    }
  }
}
, name: "edge_nnpriorZ/dense/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpriorZ/dense/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "edge_nnpriorZ/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "edge_nnpriorZ/dense/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpriorZ/dense/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 11
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpriorZ/dense/kernel/Adam_1/Assign"
op: "Assign"
input: "edge_nnpriorZ/dense/kernel/Adam_1"
input: "edge_nnpriorZ/dense/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpriorZ/dense/kernel/Adam_1/read"
op: "Identity"
input: "edge_nnpriorZ/dense/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
, name: "edge_nnpriorZ/dense/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpriorZ/dense/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpriorZ/dense/bias/Adam/Assign"
op: "Assign"
input: "edge_nnpriorZ/dense/bias/Adam"
input: "edge_nnpriorZ/dense/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpriorZ/dense/bias/Adam/read"
op: "Identity"
input: "edge_nnpriorZ/dense/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
, name: "edge_nnpriorZ/dense/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpriorZ/dense/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpriorZ/dense/bias/Adam_1/Assign"
op: "Assign"
input: "edge_nnpriorZ/dense/bias/Adam_1"
input: "edge_nnpriorZ/dense/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpriorZ/dense/bias/Adam_1/read"
op: "Identity"
input: "edge_nnpriorZ/dense/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000\304\t\000\000"
    }
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "edge_nnpriorZ/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "edge_nnpriorZ/dense_1/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Adam/Assign"
op: "Assign"
input: "edge_nnpriorZ/dense_1/kernel/Adam"
input: "edge_nnpriorZ/dense_1/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Adam/read"
op: "Identity"
input: "edge_nnpriorZ/dense_1/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000\304\t\000\000"
    }
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "edge_nnpriorZ/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "edge_nnpriorZ/dense_1/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Adam_1/Assign"
op: "Assign"
input: "edge_nnpriorZ/dense_1/kernel/Adam_1"
input: "edge_nnpriorZ/dense_1/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpriorZ/dense_1/kernel/Adam_1/read"
op: "Identity"
input: "edge_nnpriorZ/dense_1/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2500
    }
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Adam/Initializer/zeros"
op: "Fill"
input: "edge_nnpriorZ/dense_1/bias/Adam/Initializer/zeros/shape_as_tensor"
input: "edge_nnpriorZ/dense_1/bias/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Adam/Assign"
op: "Assign"
input: "edge_nnpriorZ/dense_1/bias/Adam"
input: "edge_nnpriorZ/dense_1/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Adam/read"
op: "Identity"
input: "edge_nnpriorZ/dense_1/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2500
    }
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Adam_1/Initializer/zeros"
op: "Fill"
input: "edge_nnpriorZ/dense_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
input: "edge_nnpriorZ/dense_1/bias/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Adam_1/Assign"
op: "Assign"
input: "edge_nnpriorZ/dense_1/bias/Adam_1"
input: "edge_nnpriorZ/dense_1/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpriorZ/dense_1/bias/Adam_1/read"
op: "Identity"
input: "edge_nnpriorZ/dense_1/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam/Assign"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam/read"
op: "Identity"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam_1/Assign"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam_1"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam_1/read"
op: "Identity"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam/Assign"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam/read"
op: "Identity"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/bias"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam_1/Assign"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam_1"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam_1/read"
op: "Identity"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/bias"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam/Assign"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam/read"
op: "Identity"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam_1/Assign"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam_1"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam_1/read"
op: "Identity"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam/Assign"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam/read"
op: "Identity"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/bias"
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam_1/Assign"
op: "Assign"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam_1"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam_1/read"
op: "Identity"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/bias"
    }
  }
}
, name: "g_nnpriorZ/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpriorZ/dense/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpriorZ/dense/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "g_nnpriorZ/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "g_nnpriorZ/dense/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpriorZ/dense/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpriorZ/dense/kernel/Adam/Assign"
op: "Assign"
input: "g_nnpriorZ/dense/kernel/Adam"
input: "g_nnpriorZ/dense/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpriorZ/dense/kernel/Adam/read"
op: "Identity"
input: "g_nnpriorZ/dense/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
, name: "g_nnpriorZ/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpriorZ/dense/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpriorZ/dense/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "g_nnpriorZ/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "g_nnpriorZ/dense/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpriorZ/dense/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpriorZ/dense/kernel/Adam_1/Assign"
op: "Assign"
input: "g_nnpriorZ/dense/kernel/Adam_1"
input: "g_nnpriorZ/dense/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpriorZ/dense/kernel/Adam_1/read"
op: "Identity"
input: "g_nnpriorZ/dense/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
, name: "g_nnpriorZ/dense/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpriorZ/dense/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpriorZ/dense/bias/Adam/Assign"
op: "Assign"
input: "g_nnpriorZ/dense/bias/Adam"
input: "g_nnpriorZ/dense/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpriorZ/dense/bias/Adam/read"
op: "Identity"
input: "g_nnpriorZ/dense/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
, name: "g_nnpriorZ/dense/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpriorZ/dense/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpriorZ/dense/bias/Adam_1/Assign"
op: "Assign"
input: "g_nnpriorZ/dense/bias/Adam_1"
input: "g_nnpriorZ/dense/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpriorZ/dense/bias/Adam_1/read"
op: "Identity"
input: "g_nnpriorZ/dense/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "g_nnpriorZ/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "g_nnpriorZ/dense_1/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Adam/Assign"
op: "Assign"
input: "g_nnpriorZ/dense_1/kernel/Adam"
input: "g_nnpriorZ/dense_1/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Adam/read"
op: "Identity"
input: "g_nnpriorZ/dense_1/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "g_nnpriorZ/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "g_nnpriorZ/dense_1/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Adam_1/Assign"
op: "Assign"
input: "g_nnpriorZ/dense_1/kernel/Adam_1"
input: "g_nnpriorZ/dense_1/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpriorZ/dense_1/kernel/Adam_1/read"
op: "Identity"
input: "g_nnpriorZ/dense_1/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
, name: "g_nnpriorZ/dense_1/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpriorZ/dense_1/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpriorZ/dense_1/bias/Adam/Assign"
op: "Assign"
input: "g_nnpriorZ/dense_1/bias/Adam"
input: "g_nnpriorZ/dense_1/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpriorZ/dense_1/bias/Adam/read"
op: "Identity"
input: "g_nnpriorZ/dense_1/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
, name: "g_nnpriorZ/dense_1/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpriorZ/dense_1/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpriorZ/dense_1/bias/Adam_1/Assign"
op: "Assign"
input: "g_nnpriorZ/dense_1/bias/Adam_1"
input: "g_nnpriorZ/dense_1/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpriorZ/dense_1/bias/Adam_1/read"
op: "Identity"
input: "g_nnpriorZ/dense_1/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
, name: "edge_nnpostZ/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\014\000\000\000d\000\000\000"
    }
  }
}
, name: "edge_nnpostZ/dense/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostZ/dense/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "edge_nnpostZ/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostZ/dense/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostZ/dense/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostZ/dense/kernel/Adam/Assign"
op: "Assign"
input: "edge_nnpostZ/dense/kernel/Adam"
input: "edge_nnpostZ/dense/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostZ/dense/kernel/Adam/read"
op: "Identity"
input: "edge_nnpostZ/dense/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
, name: "edge_nnpostZ/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\014\000\000\000d\000\000\000"
    }
  }
}
, name: "edge_nnpostZ/dense/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostZ/dense/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "edge_nnpostZ/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostZ/dense/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostZ/dense/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 12
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostZ/dense/kernel/Adam_1/Assign"
op: "Assign"
input: "edge_nnpostZ/dense/kernel/Adam_1"
input: "edge_nnpostZ/dense/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostZ/dense/kernel/Adam_1/read"
op: "Identity"
input: "edge_nnpostZ/dense/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
, name: "edge_nnpostZ/dense/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostZ/dense/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostZ/dense/bias/Adam/Assign"
op: "Assign"
input: "edge_nnpostZ/dense/bias/Adam"
input: "edge_nnpostZ/dense/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostZ/dense/bias/Adam/read"
op: "Identity"
input: "edge_nnpostZ/dense/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
, name: "edge_nnpostZ/dense/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostZ/dense/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostZ/dense/bias/Adam_1/Assign"
op: "Assign"
input: "edge_nnpostZ/dense/bias/Adam_1"
input: "edge_nnpostZ/dense/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostZ/dense/bias/Adam_1/read"
op: "Identity"
input: "edge_nnpostZ/dense/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000\304\t\000\000"
    }
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "edge_nnpostZ/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostZ/dense_1/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Adam/Assign"
op: "Assign"
input: "edge_nnpostZ/dense_1/kernel/Adam"
input: "edge_nnpostZ/dense_1/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Adam/read"
op: "Identity"
input: "edge_nnpostZ/dense_1/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000\304\t\000\000"
    }
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "edge_nnpostZ/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostZ/dense_1/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Adam_1/Assign"
op: "Assign"
input: "edge_nnpostZ/dense_1/kernel/Adam_1"
input: "edge_nnpostZ/dense_1/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostZ/dense_1/kernel/Adam_1/read"
op: "Identity"
input: "edge_nnpostZ/dense_1/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
, name: "edge_nnpostZ/dense_1/bias/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2500
    }
  }
}
, name: "edge_nnpostZ/dense_1/bias/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostZ/dense_1/bias/Adam/Initializer/zeros"
op: "Fill"
input: "edge_nnpostZ/dense_1/bias/Adam/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostZ/dense_1/bias/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostZ/dense_1/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostZ/dense_1/bias/Adam/Assign"
op: "Assign"
input: "edge_nnpostZ/dense_1/bias/Adam"
input: "edge_nnpostZ/dense_1/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostZ/dense_1/bias/Adam/read"
op: "Identity"
input: "edge_nnpostZ/dense_1/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
, name: "edge_nnpostZ/dense_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2500
    }
  }
}
, name: "edge_nnpostZ/dense_1/bias/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostZ/dense_1/bias/Adam_1/Initializer/zeros"
op: "Fill"
input: "edge_nnpostZ/dense_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostZ/dense_1/bias/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostZ/dense_1/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostZ/dense_1/bias/Adam_1/Assign"
op: "Assign"
input: "edge_nnpostZ/dense_1/bias/Adam_1"
input: "edge_nnpostZ/dense_1/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostZ/dense_1/bias/Adam_1/read"
op: "Identity"
input: "edge_nnpostZ/dense_1/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam/Assign"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam/read"
op: "Identity"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam_1/Assign"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam_1"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam_1/read"
op: "Identity"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam/Assign"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam/read"
op: "Identity"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/bias"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam_1/Assign"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam_1"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam_1/read"
op: "Identity"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/bias"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam/Assign"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam/read"
op: "Identity"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam_1/Assign"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam_1"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam_1/read"
op: "Identity"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam/Assign"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam/read"
op: "Identity"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/bias"
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam_1/Assign"
op: "Assign"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam_1"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam_1/read"
op: "Identity"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/bias"
    }
  }
}
, name: "g_nnpostZ/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostZ/dense/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostZ/dense/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "g_nnpostZ/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "g_nnpostZ/dense/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostZ/dense/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostZ/dense/kernel/Adam/Assign"
op: "Assign"
input: "g_nnpostZ/dense/kernel/Adam"
input: "g_nnpostZ/dense/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostZ/dense/kernel/Adam/read"
op: "Identity"
input: "g_nnpostZ/dense/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
, name: "g_nnpostZ/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostZ/dense/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostZ/dense/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "g_nnpostZ/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "g_nnpostZ/dense/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostZ/dense/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostZ/dense/kernel/Adam_1/Assign"
op: "Assign"
input: "g_nnpostZ/dense/kernel/Adam_1"
input: "g_nnpostZ/dense/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostZ/dense/kernel/Adam_1/read"
op: "Identity"
input: "g_nnpostZ/dense/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
, name: "g_nnpostZ/dense/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostZ/dense/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostZ/dense/bias/Adam/Assign"
op: "Assign"
input: "g_nnpostZ/dense/bias/Adam"
input: "g_nnpostZ/dense/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostZ/dense/bias/Adam/read"
op: "Identity"
input: "g_nnpostZ/dense/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
, name: "g_nnpostZ/dense/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostZ/dense/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostZ/dense/bias/Adam_1/Assign"
op: "Assign"
input: "g_nnpostZ/dense/bias/Adam_1"
input: "g_nnpostZ/dense/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostZ/dense/bias/Adam_1/read"
op: "Identity"
input: "g_nnpostZ/dense/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
, name: "g_nnpostZ/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostZ/dense_1/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostZ/dense_1/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "g_nnpostZ/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "g_nnpostZ/dense_1/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostZ/dense_1/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostZ/dense_1/kernel/Adam/Assign"
op: "Assign"
input: "g_nnpostZ/dense_1/kernel/Adam"
input: "g_nnpostZ/dense_1/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostZ/dense_1/kernel/Adam/read"
op: "Identity"
input: "g_nnpostZ/dense_1/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
, name: "g_nnpostZ/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostZ/dense_1/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostZ/dense_1/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "g_nnpostZ/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "g_nnpostZ/dense_1/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostZ/dense_1/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostZ/dense_1/kernel/Adam_1/Assign"
op: "Assign"
input: "g_nnpostZ/dense_1/kernel/Adam_1"
input: "g_nnpostZ/dense_1/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostZ/dense_1/kernel/Adam_1/read"
op: "Identity"
input: "g_nnpostZ/dense_1/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
, name: "g_nnpostZ/dense_1/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostZ/dense_1/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostZ/dense_1/bias/Adam/Assign"
op: "Assign"
input: "g_nnpostZ/dense_1/bias/Adam"
input: "g_nnpostZ/dense_1/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostZ/dense_1/bias/Adam/read"
op: "Identity"
input: "g_nnpostZ/dense_1/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
, name: "g_nnpostZ/dense_1/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostZ/dense_1/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostZ/dense_1/bias/Adam_1/Assign"
op: "Assign"
input: "g_nnpostZ/dense_1/bias/Adam_1"
input: "g_nnpostZ/dense_1/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostZ/dense_1/bias/Adam_1/read"
op: "Identity"
input: "g_nnpostZ/dense_1/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
, name: "edge_nnpostX/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\013\000\000\000d\000\000\000"
    }
  }
}
, name: "edge_nnpostX/dense/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostX/dense/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "edge_nnpostX/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostX/dense/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostX/dense/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 11
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostX/dense/kernel/Adam/Assign"
op: "Assign"
input: "edge_nnpostX/dense/kernel/Adam"
input: "edge_nnpostX/dense/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostX/dense/kernel/Adam/read"
op: "Identity"
input: "edge_nnpostX/dense/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
, name: "edge_nnpostX/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "\013\000\000\000d\000\000\000"
    }
  }
}
, name: "edge_nnpostX/dense/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostX/dense/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "edge_nnpostX/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostX/dense/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostX/dense/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 11
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostX/dense/kernel/Adam_1/Assign"
op: "Assign"
input: "edge_nnpostX/dense/kernel/Adam_1"
input: "edge_nnpostX/dense/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostX/dense/kernel/Adam_1/read"
op: "Identity"
input: "edge_nnpostX/dense/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
, name: "edge_nnpostX/dense/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostX/dense/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostX/dense/bias/Adam/Assign"
op: "Assign"
input: "edge_nnpostX/dense/bias/Adam"
input: "edge_nnpostX/dense/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostX/dense/bias/Adam/read"
op: "Identity"
input: "edge_nnpostX/dense/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
, name: "edge_nnpostX/dense/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostX/dense/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostX/dense/bias/Adam_1/Assign"
op: "Assign"
input: "edge_nnpostX/dense/bias/Adam_1"
input: "edge_nnpostX/dense/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostX/dense/bias/Adam_1/read"
op: "Identity"
input: "edge_nnpostX/dense/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
, name: "edge_nnpostX/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000\304\t\000\000"
    }
  }
}
, name: "edge_nnpostX/dense_1/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostX/dense_1/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "edge_nnpostX/dense_1/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostX/dense_1/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostX/dense_1/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostX/dense_1/kernel/Adam/Assign"
op: "Assign"
input: "edge_nnpostX/dense_1/kernel/Adam"
input: "edge_nnpostX/dense_1/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostX/dense_1/kernel/Adam/read"
op: "Identity"
input: "edge_nnpostX/dense_1/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
, name: "edge_nnpostX/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000\304\t\000\000"
    }
  }
}
, name: "edge_nnpostX/dense_1/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostX/dense_1/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "edge_nnpostX/dense_1/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostX/dense_1/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostX/dense_1/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostX/dense_1/kernel/Adam_1/Assign"
op: "Assign"
input: "edge_nnpostX/dense_1/kernel/Adam_1"
input: "edge_nnpostX/dense_1/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostX/dense_1/kernel/Adam_1/read"
op: "Identity"
input: "edge_nnpostX/dense_1/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
, name: "edge_nnpostX/dense_1/bias/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2500
    }
  }
}
, name: "edge_nnpostX/dense_1/bias/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostX/dense_1/bias/Adam/Initializer/zeros"
op: "Fill"
input: "edge_nnpostX/dense_1/bias/Adam/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostX/dense_1/bias/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostX/dense_1/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostX/dense_1/bias/Adam/Assign"
op: "Assign"
input: "edge_nnpostX/dense_1/bias/Adam"
input: "edge_nnpostX/dense_1/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostX/dense_1/bias/Adam/read"
op: "Identity"
input: "edge_nnpostX/dense_1/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
, name: "edge_nnpostX/dense_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 1
        }
      }
      int_val: 2500
    }
  }
}
, name: "edge_nnpostX/dense_1/bias/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "edge_nnpostX/dense_1/bias/Adam_1/Initializer/zeros"
op: "Fill"
input: "edge_nnpostX/dense_1/bias/Adam_1/Initializer/zeros/shape_as_tensor"
input: "edge_nnpostX/dense_1/bias/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "edge_nnpostX/dense_1/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 2500
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "edge_nnpostX/dense_1/bias/Adam_1/Assign"
op: "Assign"
input: "edge_nnpostX/dense_1/bias/Adam_1"
input: "edge_nnpostX/dense_1/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "edge_nnpostX/dense_1/bias/Adam_1/read"
op: "Identity"
input: "edge_nnpostX/dense_1/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam/Assign"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam/read"
op: "Identity"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam_1/Assign"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam_1"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam_1/read"
op: "Identity"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam/Assign"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam/read"
op: "Identity"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/bias"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam_1/Assign"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam_1"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam_1/read"
op: "Identity"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/bias"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam/Assign"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam/read"
op: "Identity"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\0002\000\000\000"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam_1/Assign"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam_1"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam_1/read"
op: "Identity"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam/Assign"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam/read"
op: "Identity"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/bias"
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 50
        }
      }
      float_val: 0.0
    }
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 50
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam_1/Assign"
op: "Assign"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam_1"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam_1/read"
op: "Identity"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/bias"
    }
  }
}
, name: "g_nnpostX/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostX/dense/kernel/Adam/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX/dense/kernel/Adam/Initializer/zeros"
op: "Fill"
input: "g_nnpostX/dense/kernel/Adam/Initializer/zeros/shape_as_tensor"
input: "g_nnpostX/dense/kernel/Adam/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostX/dense/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostX/dense/kernel/Adam/Assign"
op: "Assign"
input: "g_nnpostX/dense/kernel/Adam"
input: "g_nnpostX/dense/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostX/dense/kernel/Adam/read"
op: "Identity"
input: "g_nnpostX/dense/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
, name: "g_nnpostX/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_INT32
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_INT32
      tensor_shape {
        dim {
          size: 2
        }
      }
      tensor_content: "d\000\000\000d\000\000\000"
    }
  }
}
, name: "g_nnpostX/dense/kernel/Adam_1/Initializer/zeros/Const"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX/dense/kernel/Adam_1/Initializer/zeros"
op: "Fill"
input: "g_nnpostX/dense/kernel/Adam_1/Initializer/zeros/shape_as_tensor"
input: "g_nnpostX/dense/kernel/Adam_1/Initializer/zeros/Const"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "index_type"
  value {
    type: DT_INT32
  }
}
, name: "g_nnpostX/dense/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostX/dense/kernel/Adam_1/Assign"
op: "Assign"
input: "g_nnpostX/dense/kernel/Adam_1"
input: "g_nnpostX/dense/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostX/dense/kernel/Adam_1/read"
op: "Identity"
input: "g_nnpostX/dense/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
, name: "g_nnpostX/dense/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX/dense/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostX/dense/bias/Adam/Assign"
op: "Assign"
input: "g_nnpostX/dense/bias/Adam"
input: "g_nnpostX/dense/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostX/dense/bias/Adam/read"
op: "Identity"
input: "g_nnpostX/dense/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
, name: "g_nnpostX/dense/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX/dense/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostX/dense/bias/Adam_1/Assign"
op: "Assign"
input: "g_nnpostX/dense/bias/Adam_1"
input: "g_nnpostX/dense/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostX/dense/bias/Adam_1/read"
op: "Identity"
input: "g_nnpostX/dense/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
, name: "g_nnpostX/dense_1/kernel/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX/dense_1/kernel/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 3
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostX/dense_1/kernel/Adam/Assign"
op: "Assign"
input: "g_nnpostX/dense_1/kernel/Adam"
input: "g_nnpostX/dense_1/kernel/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostX/dense_1/kernel/Adam/read"
op: "Identity"
input: "g_nnpostX/dense_1/kernel/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
, name: "g_nnpostX/dense_1/kernel/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 100
        }
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX/dense_1/kernel/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 100
      }
      dim {
        size: 3
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostX/dense_1/kernel/Adam_1/Assign"
op: "Assign"
input: "g_nnpostX/dense_1/kernel/Adam_1"
input: "g_nnpostX/dense_1/kernel/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostX/dense_1/kernel/Adam_1/read"
op: "Identity"
input: "g_nnpostX/dense_1/kernel/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
, name: "g_nnpostX/dense_1/bias/Adam/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX/dense_1/bias/Adam"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostX/dense_1/bias/Adam/Assign"
op: "Assign"
input: "g_nnpostX/dense_1/bias/Adam"
input: "g_nnpostX/dense_1/bias/Adam/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostX/dense_1/bias/Adam/read"
op: "Identity"
input: "g_nnpostX/dense_1/bias/Adam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
, name: "g_nnpostX/dense_1/bias/Adam_1/Initializer/zeros"
op: "Const"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
        dim {
          size: 3
        }
      }
      float_val: 0.0
    }
  }
}
, name: "g_nnpostX/dense_1/bias/Adam_1"
op: "VariableV2"
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "container"
  value {
    s: ""
  }
}
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "shape"
  value {
    shape {
      dim {
        size: 3
      }
    }
  }
}
attr {
  key: "shared_name"
  value {
    s: ""
  }
}
, name: "g_nnpostX/dense_1/bias/Adam_1/Assign"
op: "Assign"
input: "g_nnpostX/dense_1/bias/Adam_1"
input: "g_nnpostX/dense_1/bias/Adam_1/Initializer/zeros"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: true
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "g_nnpostX/dense_1/bias/Adam_1/read"
op: "Identity"
input: "g_nnpostX/dense_1/bias/Adam_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
, name: "Adam/learning_rate"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.0003000000142492354
    }
  }
}
, name: "Adam/beta1"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.8999999761581421
    }
  }
}
, name: "Adam/beta2"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 0.9990000128746033
    }
  }
}
, name: "Adam/epsilon"
op: "Const"
attr {
  key: "dtype"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "value"
  value {
    tensor {
      dtype: DT_FLOAT
      tensor_shape {
      }
      float_val: 9.99999993922529e-09
    }
  }
}
, name: "Adam/update_dense/kernel/ApplyAdam"
op: "ApplyAdam"
input: "dense/kernel"
input: "dense/kernel/Adam"
input: "dense/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/dense/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_dense/bias/ApplyAdam"
op: "ApplyAdam"
input: "dense/bias"
input: "dense/bias/Adam"
input: "dense/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/dense/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_dense_1/kernel/ApplyAdam"
op: "ApplyAdam"
input: "dense_1/kernel"
input: "dense_1/kernel/Adam"
input: "dense_1/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/dense_1/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_dense_1/bias/ApplyAdam"
op: "ApplyAdam"
input: "dense_1/bias"
input: "dense_1/bias/Adam"
input: "dense_1/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/dense_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_edge_nnpriorZ/dense/kernel/ApplyAdam"
op: "ApplyAdam"
input: "edge_nnpriorZ/dense/kernel"
input: "edge_nnpriorZ/dense/kernel/Adam"
input: "edge_nnpriorZ/dense/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/edge_nnpriorZ/dense/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_edge_nnpriorZ/dense/bias/ApplyAdam"
op: "ApplyAdam"
input: "edge_nnpriorZ/dense/bias"
input: "edge_nnpriorZ/dense/bias/Adam"
input: "edge_nnpriorZ/dense/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/edge_nnpriorZ/dense/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_edge_nnpriorZ/dense_1/kernel/ApplyAdam"
op: "ApplyAdam"
input: "edge_nnpriorZ/dense_1/kernel"
input: "edge_nnpriorZ/dense_1/kernel/Adam"
input: "edge_nnpriorZ/dense_1/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/edge_nnpriorZ/dense_1/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_edge_nnpriorZ/dense_1/bias/ApplyAdam"
op: "ApplyAdam"
input: "edge_nnpriorZ/dense_1/bias"
input: "edge_nnpriorZ/dense_1/bias/Adam"
input: "edge_nnpriorZ/dense_1/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/edge_nnpriorZ/dense_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_update_GRUpriorZ/rnn/gru_cell/gates/kernel/ApplyAdam"
op: "ApplyAdam"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam"
input: "update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_111"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_update_GRUpriorZ/rnn/gru_cell/gates/bias/ApplyAdam"
op: "ApplyAdam"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam"
input: "update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_108"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_update_GRUpriorZ/rnn/gru_cell/candidate/kernel/ApplyAdam"
op: "ApplyAdam"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_106"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_update_GRUpriorZ/rnn/gru_cell/candidate/bias/ApplyAdam"
op: "ApplyAdam"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam"
input: "update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_105"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpriorZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_g_nnpriorZ/dense/kernel/ApplyAdam"
op: "ApplyAdam"
input: "g_nnpriorZ/dense/kernel"
input: "g_nnpriorZ/dense/kernel/Adam"
input: "g_nnpriorZ/dense/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/g_nnpriorZ/dense/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_g_nnpriorZ/dense/bias/ApplyAdam"
op: "ApplyAdam"
input: "g_nnpriorZ/dense/bias"
input: "g_nnpriorZ/dense/bias/Adam"
input: "g_nnpriorZ/dense/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/g_nnpriorZ/dense/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_g_nnpriorZ/dense_1/kernel/ApplyAdam"
op: "ApplyAdam"
input: "g_nnpriorZ/dense_1/kernel"
input: "g_nnpriorZ/dense_1/kernel/Adam"
input: "g_nnpriorZ/dense_1/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/g_nnpriorZ/dense_1/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_g_nnpriorZ/dense_1/bias/ApplyAdam"
op: "ApplyAdam"
input: "g_nnpriorZ/dense_1/bias"
input: "g_nnpriorZ/dense_1/bias/Adam"
input: "g_nnpriorZ/dense_1/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/g_nnpriorZ/dense_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpriorZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_edge_nnpostZ/dense/kernel/ApplyAdam"
op: "ApplyAdam"
input: "edge_nnpostZ/dense/kernel"
input: "edge_nnpostZ/dense/kernel/Adam"
input: "edge_nnpostZ/dense/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/edge_nnpostZ/dense/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_edge_nnpostZ/dense/bias/ApplyAdam"
op: "ApplyAdam"
input: "edge_nnpostZ/dense/bias"
input: "edge_nnpostZ/dense/bias/Adam"
input: "edge_nnpostZ/dense/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/edge_nnpostZ/dense/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_edge_nnpostZ/dense_1/kernel/ApplyAdam"
op: "ApplyAdam"
input: "edge_nnpostZ/dense_1/kernel"
input: "edge_nnpostZ/dense_1/kernel/Adam"
input: "edge_nnpostZ/dense_1/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/edge_nnpostZ/dense_1/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_edge_nnpostZ/dense_1/bias/ApplyAdam"
op: "ApplyAdam"
input: "edge_nnpostZ/dense_1/bias"
input: "edge_nnpostZ/dense_1/bias/Adam"
input: "edge_nnpostZ/dense_1/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/edge_nnpostZ/dense_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_update_GRUpostZ/rnn/gru_cell/gates/kernel/ApplyAdam"
op: "ApplyAdam"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam"
input: "update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_140"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_update_GRUpostZ/rnn/gru_cell/gates/bias/ApplyAdam"
op: "ApplyAdam"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam"
input: "update_GRUpostZ/rnn/gru_cell/gates/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_137"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_update_GRUpostZ/rnn/gru_cell/candidate/kernel/ApplyAdam"
op: "ApplyAdam"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam"
input: "update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_135"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_update_GRUpostZ/rnn/gru_cell/candidate/bias/ApplyAdam"
op: "ApplyAdam"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam"
input: "update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_134"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostZ/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_g_nnpostZ/dense/kernel/ApplyAdam"
op: "ApplyAdam"
input: "g_nnpostZ/dense/kernel"
input: "g_nnpostZ/dense/kernel/Adam"
input: "g_nnpostZ/dense/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/g_nnpostZ/dense/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_g_nnpostZ/dense/bias/ApplyAdam"
op: "ApplyAdam"
input: "g_nnpostZ/dense/bias"
input: "g_nnpostZ/dense/bias/Adam"
input: "g_nnpostZ/dense/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/g_nnpostZ/dense/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_g_nnpostZ/dense_1/kernel/ApplyAdam"
op: "ApplyAdam"
input: "g_nnpostZ/dense_1/kernel"
input: "g_nnpostZ/dense_1/kernel/Adam"
input: "g_nnpostZ/dense_1/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/g_nnpostZ/dense_1/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_g_nnpostZ/dense_1/bias/ApplyAdam"
op: "ApplyAdam"
input: "g_nnpostZ/dense_1/bias"
input: "g_nnpostZ/dense_1/bias/Adam"
input: "g_nnpostZ/dense_1/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/g_nnpostZ/dense_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostZ/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_edge_nnpostX/dense/kernel/ApplyAdam"
op: "ApplyAdam"
input: "edge_nnpostX/dense/kernel"
input: "edge_nnpostX/dense/kernel/Adam"
input: "edge_nnpostX/dense/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/edge_nnpostX/dense/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_edge_nnpostX/dense/bias/ApplyAdam"
op: "ApplyAdam"
input: "edge_nnpostX/dense/bias"
input: "edge_nnpostX/dense/bias/Adam"
input: "edge_nnpostX/dense/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/edge_nnpostX/dense/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_edge_nnpostX/dense_1/kernel/ApplyAdam"
op: "ApplyAdam"
input: "edge_nnpostX/dense_1/kernel"
input: "edge_nnpostX/dense_1/kernel/Adam"
input: "edge_nnpostX/dense_1/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/edge_nnpostX/dense_1/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_edge_nnpostX/dense_1/bias/ApplyAdam"
op: "ApplyAdam"
input: "edge_nnpostX/dense_1/bias"
input: "edge_nnpostX/dense_1/bias/Adam"
input: "edge_nnpostX/dense_1/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/edge_nnpostX/dense_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@edge_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_update_GRUpostX/rnn/gru_cell/gates/kernel/ApplyAdam"
op: "ApplyAdam"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam"
input: "update_GRUpostX/rnn/gru_cell/gates/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_118"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_update_GRUpostX/rnn/gru_cell/gates/bias/ApplyAdam"
op: "ApplyAdam"
input: "update_GRUpostX/rnn/gru_cell/gates/bias"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam"
input: "update_GRUpostX/rnn/gru_cell/gates/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_115"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/gates/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_update_GRUpostX/rnn/gru_cell/candidate/kernel/ApplyAdam"
op: "ApplyAdam"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam"
input: "update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_113"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_update_GRUpostX/rnn/gru_cell/candidate/bias/ApplyAdam"
op: "ApplyAdam"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam"
input: "update_GRUpostX/rnn/gru_cell/candidate/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/AddN_112"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@update_GRUpostX/rnn/gru_cell/candidate/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_g_nnpostX/dense/kernel/ApplyAdam"
op: "ApplyAdam"
input: "g_nnpostX/dense/kernel"
input: "g_nnpostX/dense/kernel/Adam"
input: "g_nnpostX/dense/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/g_nnpostX/dense/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_g_nnpostX/dense/bias/ApplyAdam"
op: "ApplyAdam"
input: "g_nnpostX/dense/bias"
input: "g_nnpostX/dense/bias/Adam"
input: "g_nnpostX/dense/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/g_nnpostX/dense/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_g_nnpostX/dense_1/kernel/ApplyAdam"
op: "ApplyAdam"
input: "g_nnpostX/dense_1/kernel"
input: "g_nnpostX/dense_1/kernel/Adam"
input: "g_nnpostX/dense_1/kernel/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/g_nnpostX/dense_1/MatMul_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/kernel"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/update_g_nnpostX/dense_1/bias/ApplyAdam"
op: "ApplyAdam"
input: "g_nnpostX/dense_1/bias"
input: "g_nnpostX/dense_1/bias/Adam"
input: "g_nnpostX/dense_1/bias/Adam_1"
input: "beta1_power/read"
input: "beta2_power/read"
input: "Adam/learning_rate"
input: "Adam/beta1"
input: "Adam/beta2"
input: "Adam/epsilon"
input: "gradients/g_nnpostX/dense_1/BiasAdd_grad/tuple/control_dependency_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@g_nnpostX/dense_1/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "use_nesterov"
  value {
    b: false
  }
}
, name: "Adam/mul"
op: "Mul"
input: "beta1_power/read"
input: "Adam/beta1"
input: "^Adam/update_dense/bias/ApplyAdam"
input: "^Adam/update_dense/kernel/ApplyAdam"
input: "^Adam/update_dense_1/bias/ApplyAdam"
input: "^Adam/update_dense_1/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpostX/dense/bias/ApplyAdam"
input: "^Adam/update_edge_nnpostX/dense/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpostX/dense_1/bias/ApplyAdam"
input: "^Adam/update_edge_nnpostX/dense_1/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpostZ/dense/bias/ApplyAdam"
input: "^Adam/update_edge_nnpostZ/dense/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpostZ/dense_1/bias/ApplyAdam"
input: "^Adam/update_edge_nnpostZ/dense_1/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpriorZ/dense/bias/ApplyAdam"
input: "^Adam/update_edge_nnpriorZ/dense/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpriorZ/dense_1/bias/ApplyAdam"
input: "^Adam/update_edge_nnpriorZ/dense_1/kernel/ApplyAdam"
input: "^Adam/update_g_nnpostX/dense/bias/ApplyAdam"
input: "^Adam/update_g_nnpostX/dense/kernel/ApplyAdam"
input: "^Adam/update_g_nnpostX/dense_1/bias/ApplyAdam"
input: "^Adam/update_g_nnpostX/dense_1/kernel/ApplyAdam"
input: "^Adam/update_g_nnpostZ/dense/bias/ApplyAdam"
input: "^Adam/update_g_nnpostZ/dense/kernel/ApplyAdam"
input: "^Adam/update_g_nnpostZ/dense_1/bias/ApplyAdam"
input: "^Adam/update_g_nnpostZ/dense_1/kernel/ApplyAdam"
input: "^Adam/update_g_nnpriorZ/dense/bias/ApplyAdam"
input: "^Adam/update_g_nnpriorZ/dense/kernel/ApplyAdam"
input: "^Adam/update_g_nnpriorZ/dense_1/bias/ApplyAdam"
input: "^Adam/update_g_nnpriorZ/dense_1/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpostX/rnn/gru_cell/candidate/bias/ApplyAdam"
input: "^Adam/update_update_GRUpostX/rnn/gru_cell/candidate/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpostX/rnn/gru_cell/gates/bias/ApplyAdam"
input: "^Adam/update_update_GRUpostX/rnn/gru_cell/gates/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpostZ/rnn/gru_cell/candidate/bias/ApplyAdam"
input: "^Adam/update_update_GRUpostZ/rnn/gru_cell/candidate/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpostZ/rnn/gru_cell/gates/bias/ApplyAdam"
input: "^Adam/update_update_GRUpostZ/rnn/gru_cell/gates/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpriorZ/rnn/gru_cell/candidate/bias/ApplyAdam"
input: "^Adam/update_update_GRUpriorZ/rnn/gru_cell/candidate/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpriorZ/rnn/gru_cell/gates/bias/ApplyAdam"
input: "^Adam/update_update_GRUpriorZ/rnn/gru_cell/gates/kernel/ApplyAdam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
, name: "Adam/Assign"
op: "Assign"
input: "beta1_power"
input: "Adam/mul"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "Adam/mul_1"
op: "Mul"
input: "beta2_power/read"
input: "Adam/beta2"
input: "^Adam/update_dense/bias/ApplyAdam"
input: "^Adam/update_dense/kernel/ApplyAdam"
input: "^Adam/update_dense_1/bias/ApplyAdam"
input: "^Adam/update_dense_1/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpostX/dense/bias/ApplyAdam"
input: "^Adam/update_edge_nnpostX/dense/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpostX/dense_1/bias/ApplyAdam"
input: "^Adam/update_edge_nnpostX/dense_1/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpostZ/dense/bias/ApplyAdam"
input: "^Adam/update_edge_nnpostZ/dense/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpostZ/dense_1/bias/ApplyAdam"
input: "^Adam/update_edge_nnpostZ/dense_1/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpriorZ/dense/bias/ApplyAdam"
input: "^Adam/update_edge_nnpriorZ/dense/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpriorZ/dense_1/bias/ApplyAdam"
input: "^Adam/update_edge_nnpriorZ/dense_1/kernel/ApplyAdam"
input: "^Adam/update_g_nnpostX/dense/bias/ApplyAdam"
input: "^Adam/update_g_nnpostX/dense/kernel/ApplyAdam"
input: "^Adam/update_g_nnpostX/dense_1/bias/ApplyAdam"
input: "^Adam/update_g_nnpostX/dense_1/kernel/ApplyAdam"
input: "^Adam/update_g_nnpostZ/dense/bias/ApplyAdam"
input: "^Adam/update_g_nnpostZ/dense/kernel/ApplyAdam"
input: "^Adam/update_g_nnpostZ/dense_1/bias/ApplyAdam"
input: "^Adam/update_g_nnpostZ/dense_1/kernel/ApplyAdam"
input: "^Adam/update_g_nnpriorZ/dense/bias/ApplyAdam"
input: "^Adam/update_g_nnpriorZ/dense/kernel/ApplyAdam"
input: "^Adam/update_g_nnpriorZ/dense_1/bias/ApplyAdam"
input: "^Adam/update_g_nnpriorZ/dense_1/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpostX/rnn/gru_cell/candidate/bias/ApplyAdam"
input: "^Adam/update_update_GRUpostX/rnn/gru_cell/candidate/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpostX/rnn/gru_cell/gates/bias/ApplyAdam"
input: "^Adam/update_update_GRUpostX/rnn/gru_cell/gates/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpostZ/rnn/gru_cell/candidate/bias/ApplyAdam"
input: "^Adam/update_update_GRUpostZ/rnn/gru_cell/candidate/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpostZ/rnn/gru_cell/gates/bias/ApplyAdam"
input: "^Adam/update_update_GRUpostZ/rnn/gru_cell/gates/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpriorZ/rnn/gru_cell/candidate/bias/ApplyAdam"
input: "^Adam/update_update_GRUpriorZ/rnn/gru_cell/candidate/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpriorZ/rnn/gru_cell/gates/bias/ApplyAdam"
input: "^Adam/update_update_GRUpriorZ/rnn/gru_cell/gates/kernel/ApplyAdam"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
, name: "Adam/Assign_1"
op: "Assign"
input: "beta2_power"
input: "Adam/mul_1"
attr {
  key: "T"
  value {
    type: DT_FLOAT
  }
}
attr {
  key: "_class"
  value {
    list {
      s: "loc:@dense/bias"
    }
  }
}
attr {
  key: "use_locking"
  value {
    b: false
  }
}
attr {
  key: "validate_shape"
  value {
    b: true
  }
}
, name: "Adam"
op: "NoOp"
input: "^Adam/Assign"
input: "^Adam/Assign_1"
input: "^Adam/update_dense/bias/ApplyAdam"
input: "^Adam/update_dense/kernel/ApplyAdam"
input: "^Adam/update_dense_1/bias/ApplyAdam"
input: "^Adam/update_dense_1/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpostX/dense/bias/ApplyAdam"
input: "^Adam/update_edge_nnpostX/dense/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpostX/dense_1/bias/ApplyAdam"
input: "^Adam/update_edge_nnpostX/dense_1/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpostZ/dense/bias/ApplyAdam"
input: "^Adam/update_edge_nnpostZ/dense/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpostZ/dense_1/bias/ApplyAdam"
input: "^Adam/update_edge_nnpostZ/dense_1/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpriorZ/dense/bias/ApplyAdam"
input: "^Adam/update_edge_nnpriorZ/dense/kernel/ApplyAdam"
input: "^Adam/update_edge_nnpriorZ/dense_1/bias/ApplyAdam"
input: "^Adam/update_edge_nnpriorZ/dense_1/kernel/ApplyAdam"
input: "^Adam/update_g_nnpostX/dense/bias/ApplyAdam"
input: "^Adam/update_g_nnpostX/dense/kernel/ApplyAdam"
input: "^Adam/update_g_nnpostX/dense_1/bias/ApplyAdam"
input: "^Adam/update_g_nnpostX/dense_1/kernel/ApplyAdam"
input: "^Adam/update_g_nnpostZ/dense/bias/ApplyAdam"
input: "^Adam/update_g_nnpostZ/dense/kernel/ApplyAdam"
input: "^Adam/update_g_nnpostZ/dense_1/bias/ApplyAdam"
input: "^Adam/update_g_nnpostZ/dense_1/kernel/ApplyAdam"
input: "^Adam/update_g_nnpriorZ/dense/bias/ApplyAdam"
input: "^Adam/update_g_nnpriorZ/dense/kernel/ApplyAdam"
input: "^Adam/update_g_nnpriorZ/dense_1/bias/ApplyAdam"
input: "^Adam/update_g_nnpriorZ/dense_1/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpostX/rnn/gru_cell/candidate/bias/ApplyAdam"
input: "^Adam/update_update_GRUpostX/rnn/gru_cell/candidate/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpostX/rnn/gru_cell/gates/bias/ApplyAdam"
input: "^Adam/update_update_GRUpostX/rnn/gru_cell/gates/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpostZ/rnn/gru_cell/candidate/bias/ApplyAdam"
input: "^Adam/update_update_GRUpostZ/rnn/gru_cell/candidate/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpostZ/rnn/gru_cell/gates/bias/ApplyAdam"
input: "^Adam/update_update_GRUpostZ/rnn/gru_cell/gates/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpriorZ/rnn/gru_cell/candidate/bias/ApplyAdam"
input: "^Adam/update_update_GRUpriorZ/rnn/gru_cell/candidate/kernel/ApplyAdam"
input: "^Adam/update_update_GRUpriorZ/rnn/gru_cell/gates/bias/ApplyAdam"
input: "^Adam/update_update_GRUpriorZ/rnn/gru_cell/gates/kernel/ApplyAdam"
, name: "init"
op: "NoOp"
input: "^beta1_power/Assign"
input: "^beta2_power/Assign"
input: "^dense/bias/Adam/Assign"
input: "^dense/bias/Adam_1/Assign"
input: "^dense/bias/Assign"
input: "^dense/kernel/Adam/Assign"
input: "^dense/kernel/Adam_1/Assign"
input: "^dense/kernel/Assign"
input: "^dense_1/bias/Adam/Assign"
input: "^dense_1/bias/Adam_1/Assign"
input: "^dense_1/bias/Assign"
input: "^dense_1/kernel/Adam/Assign"
input: "^dense_1/kernel/Adam_1/Assign"
input: "^dense_1/kernel/Assign"
input: "^edge_nnpostX/dense/bias/Adam/Assign"
input: "^edge_nnpostX/dense/bias/Adam_1/Assign"
input: "^edge_nnpostX/dense/bias/Assign"
input: "^edge_nnpostX/dense/kernel/Adam/Assign"
input: "^edge_nnpostX/dense/kernel/Adam_1/Assign"
input: "^edge_nnpostX/dense/kernel/Assign"
input: "^edge_nnpostX/dense_1/bias/Adam/Assign"
input: "^edge_nnpostX/dense_1/bias/Adam_1/Assign"
input: "^edge_nnpostX/dense_1/bias/Assign"
input: "^edge_nnpostX/dense_1/kernel/Adam/Assign"
input: "^edge_nnpostX/dense_1/kernel/Adam_1/Assign"
input: "^edge_nnpostX/dense_1/kernel/Assign"
input: "^edge_nnpostZ/dense/bias/Adam/Assign"
input: "^edge_nnpostZ/dense/bias/Adam_1/Assign"
input: "^edge_nnpostZ/dense/bias/Assign"
input: "^edge_nnpostZ/dense/kernel/Adam/Assign"
input: "^edge_nnpostZ/dense/kernel/Adam_1/Assign"
input: "^edge_nnpostZ/dense/kernel/Assign"
input: "^edge_nnpostZ/dense_1/bias/Adam/Assign"
input: "^edge_nnpostZ/dense_1/bias/Adam_1/Assign"
input: "^edge_nnpostZ/dense_1/bias/Assign"
input: "^edge_nnpostZ/dense_1/kernel/Adam/Assign"
input: "^edge_nnpostZ/dense_1/kernel/Adam_1/Assign"
input: "^edge_nnpostZ/dense_1/kernel/Assign"
input: "^edge_nnpriorZ/dense/bias/Adam/Assign"
input: "^edge_nnpriorZ/dense/bias/Adam_1/Assign"
input: "^edge_nnpriorZ/dense/bias/Assign"
input: "^edge_nnpriorZ/dense/kernel/Adam/Assign"
input: "^edge_nnpriorZ/dense/kernel/Adam_1/Assign"
input: "^edge_nnpriorZ/dense/kernel/Assign"
input: "^edge_nnpriorZ/dense_1/bias/Adam/Assign"
input: "^edge_nnpriorZ/dense_1/bias/Adam_1/Assign"
input: "^edge_nnpriorZ/dense_1/bias/Assign"
input: "^edge_nnpriorZ/dense_1/kernel/Adam/Assign"
input: "^edge_nnpriorZ/dense_1/kernel/Adam_1/Assign"
input: "^edge_nnpriorZ/dense_1/kernel/Assign"
input: "^g_nnpostX/dense/bias/Adam/Assign"
input: "^g_nnpostX/dense/bias/Adam_1/Assign"
input: "^g_nnpostX/dense/bias/Assign"
input: "^g_nnpostX/dense/kernel/Adam/Assign"
input: "^g_nnpostX/dense/kernel/Adam_1/Assign"
input: "^g_nnpostX/dense/kernel/Assign"
input: "^g_nnpostX/dense_1/bias/Adam/Assign"
input: "^g_nnpostX/dense_1/bias/Adam_1/Assign"
input: "^g_nnpostX/dense_1/bias/Assign"
input: "^g_nnpostX/dense_1/kernel/Adam/Assign"
input: "^g_nnpostX/dense_1/kernel/Adam_1/Assign"
input: "^g_nnpostX/dense_1/kernel/Assign"
input: "^g_nnpostZ/dense/bias/Adam/Assign"
input: "^g_nnpostZ/dense/bias/Adam_1/Assign"
input: "^g_nnpostZ/dense/bias/Assign"
input: "^g_nnpostZ/dense/kernel/Adam/Assign"
input: "^g_nnpostZ/dense/kernel/Adam_1/Assign"
input: "^g_nnpostZ/dense/kernel/Assign"
input: "^g_nnpostZ/dense_1/bias/Adam/Assign"
input: "^g_nnpostZ/dense_1/bias/Adam_1/Assign"
input: "^g_nnpostZ/dense_1/bias/Assign"
input: "^g_nnpostZ/dense_1/kernel/Adam/Assign"
input: "^g_nnpostZ/dense_1/kernel/Adam_1/Assign"
input: "^g_nnpostZ/dense_1/kernel/Assign"
input: "^g_nnpriorZ/dense/bias/Adam/Assign"
input: "^g_nnpriorZ/dense/bias/Adam_1/Assign"
input: "^g_nnpriorZ/dense/bias/Assign"
input: "^g_nnpriorZ/dense/kernel/Adam/Assign"
input: "^g_nnpriorZ/dense/kernel/Adam_1/Assign"
input: "^g_nnpriorZ/dense/kernel/Assign"
input: "^g_nnpriorZ/dense_1/bias/Adam/Assign"
input: "^g_nnpriorZ/dense_1/bias/Adam_1/Assign"
input: "^g_nnpriorZ/dense_1/bias/Assign"
input: "^g_nnpriorZ/dense_1/kernel/Adam/Assign"
input: "^g_nnpriorZ/dense_1/kernel/Adam_1/Assign"
input: "^g_nnpriorZ/dense_1/kernel/Assign"
input: "^update_GRUpostX/rnn/gru_cell/candidate/bias/Adam/Assign"
input: "^update_GRUpostX/rnn/gru_cell/candidate/bias/Adam_1/Assign"
input: "^update_GRUpostX/rnn/gru_cell/candidate/bias/Assign"
input: "^update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam/Assign"
input: "^update_GRUpostX/rnn/gru_cell/candidate/kernel/Adam_1/Assign"
input: "^update_GRUpostX/rnn/gru_cell/candidate/kernel/Assign"
input: "^update_GRUpostX/rnn/gru_cell/gates/bias/Adam/Assign"
input: "^update_GRUpostX/rnn/gru_cell/gates/bias/Adam_1/Assign"
input: "^update_GRUpostX/rnn/gru_cell/gates/bias/Assign"
input: "^update_GRUpostX/rnn/gru_cell/gates/kernel/Adam/Assign"
input: "^update_GRUpostX/rnn/gru_cell/gates/kernel/Adam_1/Assign"
input: "^update_GRUpostX/rnn/gru_cell/gates/kernel/Assign"
input: "^update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam/Assign"
input: "^update_GRUpostZ/rnn/gru_cell/candidate/bias/Adam_1/Assign"
input: "^update_GRUpostZ/rnn/gru_cell/candidate/bias/Assign"
input: "^update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam/Assign"
input: "^update_GRUpostZ/rnn/gru_cell/candidate/kernel/Adam_1/Assign"
input: "^update_GRUpostZ/rnn/gru_cell/candidate/kernel/Assign"
input: "^update_GRUpostZ/rnn/gru_cell/gates/bias/Adam/Assign"
input: "^update_GRUpostZ/rnn/gru_cell/gates/bias/Adam_1/Assign"
input: "^update_GRUpostZ/rnn/gru_cell/gates/bias/Assign"
input: "^update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam/Assign"
input: "^update_GRUpostZ/rnn/gru_cell/gates/kernel/Adam_1/Assign"
input: "^update_GRUpostZ/rnn/gru_cell/gates/kernel/Assign"
input: "^update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam/Assign"
input: "^update_GRUpriorZ/rnn/gru_cell/candidate/bias/Adam_1/Assign"
input: "^update_GRUpriorZ/rnn/gru_cell/candidate/bias/Assign"
input: "^update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam/Assign"
input: "^update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Adam_1/Assign"
input: "^update_GRUpriorZ/rnn/gru_cell/candidate/kernel/Assign"
input: "^update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam/Assign"
input: "^update_GRUpriorZ/rnn/gru_cell/gates/bias/Adam_1/Assign"
input: "^update_GRUpriorZ/rnn/gru_cell/gates/bias/Assign"
input: "^update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam/Assign"
input: "^update_GRUpriorZ/rnn/gru_cell/gates/kernel/Adam_1/Assign"
input: "^update_GRUpriorZ/rnn/gru_cell/gates/kernel/Assign"
]
